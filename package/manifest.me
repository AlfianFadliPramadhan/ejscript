/*
    manifest.me - MakeMe package manifest for Ejscript
 */

Me.load({
    /*
        Package manifest instructions
     */
    manifest: {
        home: me.dir.src,

        packages:   {
            install: {
                inherit:    'package-manifest',
                prefixes:   [ 'root', 'app', 'vapp', 'bin', 'inc', 'man' ],
                sets:       [ 'core', 'libs', 'dev', 'doc' ],
                platforms:  [ 'windows', 'unix' ],
            },
            binary: {
                inherit:    'package-manifest',
                prefixes:   [ 'root', 'app', 'vapp', 'bin', 'inc', 'man' ],
                formats:    [ 'native', 'tar' ],
                sets:       [ 'core', 'libs', 'test', 'doc', 'dev', 'package' ],
                platforms:  [ 'windows', 'macosx' ]
            },
            source: {
                inherit:    'package-manifest',
                prefixes:   [ 'root', 'src' ],
                formats:    [ 'tar' ],
                sets:       [ 'source' ],
            },
            pak: {
                inherit:    'package-manifest',
                prefixes:   [ 'src'],
                formats:    [ 'tar' ],
                sets:       [ 'pak' ],
            },
        },

        files:     [
            /* Binary Set */
            { from:        [
                    '${BIN}/ejs${EXE}',
                    '${BIN}/ejsc${EXE}',
                    '${BIN}/ejsman${EXE}',
                    '${BIN}/ejsmod${EXE}',
                    '${BIN}/ejsrun${EXE}',
                    '${BIN}/mvc${EXE}',
                    '${BIN}/utest${EXE}',
                ],
                to:         '${abin}/',
                linkin:     '${bin}',
                set:        'core',

            },{ from:        [
                    /* Don't use wild-cards for cross-generation  */
                    '${BIN}/libejs.db.sqlite${SHOBJ}',
                    '${BIN}/libejs${SHOBJ}',
                    '${BIN}/libejs.web${SHOBJ}',
                    '${BIN}/libejs.zlib${SHOBJ}',
                    '${BIN}/libhttp${SHOBJ}',
                    '${BIN}/libmpr${SHOBJ}',
                    '${BIN}/libpcre${SHOBJ}',
                    '${BIN}/libsql${SHOBJ}',
                    '${BIN}/libzlib${SHOBJ}',
                ],
                to:         '${abin}/',
                set:        'core',
                enable:     '!me.settings.static', 

            },{ from:        [
                    '${BIN}/ejs.db.mapper.mod',
                    '${BIN}/ejs.db.mod',
                    '${BIN}/ejs.db.sqlite.mod',
                    '${BIN}/ejs.mod',
                    '${BIN}/ejs.mvc.mod',
                    '${BIN}/ejs.tar.mod',
                    '${BIN}/ejs.template.mod',
                    '${BIN}/ejs.unix.mod',
                    '${BIN}/ejs.web.mod',
                    '${BIN}/ejs.zlib.mod',
                    '${BIN}/mvc.es',
                    '${BIN}/utest.es',
                    '${BIN}/utest.worker',
                ],
                to:         '${abin}/',
                set:        'core',

            },{ from:        [
                    '${BIN}/libmprssl${SHOBJ}',
                ],
                to:         '${abin}/',
                set:        'core',
                ifdef:      'ssl',
                enable:     '!me.settings.static', 

            },{ from:        [
                    'src/paks/est/ca.crt',
                ],
                to:         '${abin}/',
                set:        'core',
                ifdef:      'ssl',

            },{ from:        [
                    '${BIN}/libssl*${SHOBJ}*',
                    '${BIN}/libcrypto*${SHOBJ}*',
                ],
                to:         '${abin}/',
                set:        'core',
                enable:     "me.platform.os != 'windows'",
                ifdef:      'openssl',

            },{ from:        [
                    '${BIN}/libeay32${SHOBJ}',
                    '${BIN}/ssleay32${SHOBJ}',
                ],
                to:         '${abin}/',
                set:        'core',
                enable:     "me.platform.os == 'windows'",
                ifdef:      'openssl',

            },{ from:        [
                    '${BIN}/libest${SHOBJ}',
                ],
                to:         '${abin}/',
                set:        'core',
                ifdef:      'est',
                enable:     '!me.settings.static', 

            },{ from:        [
                    '${BIN}/libejs${SHLIB}',
                ],
                to:         '${abin}/',
                set:        'core',
                enable:     "me.platform.os == 'windows'",
                enable:     '!me.settings.static', 

            },{
                from:       'src/ejs.web/www',
                to:         '${abin}/',
                set:        'core',

            },{
                from:       [ 'src/*.h', 'src/vm/*.h', 'src/slots/*.h', 'src/paks/**.h', 'src/**.h' ],
                to:         '${vapp}/inc/',
                set:        'dev',
                linkin:     '${inc}/ejs/',

            },{
                from:       'doc/documents/man/*.1',
                to:         '${adoc}/man1/',
                set:        'doc',
                enable:     "me.platform.like == 'unix'",
                linkin:     '${man}/man1',

           }, {
                from:       [ 'package/uninstall.sh' ],
                to:         '${abin}/uninstall',
                expand:     true,
                permissions: 0755,
                set:        'core',
                enable:     "!me.generating",

            /*
                Source set
             */
            },{
                from:       ['src', 'doc', 'projects', 'package'],
                to:         '${src}/',
                exclude:    /\/old\/|\.old$|\.tmp$/,
                set:        'source',

            },{
                from:       ['Makefile', 'main.me', 'make.bat', 'package.json'],
                to:         '${src}/',
                set:        'source',

            },{
                from:       ['*.md'],
                to:         '${src}/',
                fold:       true,
                expand:     true,
                set:        'source',

            },{
                from:       ['configure'],
                to:         '${src}/',
                permissions:0755,     
                set:        'source',

            /*
                Pak set
             */
            },{
                from:       'package/ejs.me',
                to:         '${src}/ejs.me',
                set:        'pak',

            },{
                from:       [
                    'src/ejsByteCode.h',
                    'src/ejsByteCodeTable.h',
                    'src/ejs.h',
                    'src/ejs.web/ejsWeb.h',
                    'src/ejsCompiler.h',
                ],
                to:         '${src}/ejs.h',
                cat:        true, 
                filter:     /^#inc.*ejs.*$|^#inc.*ec.*$|^#inc.*customize.*$|#include.*zlib.h.*$|#inc.*ejs.zlib.slots.h.*/mg,
                header:     '#include \"me.h\"\n#if ME_COM_EJS\n\n#undef PRINTF_ATTRIBUTE\n#define PRINTF_ATTRIBUTE(x,y)\n\n#include \"osdep.h\"\n#include \"mpr.h\"\n#include \"http.h\"\n#include \"ejs.slots.h\"\n#include \"pcre.h\"\n#include \"zlib.h\"\n',
                footer:     '#endif /* ME_COM_EJS */',
                title:      '${settings.title} Library Source',
                set:        'pak',

            },{
                from:       'src/vm/ejsByteGoto.h',
                to:         '${src}/ejsByteGoto.h',
                set:        'pak',

            },{
                from:       [
                            '${INC}/ejs.cache.local.slots.h',
                            '${INC}/ejs.db.sqlite.slots.h',
                            '${INC}/ejs.slots.h',
                            '${INC}/ejs.web.slots.h',
                            '${INC}/ejs.zlib.slots.h',
                ],
                to:         '${src}/ejs.slots.h',
                cat:        true, 
                title:      '${settings.title} Object Slot Definitions',
                set:        'pak',

            },{
                from:       ['src/**.c'], 
                to:         '${src}/ejsLib.c',
                cat:        true,                                                                                         
                filter:     /^#inc.*ejs.*$|^#inc.*ec.*$|^#inc.*customize.*$|#include.*zlib.h.*$|#inc.*ejs.zlib.slots.h.*/mg,
                exclude:    /doc\.c|listing\.c|ejsmod\.c|slotGen\.c|docFiles\.c|ejs\.c$|ejsc\.c$|\/mpr|\/http|\/est|\/pcre|\/sqlite|\/zlib\/|ejs.debugger|samples|utils|ejsrun\.c/,
                header:     '#define EJS_DEFINE_OPTABLE 1\n#include \"ejs.h\"\n\n#if ME_COM_EJS',
                footer:     '#endif /* ME_COM_EJS */',
                title:      '${settings.title} Library Source',
                set:        'pak',

            },{
                from:       ['src/core/**.es', 'src/**.es'],
                to:         '${src}/ejs.es',
                cat:        true,                                                                                         
                exclude:    /\/paks\/|ejs.me|ejs.debugger|test|sample|ejspage.es|ejs.mvc/,                            
                title:      '${settings.title} Script Library',
                set:        'pak',

            },{
                from:       'src/cmd/ejs.c', 
                to:         '${src}/ejs.c',
                cat:        true,
                filter:     /^#inc.*$/mg,
                header:     '#include \"ejs.h\"',
                title:      '${settings.title} Shell Command',
                set:        'pak',

            },{
                from:       'src/cmd/ejsc.c', 
                to:         '${src}/ejsc.c',
                cat:        true,
                filter:     /^#inc.*$/mg,
                header:     '#include \"ejs.h\"',
                title:      '${settings.title} Compiler',
                set:        'pak',
            },
        ],
    },
})
