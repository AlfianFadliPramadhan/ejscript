#
#  ejs.cjs.lst -- Module Listing for ../../modules/ejs.cjs.mod
#

==============================================================================================

MODULE:   ejs.cjs <hasInitializer, >


FUNCTION:   [initializer]  ejs function __initializer__() : Void

   LOCAL:   [local-00] var block_0005_3 : Block

    0000: [0] 8d 00 00 ................... openBlock <slot: 0> <0> 
    0003: [0] 33 0a 86 02 2e ............. debug 

    # ejs.cjs/Loader.es:131     }

    0008: [0] 01 32 ...................... addNamespace <internal-475d601e756c7e7661786895bfd14cc0-1> 
    0010: [0] 01 8a 01 ................... addNamespace <ejs.cjs> 
    0013: [0] 33 0a 0a 9a 01 ............. debug 

    # ejs.cjs/Loader.es:5       module ejs.cjs {

    0018: [0] 33 0a 1c bc 01 ............. debug 

    # ejs.cjs/Loader.es:14          function require(id: String): Object

    0023: [0] 33 0a 2c a2 03 ............. debug 

    # ejs.cjs/Loader.es:22          public class Loader {

    0028: [0] 34 92 0a d2 02 ............. defineClass <var: 0x289,  public::Loader> 
    0033: [0] 24 ......................... closeBlock 
    0034: [0] 3b ......................... endCode 
    

BLOCK:      [block_0005_3-00]  block_0005_3 (Slots 0)

FUNCTION:   [require-138]  ejs.cjs function require(id: String) : Object

     ARG:   [arg-00]   private id : String

    0000: [0] 33 0a 1e 8e 02 ............. debug 

    # ejs.cjs/Loader.es:15              Loader.require(id)

    0005: [0] 50 ......................... loadGlobal 
    0006: [1] 7b c4 02 d2 02 ............. getObjName <Loader> <public> 
    0011: [1] 5b ......................... getLocalSlot0 
    0012: [2] 1c 42 00 02 ................ callObjStaticSlot <slot: 33> <0> <argc: 1> 
    0016: [0] 93 ......................... pushResult 
    0017: [1] bf ......................... returnValue 
    
VARIABLE:   [id-00]  private var id : String

CLASS:      class Loader extends Object
            #  Class Details: 39 class traits, 0 instance traits, requested slot 139

FUNCTION:   [Loader-26]  -initializer- static function Loader-initializer() : Void


    0000: [0] 33 0a 30 d6 03 ............. debug 

    # ejs.cjs/Loader.es:24              public  static var mainId

    0005: [0] 33 0a 32 a8 04 ............. debug 

    # ejs.cjs/Loader.es:25              private static var signatures = {}

    0010: [0] 8a e4 06 00 ................ newObject <type: 0x1b2,  ejs::Object> <argc: 0> <att: >
    0014: [1] bc 38 02 ................... putThisTypeSlot <slot: 28> <1> 
    0017: [0] 33 0a 34 b6 05 ............. debug 

    # ejs.cjs/Loader.es:26              private static var timestamps = {}

    0022: [0] 8a e4 06 00 ................ newObject <type: 0x1b2,  ejs::Object> <argc: 0> <att: >
    0026: [1] bc 3a 02 ................... putThisTypeSlot <slot: 29> <1> 
    0029: [0] 33 0a 36 a2 06 ............. debug 

    # ejs.cjs/Loader.es:27              private static const defaultExtensions = [".es", ".js"]

    0034: [0] 7e 0a ...................... getGlobalSlot <slot: 5> 
    0036: [1] 89 ......................... new 
    0037: [1] 39 ......................... dup 
    0038: [2] 56 c6 07 ................... loadString <.es> 
    0041: [3] c5 ......................... swap 
    0042: [3] 56 ce 07 ................... loadString <> 
    0045: [4] 44 ......................... load0 
    0046: [5] b2 ......................... putObjNameExpr 
    0047: [1] 39 ......................... dup 
    0048: [2] 56 d0 07 ................... loadString <.js> 
    0051: [3] c5 ......................... swap 
    0052: [3] 56 ce 07 ................... loadString <> 
    0055: [4] 45 ......................... load1 
    0056: [5] b2 ......................... putObjNameExpr 
    0057: [1] bc 3c 02 ................... putThisTypeSlot <slot: 30> <1> 
    0060: [0] 33 0a 38 d8 07 ............. debug 

    # ejs.cjs/Loader.es:28              private static var config

    0065: [0] 33 0a 3e aa 08 ............. debug 

    # ejs.cjs/Loader.es:31              static function init(mainId: String? = null) {

    0070: [0] 33 0a 50 8e 0a ............. debug 

    # ejs.cjs/Loader.es:40              public static function require(id: String): Object {

    0075: [0] 33 0a 74 e6 0e ............. debug 

    # ejs.cjs/Loader.es:58              public static function load(id: String, path: Path, codeReader: Function? = null): Object {

    0080: [0] 33 0a a8 01 c4 1e .......... debug 

    # ejs.cjs/Loader.es:84              public static function cached(path: Path, cachedir: Path? = null): Path {

    0086: [0] 33 0a c0 01 b2 25 .......... debug 

    # ejs.cjs/Loader.es:96              public static function wrap(code: String): String

    0092: [0] 33 0a ce 01 b2 28 .......... debug 

    # ejs.cjs/Loader.es:103             private static function locate(id: Path) {

    0098: [0] 33 0a 80 02 96 32 .......... debug 

    # ejs.cjs/Loader.es:128             public static function setConfig(newConfig): Void

    0104: [0] be ......................... return 
    
VARIABLE:   [Loader-27]  public static var mainId
VARIABLE:   [Loader-28]  [Loader,private] static var signatures
VARIABLE:   [Loader-29]  [Loader,private] static var timestamps
VARIABLE:   [Loader-30]  [Loader,private] const static var defaultExtensions
VARIABLE:   [Loader-31]  [Loader,private] static var config

FUNCTION:   [Loader-32]  internal-475d601e756c7e7661786895bfd14cc0-1 const static function init(mainId: String) : void

     ARG:   [arg-00]   private mainId : String

    0000: [0] 41 02 02 08 ................ initDefaultArgs8 <2> <4> <10> 
    0004: [0] 50 ......................... loadGlobal 
    0005: [1] 7b 98 09 02 ................ getObjName <null> <ejs> 
    0009: [1] 94 ......................... putLocalSlot0 
    0010: [0] 33 0a 40 a2 09 ............. debug 

    # ejs.cjs/Loader.es:32                  require.main = mainId

    0015: [0] 5b ......................... getLocalSlot0 
    0016: [1] 83 42 02 ................... getThisTypeSlot <slot: 33> <1> 
    0019: [2] b3 e6 09 00 ................ putObjName <main> <> 
    0023: [0] be ......................... return 
    0024: [0] 33 0a 42 f0 09 ............. debug 

    # ejs.cjs/Loader.es:33              }
    
VARIABLE:   [mainId-00]  private var mainId : String

FUNCTION:   [Loader-33]  public const static function require(id: String) : Object

     ARG:   [arg-00]   private id : String
   LOCAL:   [local-01] var path : Path
   LOCAL:   [local-02] var exports

    0000: [0] 33 0a 52 92 0b ............. debug 

    # ejs.cjs/Loader.es:41                  let path: Path = locate(id)

    0005: [0] 5b ......................... getLocalSlot0 
    0006: [1] 1d 4a 00 02 ................ callThisStaticSlot <slot: 37> <0> <argc: 1> 
    0010: [0] 93 ......................... pushResult 
    0011: [1] 95 ......................... putLocalSlot1 
    0012: [0] 33 0a 54 e2 0b ............. debug 

    # ejs.cjs/Loader.es:42                  let exports = signatures[path]

    0017: [0] 83 38 02 ................... getThisTypeSlot <slot: 28> <1> 
    0020: [1] 56 ce 07 ................... loadString <> 
    0023: [2] 5c ......................... getLocalSlot1 
    0024: [3] 7c ......................... getObjNameExpr 
    0025: [1] 96 ......................... putLocalSlot2 
    0026: [0] 33 0a 56 c8 0c ............. debug 

    # ejs.cjs/Loader.es:43                  if (!exports || path.modified > timestamps[path]) {

    0031: [0] 5d ......................... getLocalSlot2 
    0032: [1] 86 ......................... logicalNot 
    0033: [1] 39 ......................... dup 
    0034: [2] 14 10 ...................... branchTrue8 <addr: 52> 
    0036: [1] 90 ......................... pop 
    0037: [0] 5c ......................... getLocalSlot1 
    0038: [1] 7b c8 0d d2 02 ............. getObjName <modified> <public> 
    0043: [1] 83 3a 02 ................... getThisTypeSlot <slot: 29> <1> 
    0046: [2] 56 ce 07 ................... loadString <> 
    0049: [3] 5c ......................... getLocalSlot1 
    0050: [4] 7c ......................... getObjNameExpr 
    0051: [2] 29 ......................... compareGt 
    0052: [1] 13 0f ...................... branchFalse8 <addr: 69> 
    0054: [0] 33 0a 58 da 0d ............. debug 

    # ejs.cjs/Loader.es:44                      return load(id, path)

    0059: [0] 5b ......................... getLocalSlot0 
    0060: [1] 5c ......................... getLocalSlot1 
    0061: [2] 1d 44 00 04 ................ callThisStaticSlot <slot: 34> <0> <argc: 2> 
    0065: [0] 93 ......................... pushResult 
    0066: [1] bf ......................... returnValue 
    0067: [0] 3e 00 ...................... goto8 <addr: 69> 
    0069: [0] 33 0a 5c a6 0e ............. debug 

    # ejs.cjs/Loader.es:46                  return exports

    0074: [0] 5d ......................... getLocalSlot2 
    0075: [1] bf ......................... returnValue 
    
VARIABLE:   [id-00]  private var id : String
VARIABLE:   [path-01]  private var path : Path
VARIABLE:   [exports-02]  private var exports

FUNCTION:   [Loader-34]  public const static function load(id: String, path: Path, codeReader: Function) : Object

     ARG:   [arg-00]   private id : String
     ARG:   [arg-01]   private path : Path
     ARG:   [arg-02]   private codeReader : Function
   LOCAL:   [local-03] var initializer
   LOCAL:   [local-04] var code
   LOCAL:   [local-05] var cache : Path

    0000: [0] 41 02 02 08 ................ initDefaultArgs8 <2> <4> <10> 
    0004: [0] 50 ......................... loadGlobal 
    0005: [1] 7b 98 09 02 ................ getObjName <null> <ejs> 
    0009: [1] 96 ......................... putLocalSlot2 
    0010: [0] 33 0a 76 c6 10 ............. debug 

    # ejs.cjs/Loader.es:59                  let initializer, code

    0015: [0] 33 0a 78 94 11 ............. debug 

    # ejs.cjs/Loader.es:60                  if (path) {

    0020: [0] 5c ......................... getLocalSlot1 
    0021: [1] 07 e4 02 f7 f7 ............. branchFalse <addr: 204> 
    0026: [0] 33 0a 7a e6 11 ............. debug 

    # ejs.cjs/Loader.es:61                      let cache: Path = cached(path)

    0031: [0] 5c ......................... getLocalSlot1 
    0032: [1] 1d 46 00 02 ................ callThisStaticSlot <slot: 35> <0> <argc: 1> 
    0036: [0] 93 ......................... pushResult 
    0037: [1] 99 ......................... putLocalSlot5 
    0038: [0] 33 0a 7c c4 12 ............. debug 

    # ejs.cjs/Loader.es:62                      if (cache && cache.exists && cache.modified >= path.modified) {

    0043: [0] 60 ......................... getLocalSlot5 
    0044: [1] 39 ......................... dup 
    0045: [2] 13 07 ...................... branchFalse8 <addr: 54> 
    0047: [1] 90 ......................... pop 
    0048: [0] 60 ......................... getLocalSlot5 
    0049: [1] 7b e4 13 d2 02 ............. getObjName <exists> <public> 
    0054: [1] 39 ......................... dup 
    0055: [2] 13 0e ...................... branchFalse8 <addr: 71> 
    0057: [1] 90 ......................... pop 
    0058: [0] 60 ......................... getLocalSlot5 
    0059: [1] 7b c8 0d d2 02 ............. getObjName <modified> <public> 
    0064: [1] 5c ......................... getLocalSlot1 
    0065: [2] 7b c8 0d d2 02 ............. getObjName <modified> <public> 
    0070: [2] 28 ......................... compareGe 
    0071: [1] 13 15 ...................... branchFalse8 <addr: 94> 
    0073: [0] 33 0a 7e f2 13 ............. debug 

    # ejs.cjs/Loader.es:63                          initializer = global.load(cache)

    0078: [0] 50 ......................... loadGlobal 
    0079: [1] 7b dc 14 02 ................ getObjName <global> <ejs> 
    0083: [1] 60 ......................... getLocalSlot5 
    0084: [2] 1e ea 14 ce 07 02 .......... callObjName <load> <> <argc: 1> 
    0090: [0] 93 ......................... pushResult 
    0091: [1] 97 ......................... putLocalSlot3 
    0092: [0] 3e 52 ...................... goto8 <addr: 176> 
    0094: [0] 33 0a 80 01 f4 14 .......... debug 

    # ejs.cjs/Loader.es:64                      } else {

    0100: [0] 33 0a 82 01 a6 15 .......... debug 

    # ejs.cjs/Loader.es:65                          if (codeReader) {

    0106: [0] 5d ......................... getLocalSlot2 
    0107: [1] 13 0f ...................... branchFalse8 <addr: 124> 
    0109: [0] 33 0a 84 01 f2 15 .......... debug 

    # ejs.cjs/Loader.es:66                              code = codeReader(path)

    0115: [0] 5c ......................... getLocalSlot1 
    0116: [1] 1a 04 00 02 ................ callBlockSlot <slot: 2> <0> <argc: 1> 
    0120: [0] 93 ......................... pushResult 
    0121: [1] 98 ......................... putLocalSlot4 
    0122: [0] 3e 20 ...................... goto8 <addr: 156> 
    0124: [0] 33 0a 86 01 d2 16 .......... debug 

    # ejs.cjs/Loader.es:67                          } else {

    0130: [0] 33 0a 88 01 8c 17 .......... debug 

    # ejs.cjs/Loader.es:68                              code = path.readString()

    0136: [0] 5c ......................... getLocalSlot1 
    0137: [1] 18 86 01 00 ................ callObjSlot <slot: 67> <argc: 0> 
    0141: [0] 93 ......................... pushResult 
    0142: [1] 98 ......................... putLocalSlot4 
    0143: [0] 33 0a 8a 01 ee 17 .......... debug 

    # ejs.cjs/Loader.es:69                              code = wrap(code)

    0149: [0] 5f ......................... getLocalSlot4 
    0150: [1] 1d 48 00 02 ................ callThisStaticSlot <slot: 36> <0> <argc: 1> 
    0154: [0] 93 ......................... pushResult 
    0155: [1] 98 ......................... putLocalSlot4 
    0156: [0] 33 0a 8c 01 c2 18 .......... debug 

    # ejs.cjs/Loader.es:70                          }

    0162: [0] 33 0a 8e 01 ee 18 .......... debug 

    # ejs.cjs/Loader.es:71                          initializer = eval(code, cache)

    0168: [0] 5f ......................... getLocalSlot4 
    0169: [1] 60 ......................... getLocalSlot5 
    0170: [2] 17 9e 01 04 ................ callGlobalSlot <slot: 79> <argc: 2> 
    0174: [0] 93 ......................... pushResult 
    0175: [1] 97 ......................... putLocalSlot3 
    0176: [0] 33 0a 90 01 d6 19 .......... debug 

    # ejs.cjs/Loader.es:72                      }

    0182: [0] 33 0a 92 01 fa 19 .......... debug 

    # ejs.cjs/Loader.es:73                      timestamps[path] = path.modified

    0188: [0] 5c ......................... getLocalSlot1 
    0189: [1] 7b c8 0d d2 02 ............. getObjName <modified> <public> 
    0194: [1] 83 3a 02 ................... getThisTypeSlot <slot: 29> <1> 
    0197: [2] 56 ce 07 ................... loadString <> 
    0200: [3] 5c ......................... getLocalSlot1 
    0201: [4] b2 ......................... putObjNameExpr 
    0202: [0] 3e 20 ...................... goto8 <addr: 236> 
    0204: [0] 33 0a 94 01 dc 1a .......... debug 

    # ejs.cjs/Loader.es:74                  } else {

    0210: [0] 33 0a 96 01 86 1b .......... debug 

    # ejs.cjs/Loader.es:75                      code = wrap(code)

    0216: [0] 5f ......................... getLocalSlot4 
    0217: [1] 1d 48 00 02 ................ callThisStaticSlot <slot: 36> <0> <argc: 1> 
    0221: [0] 93 ......................... pushResult 
    0222: [1] 98 ......................... putLocalSlot4 
    0223: [0] 33 0a 98 01 ca 1b .......... debug 

    # ejs.cjs/Loader.es:76                      initializer = eval(code)

    0229: [0] 5f ......................... getLocalSlot4 
    0230: [1] 17 9e 01 02 ................ callGlobalSlot <slot: 79> <argc: 1> 
    0234: [0] 93 ......................... pushResult 
    0235: [1] 97 ......................... putLocalSlot3 
    0236: [0] 33 0a 9a 01 9c 1c .......... debug 

    # ejs.cjs/Loader.es:77                  }

    0242: [0] 33 0a 9c 01 b8 1c .......... debug 

    # ejs.cjs/Loader.es:78                  signatures[path] = exports = {}

    0248: [0] 8a e4 06 00 ................ newObject <type: 0x1b2,  ejs::Object> <argc: 0> <att: >
    0252: [1] 39 ......................... dup 
    0253: [2] b4 b8 0c ce 07 ............. putScopedName <exports> <> 
    0258: [1] 83 38 02 ................... getThisTypeSlot <slot: 28> <1> 
    0261: [2] 56 ce 07 ................... loadString <> 
    0264: [3] 5c ......................... getLocalSlot1 
    0265: [4] b2 ......................... putObjNameExpr 
    0266: [0] 33 0a 9e 01 90 1d .......... debug 

    # ejs.cjs/Loader.es:79                  initializer(require, exports, {id: id, path: path}, null)

    0272: [0] 83 42 02 ................... getThisTypeSlot <slot: 33> <1> 
    0275: [1] 79 b8 0c ce 07 ............. getScopedName <exports> <> 
    0280: [2] 56 00 ...................... loadString <> 
    0282: [3] 56 f0 02 ................... loadString <id> 
    0285: [4] 5b ......................... getLocalSlot0 
    0286: [5] 56 00 ...................... loadString <> 
    0288: [6] 56 88 0b ................... loadString <path> 
    0291: [7] 5c ......................... getLocalSlot1 
    0292: [8] 8a e4 06 04 00 00 .......... newObject <type: 0x1b2,  ejs::Object> <argc: 2> <att: 2 2 >
    0298: [3] 50 ......................... loadGlobal 
    0299: [4] 7b 98 09 02 ................ getObjName <null> <ejs> 
    0303: [4] 1a 06 00 08 ................ callBlockSlot <slot: 3> <0> <argc: 4> 
    0307: [0] 33 0a a0 01 a6 0e .......... debug 

    # ejs.cjs/Loader.es:80                  return exports

    0313: [0] 79 b8 0c ce 07 ............. getScopedName <exports> <> 
    0318: [1] bf ......................... returnValue 
    
VARIABLE:   [id-00]  private var id : String
VARIABLE:   [path-01]  private var path : Path
VARIABLE:   [codeReader-02]  private var codeReader : Function
VARIABLE:   [initializer-03]  private var initializer
VARIABLE:   [code-04]  private var code
VARIABLE:   [cache-05]  -hoisted-5 var cache : Path

FUNCTION:   [Loader-35]  public const static function cached(path: Path, cachedir: Path) : Path

     ARG:   [arg-00]   private path : Path
     ARG:   [arg-01]   private cachedir : Path
   LOCAL:   [local-02] var dir

    0000: [0] 41 02 02 08 ................ initDefaultArgs8 <2> <4> <10> 
    0004: [0] 50 ......................... loadGlobal 
    0005: [1] 7b 98 09 02 ................ getObjName <null> <ejs> 
    0009: [1] 95 ......................... putLocalSlot1 
    0010: [0] 33 0a aa 01 e8 1f .......... debug 

    # ejs.cjs/Loader.es:85                  config ||= App.config

    0016: [0] 83 3e 02 ................... getThisTypeSlot <slot: 31> <1> 
    0019: [1] 39 ......................... dup 
    0020: [2] 14 06 ...................... branchTrue8 <addr: 28> 
    0022: [1] 90 ......................... pop 
    0023: [0] 7e 06 ...................... getGlobalSlot <slot: 3> 
    0025: [1] 82 36 00 ................... getTypeSlot <slot: 27> <0> 
    0028: [1] bc 3e 02 ................... putThisTypeSlot <slot: 31> <1> 
    0031: [0] 33 0a ac 01 ac 20 .......... debug 

    # ejs.cjs/Loader.es:86                  if (path && config.cache.enable) {

    0037: [0] 5b ......................... getLocalSlot0 
    0038: [1] 39 ......................... dup 
    0039: [2] 13 0c ...................... branchFalse8 <addr: 53> 
    0041: [1] 90 ......................... pop 
    0042: [0] 83 3e 02 ................... getThisTypeSlot <slot: 31> <1> 
    0045: [1] 7b c4 11 00 ................ getObjName <cache> <> 
    0049: [1] 7b 8a 21 00 ................ getObjName <enable> <> 
    0053: [1] 13 59 ...................... branchFalse8 <addr: 144> 
    0055: [0] 33 0a ae 01 b6 21 .......... debug 

    # ejs.cjs/Loader.es:87                      let dir = cachedir || Path(config.directories.cache) || Path("cache")

    0061: [0] 5c ......................... getLocalSlot1 
    0062: [1] 39 ......................... dup 
    0063: [2] 14 1d ...................... branchTrue8 <addr: 94> 
    0065: [1] 90 ......................... pop 
    0066: [0] 83 3e 02 ................... getThisTypeSlot <slot: 31> <1> 
    0069: [1] 7b e2 22 00 ................ getObjName <directories> <> 
    0073: [1] 7b c4 11 00 ................ getObjName <cache> <> 
    0077: [1] 17 da 01 02 ................ callGlobalSlot <slot: 109> <argc: 1> 
    0081: [0] 93 ......................... pushResult 
    0082: [1] 39 ......................... dup 
    0083: [2] 14 09 ...................... branchTrue8 <addr: 94> 
    0085: [1] 90 ......................... pop 
    0086: [0] 56 c4 11 ................... loadString <cache> 
    0089: [1] 17 da 01 02 ................ callGlobalSlot <slot: 109> <argc: 1> 
    0093: [0] 93 ......................... pushResult 
    0094: [1] 96 ......................... putLocalSlot2 
    0095: [0] 33 0a b0 01 fa 22 .......... debug 

    # ejs.cjs/Loader.es:88                      if (dir.exists) {

    0101: [0] 5d ......................... getLocalSlot2 
    0102: [1] 7b e4 13 00 ................ getObjName <exists> <> 
    0106: [1] 13 22 ...................... branchFalse8 <addr: 142> 
    0108: [0] 33 0a b2 01 be 23 .......... debug 

    # ejs.cjs/Loader.es:89                          return Path(dir).join(md5(path)).joinExt('.mod')

    0114: [0] 5d ......................... getLocalSlot2 
    0115: [1] 17 da 01 02 ................ callGlobalSlot <slot: 109> <argc: 1> 
    0119: [0] 93 ......................... pushResult 
    0120: [1] 5b ......................... getLocalSlot0 
    0121: [2] 17 9a 01 02 ................ callGlobalSlot <slot: 77> <argc: 1> 
    0125: [1] 93 ......................... pushResult 
    0126: [2] 18 5c 02 ................... callObjSlot <slot: 46> <argc: 1> 
    0129: [0] 93 ......................... pushResult 
    0130: [1] 56 c8 24 ................... loadString <.mod> 
    0133: [2] 1e d2 24 00 02 ............. callObjName <joinExt> <> <argc: 1> 
    0138: [0] 93 ......................... pushResult 
    0139: [1] bf ......................... returnValue 
    0140: [0] 3e 00 ...................... goto8 <addr: 142> 
    0142: [0] 3e 00 ...................... goto8 <addr: 144> 
    0144: [0] 33 0a b8 01 e2 24 .......... debug 

    # ejs.cjs/Loader.es:92                  return null

    0150: [0] 50 ......................... loadGlobal 
    0151: [1] 7b 98 09 02 ................ getObjName <null> <ejs> 
    0155: [1] bf ......................... returnValue 
    
VARIABLE:   [path-00]  private var path : Path
VARIABLE:   [cachedir-01]  private var cachedir : Path
VARIABLE:   [dir-02]  -hoisted-2 var dir

FUNCTION:   [Loader-36]  public const static function wrap(code: String) : String

     ARG:   [arg-00]   private code : String

    0000: [0] 33 0a c2 01 a6 26 .......... debug 

    # ejs.cjs/Loader.es:97                  "(function(require, exports, module, system) {\n" + code + "\n})"

    0006: [0] 56 c2 27 ................... loadString <(function(require, exports, module, system) {
> 
    0009: [1] 5b ......................... getLocalSlot0 
    0010: [2] 00 ......................... add 
    0011: [1] 56 a0 28 ................... loadString <
})> 
    0014: [2] 00 ......................... add 
    0015: [1] bf ......................... returnValue 
    
VARIABLE:   [code-00]  private var code : String

FUNCTION:   [Loader-37]  [Loader,private] const static function locate(id: Path) : void

     ARG:   [arg-00]   private id : Path
   LOCAL:   [local-01] var extensions
   LOCAL:   [local-02] var dir : Path
   LOCAL:   [local-03] var ext
   LOCAL:   [local-04] var path : Path

    0000: [0] 33 0a d0 01 98 29 .......... debug 

    # ejs.cjs/Loader.es:104                 if (id.exists) {

    0006: [0] 5b ......................... getLocalSlot0 
    0007: [1] 7b e4 13 d2 02 ............. getObjName <exists> <public> 
    0012: [1] 13 0a ...................... branchFalse8 <addr: 24> 
    0014: [0] 33 0a d2 01 d2 29 .......... debug 

    # ejs.cjs/Loader.es:105                     return id

    0020: [0] 5b ......................... getLocalSlot0 
    0021: [1] bf ......................... returnValue 
    0022: [0] 3e 00 ...................... goto8 <addr: 24> 
    0024: [0] 33 0a d4 01 86 2a .......... debug 

    # ejs.cjs/Loader.es:106                 } 

    0030: [0] 33 0a d6 01 e8 1f .......... debug 

    # ejs.cjs/Loader.es:107                 config ||= App.config

    0036: [0] 83 3e 02 ................... getThisTypeSlot <slot: 31> <1> 
    0039: [1] 39 ......................... dup 
    0040: [2] 14 06 ...................... branchTrue8 <addr: 48> 
    0042: [1] 90 ......................... pop 
    0043: [0] 7e 06 ...................... getGlobalSlot <slot: 3> 
    0045: [1] 82 36 00 ................... getTypeSlot <slot: 27> <0> 
    0048: [1] bc 3e 02 ................... putThisTypeSlot <slot: 31> <1> 
    0051: [0] 33 0a da 01 a4 2a .......... debug 

    # ejs.cjs/Loader.es:109                 let extensions = config.extensions || defaultExtensions

    0057: [0] 83 3e 02 ................... getThisTypeSlot <slot: 31> <1> 
    0060: [1] 7b ac 2b 00 ................ getObjName <extensions> <> 
    0064: [1] 39 ......................... dup 
    0065: [2] 14 04 ...................... branchTrue8 <addr: 71> 
    0067: [1] 90 ......................... pop 
    0068: [0] 83 3c 02 ................... getThisTypeSlot <slot: 30> <1> 
    0071: [1] 95 ......................... putLocalSlot1 
    0072: [0] 33 0a dc 01 c2 2b .......... debug 

    # ejs.cjs/Loader.es:110                 for each (let dir: Path in App.search) {

    0078: [0] 7e 06 ...................... getGlobalSlot <slot: 3> 
    0080: [1] 7b ac 2c d2 02 ............. getObjName <search> <public> 
    0085: [1] 1e ba 2c ce 2c 00 .......... callObjName <getValues> <iterator> <argc: 0> 
    0091: [0] 93 ......................... pushResult 
    0092: [1] 39 ......................... dup 
    0093: [2] 18 34 00 ................... callObjSlot <slot: 26> <argc: 0> 
    0096: [1] 93 ......................... pushResult 
    0097: [2] 96 ......................... putLocalSlot2 
    0098: [1] 33 0a de 01 e0 2c .......... debug 

    # ejs.cjs/Loader.es:111                     for each (ext in extensions) {

    0104: [1] 5c ......................... getLocalSlot1 
    0105: [2] 1e ba 2c ce 2c 00 .......... callObjName <getValues> <iterator> <argc: 0> 
    0111: [1] 93 ......................... pushResult 
    0112: [2] 39 ......................... dup 
    0113: [3] 18 34 00 ................... callObjSlot <slot: 26> <argc: 0> 
    0116: [2] 93 ......................... pushResult 
    0117: [3] 97 ......................... putLocalSlot3 
    0118: [2] 33 0a e2 01 dc 2d .......... debug 

    # ejs.cjs/Loader.es:113                         let path: Path = Path(dir).join(id)

    0124: [2] 5d ......................... getLocalSlot2 
    0125: [3] 17 da 01 02 ................ callGlobalSlot <slot: 109> <argc: 1> 
    0129: [2] 93 ......................... pushResult 
    0130: [3] 5b ......................... getLocalSlot0 
    0131: [4] 18 5c 02 ................... callObjSlot <slot: 46> <argc: 1> 
    0134: [2] 93 ......................... pushResult 
    0135: [3] 98 ......................... putLocalSlot4 
    0136: [2] 33 0a e4 01 cc 2e .......... debug 

    # ejs.cjs/Loader.es:114                         path = path.joinExt(ext)

    0142: [2] 5f ......................... getLocalSlot4 
    0143: [3] 5e ......................... getLocalSlot3 
    0144: [4] 18 5e 02 ................... callObjSlot <slot: 47> <argc: 1> 
    0147: [2] 93 ......................... pushResult 
    0148: [3] 98 ......................... putLocalSlot4 
    0149: [2] 33 0a e6 01 a6 2f .......... debug 

    # ejs.cjs/Loader.es:115                         if (path.exists) {

    0155: [2] 5f ......................... getLocalSlot4 
    0156: [3] 7b e4 13 d2 02 ............. getObjName <exists> <public> 
    0161: [3] 13 0a ...................... branchFalse8 <addr: 173> 
    0163: [2] 33 0a e8 01 f4 2f .......... debug 

    # ejs.cjs/Loader.es:116                             return path

    0169: [2] 5f ......................... getLocalSlot4 
    0170: [3] bf ......................... returnValue 
    0171: [0] 3e 00 ...................... goto8 <addr: 173> 
    0173: [0] 3e c1 ...................... goto8 <addr: 112> 
    0175: [0] 90 ......................... pop 
    0176: [-1] 3e aa ...................... goto8 <addr: 92> 
    0178: [-1] 90 ......................... pop 
    0179: [-2] 33 0a f0 01 bc 30 .......... debug 

    # ejs.cjs/Loader.es:120                 throw new IOError("Can't find module \"" + id + "\"")

    0185: [-2] 7e 2e ...................... getGlobalSlot <slot: 23> 
    0187: [-1] 89 ......................... new 
    0188: [-1] 56 c0 31 ................... loadString <Can't find module "> 
    0191: [0] 5b ......................... getLocalSlot0 
    0192: [1] 00 ......................... add 
    0193: [0] 56 e8 31 ................... loadString <"> 
    0196: [1] 00 ......................... add 
    0197: [0] 20 02 ...................... callConstructor <argc: 1> 
    0199: [-1] c6 ......................... throw 
    0200: [-1] 54 ......................... loadNull 
    0201: [0] bf ......................... returnValue 
    0202: [0] 33 0a f2 01 f0 09 .......... debug 

    # ejs.cjs/Loader.es:121             }
    

#
#  Exception Section
#    Kind     TryStart TryEnd  HandlerStart  HandlerEnd   CatchType
#
0   iteration    113     116        175          175       StopIteration
1   iteration     93      96        178          178       StopIteration

VARIABLE:   [id-00]  private var id : Path
VARIABLE:   [extensions-01]  private var extensions
VARIABLE:   [dir-02]  -hoisted-2 var dir : Path
VARIABLE:   [ext-03]  -hoisted-3 var ext
VARIABLE:   [path-04]  -hoisted-3 var path : Path

FUNCTION:   [Loader-38]  public const static function setConfig(newConfig) : Void

     ARG:   [arg-00]   private newConfig

    0000: [0] 33 0a 82 02 8a 33 .......... debug 

    # ejs.cjs/Loader.es:129                 config = newConfig

    0006: [0] 5b ......................... getLocalSlot0 
    0007: [1] bc 3e 02 ................... putThisTypeSlot <slot: 31> <1> 
    0010: [0] be ......................... return 
    
VARIABLE:   [newConfig-00]  private var newConfig

----------------------------------------------------------------------------------------------

#
#  Global slot assignments (Num prop 140)
#
0138    ejs.cjs function require
0139    public var Loader: Type

#
#  Initializer slot assignments (Num prop 0)
#

#
#  Class slot assignments for the "Loader" class (Num slots 39, num inherited 26)
#
0000    public function constructor
0001    ejs function length
0002    public function prototype
0003    public function clone
0004    reserved slot for base class property
0005    reserved slot for base class property
0006    reserved slot for base class property
0007    reserved slot for base class property
0008    iterator function get
0009    reserved slot for base class property
0010    reserved slot for base class property
0011    reserved slot for base class property
0012    iterator function getValues
0013    public function hasOwnProperty
0014    reserved slot for base class property
0015    reserved slot for base class property
0016    public function isPrototypeOf
0017    reserved slot for base class property
0018    reserved slot for base class property
0019    reserved slot for base class property
0020    public function propertyIsEnumerable
0021    reserved slot for base class property
0022    public function toJSON
0023    public function toLocaleString
0024    public function toString
0025    public function valueOf
0026    -initializer- function Loader-initializer
0027    public var mainId
0028    [Loader,private] var signatures
0029    [Loader,private] var timestamps
0030    [Loader,private] var defaultExtensions
0031    [Loader,private] var config
0032    internal-475d601e756c7e7661786895bfd14cc0-1 function init
0033    public function require
0034    public function load
0035    public function cached
0036    public function wrap
0037    [Loader,private] function locate
0038    public function setConfig

#
#  Instance slot assignments for the "Loader" class (Num prop 0, num inherited 0)
#

----------------------------------------------------------------------------------------------
#
#  Constant Pool (size 3547 bytes)
#
0000   ""
0001   "ejs"
0002   "ejs.cjs/Loader.es"
0003   "}"
0004   "internal-475d601e756c7e7661786895bfd14cc0-1"
0005   "ejs.cjs"
0006   "module ejs.cjs {"
0007   "    function require(id: String): Object"
0008   "        Loader.require(id)"
0009   "Loader"
0010   "public"
0011   "require"
0012   "id"
0013   "private"
0014   "String"
0015   "Object"
0016   "    public class Loader {"
0017   "        public  static var mainId"
0018   "mainId"
0019   "        private static var signatures = {}"
0020   "signatures"
0021   "[Loader,private]"
0022   "        private static var timestamps = {}"
0023   "timestamps"
0024   "        private static const defaultExtensions = [".es", ".js"]"
0025   "defaultExtensions"
0026   ".es"
0027   ""
0028   ".js"
0029   "        private static var config"
0030   "config"
0031   "        static function init(mainId: String? = null) {"
0032   "null"
0033   "            require.main = mainId"
0034   "main"
0035   "        }"
0036   "init"
0037   "        public static function require(id: String): Object {"
0038   "path"
0039   "            let path: Path = locate(id)"
0040   "            let exports = signatures[path]"
0041   "exports"
0042   "            if (!exports || path.modified > timestamps[path]) {"
0043   "modified"
0044   "                return load(id, path)"
0045   "            return exports"
0046   "Path"
0047   "        public static function load(id: String, path: Path, codeReader: Function? = null): Object {"
0048   "initializer"
0049   "            let initializer, code"
0050   "code"
0051   "            if (path) {"
0052   "cache"
0053   "-hoisted-5"
0054   "                let cache: Path = cached(path)"
0055   "                if (cache && cache.exists && cache.modified >= path.modified) {"
0056   "exists"
0057   "                    initializer = global.load(cache)"
0058   "global"
0059   "load"
0060   "                } else {"
0061   "                    if (codeReader) {"
0062   "                        code = codeReader(path)"
0063   "                    } else {"
0064   "                        code = path.readString()"
0065   "                        code = wrap(code)"
0066   "                    }"
0067   "                    initializer = eval(code, cache)"
0068   "                }"
0069   "                timestamps[path] = path.modified"
0070   "            } else {"
0071   "                code = wrap(code)"
0072   "                initializer = eval(code)"
0073   "            }"
0074   "            signatures[path] = exports = {}"
0075   "            initializer(require, exports, {id: id, path: path}, null)"
0076   "codeReader"
0077   "Function"
0078   "        public static function cached(path: Path, cachedir: Path? = null): Path {"
0079   "            config ||= App.config"
0080   "            if (path && config.cache.enable) {"
0081   "enable"
0082   "dir"
0083   "-hoisted-2"
0084   "                let dir = cachedir || Path(config.directories.cache) || Path("cache")"
0085   "directories"
0086   "                if (dir.exists) {"
0087   "                    return Path(dir).join(md5(path)).joinExt('.mod')"
0088   ".mod"
0089   "joinExt"
0090   "            return null"
0091   "cached"
0092   "cachedir"
0093   "        public static function wrap(code: String): String"
0094   "            "(function(require, exports, module, system) {\n" + code + "\n})""
0095   "(function(require, exports, module, system) {
"
0096   "
})"
0097   "wrap"
0098   "        private static function locate(id: Path) {"
0099   "            if (id.exists) {"
0100   "                return id"
0101   "            } "
0102   "            let extensions = config.extensions || defaultExtensions"
0103   "extensions"
0104   "            for each (let dir: Path in App.search) {"
0105   "search"
0106   "getValues"
0107   "iterator"
0108   "                for each (ext in extensions) {"
0109   "ext"
0110   "-hoisted-3"
0111   "                    let path: Path = Path(dir).join(id)"
0112   "                    path = path.joinExt(ext)"
0113   "                    if (path.exists) {"
0114   "                        return path"
0115   "            throw new IOError("Can't find module \"" + id + "\"")"
0116   "Can't find module ""
0117   """
0118   "locate"
0119   "StopIteration"
0120   "        public static function setConfig(newConfig): Void"
0121   "            config = newConfig"
0122   "setConfig"
0123   "newConfig"
0124   "Void"
0125   "Loader-initializer"
0126   "-initializer-"
0127   "constructor"
0128   "length"
0129   "Number"
0130   "prototype"
0131   "clone"
0132   "get"
0133   "Iterator"
0134   "hasOwnProperty"
0135   "Boolean"
0136   "isPrototypeOf"
0137   "propertyIsEnumerable"
0138   "toJSON"
0139   "toLocaleString"
0140   "toString"
0141   "valueOf"
0142   "block_0005_3"
0143   "-block-"
0144   "__initializer__"
