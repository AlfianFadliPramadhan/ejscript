/*
    bit.bit -- Bit File for ejs.bit
 */

Bit.load({

    targets: {
        'bit.es': {
            path: '${BIN}/bit.es',
            files: [ 'bit.es' ],
            precious: true,
            build: "
                trace('Export', bit.target.files)
                cp('bit.es', bit.dir.bin)
            ",
            'generate-nmake': "copy ${WIN_HOME}\\bit.es ${WIN_BIN}",
            'generate-sh': "cp ${HOME}/bit.es ${BIN}",
        },

        'bit.exe': {
            type: 'exe',
            path: '${BIN}/bit${EXE}',
            sources: [ 
                '${SRC}/src/cmd/ejsrun.c',
                '${SRC}/src/jems/ejs.zlib/src/*.c' 
            ],
            static: true,
            active: true,
            precious: true,
            depends: ['libejs',  'zlib'],
        },

        'utest.es': {
            path: '${BIN}/utest.es',
            files: [ 'utest.es' ],
            build: "
                trace('Export', bit.target.files)
                cp('utest.es', bit.dir.bin)
            ",
            'generate-nmake': "copy ${WIN_HOME}\\bit.es ${WIN_BIN}",
            'generate-sh': "cp ${HOME}/bit.es ${BIN}",
        },

        'utest.exe': {
            type: 'file',
            path: '${BIN}/utest${EXE}',
            files: [ '${BIN}/ejsrun${EXE}' ],
            depends: ['ejsrun'],
        },

        bits: {
            path: '${LIB}/bits',
            files: [ 'bits/**' ],
            precious: true,
            build: "
                trace('Copy', 'Bit bits')
                rmdir(bit.dir.lib.join('bits'))
                mkdir(bit.dir.lib.join('bits'))
                cp('bits', bit.dir.lib)
            "
            'generate-nmake': "\
                -rd /Q /S ${WIN_LIB}\\bits
                -md ${WIN_LIB}\\bits
                xcopy /S /Y ${WIN_HOME}\\bits ${WIN_LIB}\\bits
            ",
            'generate-sh': "\
                rm -fr ${LIB}/bits
                cp -r ${HOME}/bits ${LIB}
            ",
        },
	},
})
