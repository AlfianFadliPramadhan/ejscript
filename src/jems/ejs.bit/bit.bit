/*
    bit.bit -- Bit File for ejs.bit
 */

Bit.load({

    targets: {
        'bit.es': {
            path: '${BIN}/bit.es',
            files: [ 'bit.es' ],
            precious: true,
            build: "
                trace('Export', 'bit.es')
                cp('bit.es', bit.dir.bin)
            ",
            'generate-nmake': 'copy "bit.es" "${WIN_BIN}"',
            'generate-sh': "cp bit.es ${BIN}",
        },

        'bit': {
            type: 'exe',
            path: '${BIN}/bit${EXE}',
            sources: [ 
                '${SRC}/src/cmd/ejsrun.c',
                '${SRC}/src/jems/ejs.zlib/*.c' 
            ],
            static: true,
            active: true,
            precious: true,
            depends: ['libejs',  'zlib', 'bits', 'bit.es'],
        },

        'utest.es': {
            path: '${BIN}/utest.es',
            files: [ 'utest.es' ],
            build: "
                trace('Export', bit.target.files)
                cp('utest.es', bit.dir.bin)
            ",
            'generate-nmake': 'copy "bit.es" "${WIN_BIN}"',
            'generate-sh': "cp bit.es ${BIN}",
        },

        'utest.exe': {
            type: 'file',
            path: '${BIN}/utest${EXE}',
            files: [ '${BIN}/ejsrun${EXE}' ],
            depends: ['ejsrun'],
        },

        bits: {
            path: '${LIB}/bits',
            files: [ 'bits/**' ],
            precious: true,
            build: "
                trace('Copy', 'Bit bits')
                rmdir(bit.dir.lib.join('bits'))
                mkdir(bit.dir.lib.join('bits'))
                cp('bits', bit.dir.lib)
            "
            'generate-nmake': '\
                if exist "${WIN_LIB}\\bits" rd /Q /S "${WIN_LIB}\\bits"
                if not exist "${WIN_LIB}\\bits" md "${WIN_LIB}\\bits"
                xcopy /S /Y "bits" "${WIN_LIB}\\bits"
            ',
            'generate-sh': "\
                rm -fr ${LIB}/bits
                cp -r bits ${LIB}
            ",
        },
	},
})
