/*
    local.bit -- Top Bit File for managing a set of standard repositories
 */

Bit.load({
    settings: {
        stable: ['tools', 'mpr.stable', 'ejs.stable', 'appweb.stable'],
        master: ['mpr', 'http', 'sqlite', 'pcre', 'ejs', 'appweb'],
    },

    targets: {
        check: {
            action: "
                for each (rep in (bit.settings.master + bit.settings.stable)) {
                    let result = run('git status', {dir: rep})
                    if (!result.contains('working directory clean')) {
                        trace('Check', rep + '\n' + result)
                    } else {
                        trace('Check', rep + ' is clean')
                    }
                }
            ",
        },
        make: {
            build: "
                for each (rep in bit.settings.master) {
                    trace('Check', rep)
                    let result = run('git pull origin master', {dir: rep})
                    if (!result.contains('Already up-to-date')) {
                        trace('Update', rep)
                    }
                    run('bit sync build package', {dir: rep, show: true})
                }
                for each (rep in bit.settings.stable) {
                    trace('Check', rep)
                    let result = run('git pull origin master', {dir: rep})
                    if (!result.contains('Already up-to-date')) {
                        trace('Update', rep)
                    }
                    run('make sync compile', {dir: rep, show: true})
                }
            ",
        },

        test: {
            action: "
                for each (rep in bit.settings.master) {
                    run('bit test', {dir: rep})
                }
                for each (rep in bit.settings.stable) {
                    run('make BUILD_DEPTH=2 test', {dir: rep, show: true})
                }
            ",
        },

        longevity: {
            action: "
                for (i in 1000) {
                    for each (rep in bit.settings.master) {
                        run('bit test', {dir: rep, show: true})
                    }
                    for each (rep in bit.settings.stable) {
                        run('make BUILD_DEPTH=2 test', {dir: rep, show: true})
                    }
            ",
        },
    },
})
