/*
    vxworks.bit -- VxWorks Settings
 */
Bit.load({
    blend: [    
        'gcc.bit',
    ],
    ext: {
        exe:   'out',
        lib:   'a',
        res:   'res',
        o:      'o',
        shlib: 'out',
        shobj: 'out',
    },

    prefixes: {
        config:     '/etc/${settings.product}',
        product:    '/usr/lib/${settings.product}',
        productver: '${prefixes.product}/${settings.version}',
        bin:        '${prefixes.productver}/${platform.configuration}/bin',
        inc:        '${prefixes.productver}/${platform.configuration}/inc',
        log:        '/var/log/${settings.product}',
        spool:      '/var/spool/${settings.product}',
        src:        '/usr/src/${settings.product}-${settings.version}',
        web:        '/var/www/${settings.product}-default',
    },

    settings: {
        /* Order matters */
        '+required': [ 'vxworks', 'compiler', 'lib', 'link' ],
    },

    defaults: {
        '+defines': [
            '-DVXWORKS',
            '-DRW_MULTI_THREAD',
            '-D_GNU_TOOL',
        ],
        '+compiler': [
            '-fno-builtin',
             '-fno-defer-pop',
             '-fvolatile',
        ],
        '+libraries': [ 'gcc' ],
        '+libpaths': [ ],
        '+linker': [ '-Wl,-r' ],
        scripts: {
            '+preblend': "
                //  TODO - move to pack
                let defaults = bit.defaults
                let arch = bit.platform.arch
                let cpu
                if (arch == 'i386') {
                    cpu = 'I80386'
                } else if (arch == 'i486') {
                    cpu = 'I80486'
                } else if (arch.match(/^i.86$|^x86$/)) {
                    cpu = 'PENTIUM'
                } else {
                    cpu = arch.toUpper()
                }
                if (arch.match(/mips/)) {
                    /* Don't use mips global pointer */
                    defaults.compiler.push('-G 0')
                }
                defaults.defines.push('-DCPU=' + cpu)
                defaults.includes += bit.packs.vxworks.includes
                defaults.libpaths.push(bit.dir.lib)
            ",
        },
    },
    rules: {
        'c->o':   '${packs.compiler.path} -c -o ${OUT} ${CFLAGS} ${DEFINES} ${INCLUDES} ${PREPROCESS} ${IN}',
        'cpp->o': '${packs.compiler.path} -c -o ${OUT} ${CFLAGS} ${DEFINES} ${INCLUDES} ${PREPROCESS} ${IN}',
        'lib':    '${packs.compiler.path} -r -o ${OUT} ${LDFLAGS} ${LIBPATHS} ${IN} ${LIBS}'
        'a':      '${packs.lib.path} -cqv ${OUT} ${IN}'
        'exe':    '${packs.compiler.path} -o ${OUT} ${LDFLAGS} ${LIBPATHS} ${IN} ${LIBS} ${LDFLAGS}'
        'gui':    '${packs.compiler.path} -o ${OUT} ${LDFLAGS} ${LIBPATHS} ${IN} ${LIBS} ${LDFLAGS}'
    },
})
