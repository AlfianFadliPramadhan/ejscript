#
#  ejs.web.template.lst -- Module Listing for ../../modules/ejs.web.template.mod
#

==============================================================================================

MODULE:   ejs.web.template <hasInitializer, >


FUNCTION:   [initializer]  ejs function __initializer__() : Void

   LOCAL:   [local-00] var block_0005_514 : Block
   LOCAL:   [local-01] var block_0005_516 : Block

    0000: [0] 8d 00 00 ................... openBlock <slot: 0> <0> 
    0003: [0] 33 2a 5a 64 ................ debug 

    # ejs.web.template/Template.es:45 }

    0007: [0] 01 68 ...................... addNamespace <internal-c79397ecb43e3e73d583b8b269c71b7f-24> 
    0009: [0] 01 c2 01 ................... addNamespace <ejs.web.template> 
    0012: [0] 33 2a 0a e4 01 ............. debug 

    # ejs.web.template/Template.es:5 module ejs.web.template  {

    0017: [0] 33 2a 0c 9a 02 ............. debug 

    # ejs.web.template/Template.es:6     require ejs.cjs

    0022: [0] 01 0a ...................... addNamespace <ejs.cjs> 
    0024: [0] 33 2a 0e c2 02 ............. debug 

    # ejs.web.template/Template.es:7     require ejs.web

    0029: [0] 01 1a ...................... addNamespace <ejs.web> 
    0031: [0] 33 2a 3a ea 02 ............. debug 

    # ejs.web.template/Template.es:29     public class Template {

    0036: [0] 34 8a 0d b4 03 ............. defineClass <var: 0x345,  public::Template> 
    0041: [0] 24 ......................... closeBlock 
    0042: [0] 8d 02 00 ................... openBlock <slot: 1> <0> 
    0045: [0] 33 f0 0e d8 04 64 .......... debug 

    # ejs.web.template/TemplateParser.es:300 }

    0051: [0] 01 b6 0f ................... addNamespace <internal-4a3b8e4e55be68b33efb70af76d45738-25> 
    0054: [0] 01 c2 01 ................... addNamespace <ejs.web.template> 
    0057: [0] 33 f0 0e 0a e4 01 .......... debug 

    # ejs.web.template/TemplateParser.es:5 module ejs.web.template  {

    0063: [0] 33 f0 0e 40 90 10 .......... debug 

    # ejs.web.template/TemplateParser.es:32     public class TemplateParser {

    0069: [0] 34 f2 25 b4 03 ............. defineClass <var: 0x979,  public::TemplateParser> 
    0074: [0] 33 f0 0e c2 04 f2 80 01 .... debug 

    # ejs.web.template/TemplateParser.es:289     class Token {

    0082: [0] 34 f2 c6 01 c2 01 .......... defineClass <var: 0x31b9,  ejs.web.template::Token> 
    0088: [0] 24 ......................... closeBlock 
    0089: [0] 3b ......................... endCode 
    

BLOCK:      [block_0005_514-00]  block_0005_514 (Slots 0)

BLOCK:      [block_0005_516-01]  block_0005_516 (Slots 0)

CLASS:      class Template extends Object
            #  Class Details: 27 class traits, 0 instance traits, requested slot 188

FUNCTION:   [Template-26]  public const static function load(request: Request) : Object

     ARG:   [arg-00]   private request : Request
   LOCAL:   [local-01] var path
   LOCAL:   [local-02] var --fun_20980--697345695-- : Function

    0000: [0] 33 2a 4a 98 05 ............. debug 

    # ejs.web.template/Template.es:37             let path = request.dir.join(request.pathInfo.slice(1))

    0005: [0] 5b ......................... getLocalSlot0 
    0006: [1] 7b 9e 06 b4 03 ............. getObjName <dir> <public> 
    0011: [1] 5b ......................... getLocalSlot0 
    0012: [2] 7b a6 06 b4 03 ............. getObjName <pathInfo> <public> 
    0017: [2] 45 ......................... load1 
    0018: [3] 18 6e 02 ................... callObjSlot <slot: 55> <argc: 1> 
    0021: [1] 93 ......................... pushResult 
    0022: [2] 18 5c 02 ................... callObjSlot <slot: 46> <argc: 1> 
    0025: [0] 93 ......................... pushResult 
    0026: [1] 95 ......................... putLocalSlot1 
    0027: [0] 33 2a 4c b8 06 ............. debug 

    # ejs.web.template/Template.es:38             Loader.setConfig(request.config)

    0032: [0] 50 ......................... loadGlobal 
    0033: [1] 7b 92 07 b4 03 ............. getObjName <Loader> <public> 
    0038: [1] 5b ......................... getLocalSlot0 
    0039: [2] 7b a0 07 b4 03 ............. getObjName <config> <public> 
    0044: [2] 1c 4c 00 02 ................ callObjStaticSlot <slot: 38> <0> <argc: 1> 
    0048: [0] 33 2a 4e ae 07 ............. debug 

    # ejs.web.template/Template.es:39             return Loader.load(path, path, function (path) {

    0053: [0] 35 04 00 ................... defineFunction <slot: 2> <0> 
    0056: [0] 33 2a 4e ae 07 ............. debug 

    # ejs.web.template/Template.es:39             return Loader.load(path, path, function (path) {

    0061: [0] 33 2a 54 ae 07 ............. debug 

    # ejs.web.template/Template.es:42             return Loader.load(path, path, function (path) {

    0066: [0] 33 2a 4e ae 07 ............. debug 

    # ejs.web.template/Template.es:39             return Loader.load(path, path, function (path) {

    0071: [0] 50 ......................... loadGlobal 
    0072: [1] 7b 92 07 b4 03 ............. getObjName <Loader> <public> 
    0077: [1] 5c ......................... getLocalSlot1 
    0078: [2] 5c ......................... getLocalSlot1 
    0079: [3] 33 2a 54 f4 0a ............. debug 

    # ejs.web.template/Template.es:42             })

    0084: [3] 5d ......................... getLocalSlot2 
    0085: [4] 1c 44 00 06 ................ callObjStaticSlot <slot: 34> <0> <argc: 3> 
    0089: [0] 93 ......................... pushResult 
    0090: [1] bf ......................... returnValue 
    
VARIABLE:   [request-00]  private var request : Request
VARIABLE:   [path-01]  private var path

FUNCTION:   [--fun_20980--697345695---02]  private function --fun_20980--697345695--(path) : void

     ARG:   [arg-00]   private path
   LOCAL:   [local-01] var data

    0000: [0] 33 2a 50 b2 08 ............. debug 

    # ejs.web.template/Template.es:40                 let data = TemplateParser().build(path.readString())

    0005: [0] 1f bc 09 b4 03 00 .......... callScopedName <TemplateParser> <public> <argc: 0> 
    0011: [0] 93 ......................... pushResult 
    0012: [1] 5b ......................... getLocalSlot0 
    0013: [2] 1e da 09 00 00 ............. callObjName <readString> <> <argc: 0> 
    0018: [1] 93 ......................... pushResult 
    0019: [2] 18 36 02 ................... callObjSlot <slot: 27> <argc: 1> 
    0022: [0] 93 ......................... pushResult 
    0023: [1] 95 ......................... putLocalSlot1 
    0024: [0] 33 2a 52 f0 09 ............. debug 

    # ejs.web.template/Template.es:41                 return Loader.wrap(data)

    0029: [0] 50 ......................... loadGlobal 
    0030: [1] 7b 92 07 b4 03 ............. getObjName <Loader> <public> 
    0035: [1] 5c ......................... getLocalSlot1 
    0036: [2] 1c 48 00 02 ................ callObjStaticSlot <slot: 36> <0> <argc: 1> 
    0040: [0] 93 ......................... pushResult 
    0041: [1] bf ......................... returnValue 
    
VARIABLE:   [path-00]  private var path
VARIABLE:   [data-01]  private var data

CLASS:      class TemplateParser extends Object
            #  Class Details: 32 class traits, 8 instance traits, requested slot 189

FUNCTION:   [TemplateParser-26]  -constructor- function TemplateParser() : void


    0000: [0] 56 ac 12 ................... loadString <__ejs:CONTENT:ejs__> 
    0003: [1] 57 ......................... loadThis 
    0004: [2] b3 de 11 fa 11 ............. putObjName <ContentMarker> <[TemplateParser,private]> 
    0009: [0] 7e e2 01 ................... getGlobalSlot <slot: 113> 
    0012: [1] 89 ......................... new 
    0013: [1] 57 ......................... loadThis 
    0014: [2] 7b de 11 fa 11 ............. getObjName <ContentMarker> <[TemplateParser,private]> 
    0019: [2] 20 02 ...................... callConstructor <argc: 1> 
    0021: [1] 57 ......................... loadThis 
    0022: [2] b3 e6 13 fa 11 ............. putObjName <ContentPattern> <[TemplateParser,private]> 
    0027: [0] 44 ......................... load0 
    0028: [1] 57 ......................... loadThis 
    0029: [2] b3 ae 15 fa 11 ............. putObjName <pos> <[TemplateParser,private]> 
    0034: [0] 44 ......................... load0 
    0035: [1] 57 ......................... loadThis 
    0036: [2] b3 8c 16 fa 11 ............. putObjName <lineNumber> <[TemplateParser,private]> 
    0041: [0] 56 fa 17 ................... loadString <require ejs.web

exports.app = function (request: Request) {
> 
    0044: [1] 33 f0 0e 52 f6 18 .......... debug 

    # ejs.web.template/TemplateParser.es:41             "    View(request).render(function(request: Request) {\n"

    0050: [1] 56 82 1a ................... loadString <    View(request).render(function(request: Request) {
> 
    0053: [2] 00 ......................... add 
    0054: [1] 33 f0 0e 50 a2 16 .......... debug 

    # ejs.web.template/TemplateParser.es:40         private const Header = "require ejs.web\n\nexports.app = function (request: Request) {\n" + 

    0060: [1] 57 ......................... loadThis 
    0061: [2] b3 ec 17 fa 11 ............. putObjName <Header> <[TemplateParser,private]> 
    0066: [0] 56 d4 1b ................... loadString <
})
}
> 
    0069: [1] 57 ......................... loadThis 
    0070: [2] b3 c6 1b fa 11 ............. putObjName <Footer> <[TemplateParser,private]> 
    0075: [0] 56 e2 1c ................... loadString <require ejs.web
> 
    0078: [1] 57 ......................... loadThis 
    0079: [2] b3 ce 1c fa 11 ............. putObjName <MvcHeader> <[TemplateParser,private]> 
    0084: [0] be ......................... return 
    

FUNCTION:   [TemplateParser-27]  public const function build(script: String, options: Object) : String

     ARG:   [arg-00]   private script : String
     ARG:   [arg-01]   private options : Object

    0000: [0] 41 02 02 07 ................ initDefaultArgs8 <2> <4> <9> 
    0004: [0] 8a e4 06 00 ................ newObject <type: 0x1b2,  ejs::Object> <argc: 0> <att: >
    0008: [1] 95 ......................... putLocalSlot1 
    0009: [0] 33 f0 0e 6c 9c 1e .......... debug 

    # ejs.web.template/TemplateParser.es:54             Header + parse(script, options) + Footer

    0015: [0] 57 ......................... loadThis 
    0016: [1] 7b ec 17 fa 11 ............. getObjName <Header> <[TemplateParser,private]> 
    0021: [1] 5b ......................... getLocalSlot0 
    0022: [2] 5c ......................... getLocalSlot1 
    0023: [3] 19 3a 04 ................... callThisSlot <slot: 29> <argc: 2> 
    0026: [1] 93 ......................... pushResult 
    0027: [2] 00 ......................... add 
    0028: [1] 57 ......................... loadThis 
    0029: [2] 7b c6 1b fa 11 ............. getObjName <Footer> <[TemplateParser,private]> 
    0034: [2] 00 ......................... add 
    0035: [1] bf ......................... returnValue 
    
VARIABLE:   [script-00]  private var script : String
VARIABLE:   [options-01]  private var options : Object

FUNCTION:   [TemplateParser-28]  public const function buildView(name: String, script: String, options: Object) : String

     ARG:   [arg-00]   private name : String
     ARG:   [arg-01]   private script : String
     ARG:   [arg-02]   private options : Object

    0000: [0] 41 02 02 07 ................ initDefaultArgs8 <2> <4> <9> 
    0004: [0] 8a e4 06 00 ................ newObject <type: 0x1b2,  ejs::Object> <argc: 0> <att: >
    0008: [1] 96 ......................... putLocalSlot2 
    0009: [0] 33 f0 0e 84 01 e2 20 ....... debug 

    # ejs.web.template/TemplateParser.es:66             return MvcHeader + "public dynamic class " + name + "View extends View {\n\n" +

    0016: [0] 33 f0 0e 8e 01 9a 22 ....... debug 

    # ejs.web.template/TemplateParser.es:71                 parse(script, options) + "\n    }\n}\n"

    0023: [0] 33 f0 0e 8c 01 8a 23 ....... debug 

    # ejs.web.template/TemplateParser.es:70                 "    public override function render(request: Request) {\n" + 

    0030: [0] 33 f0 0e 8a 01 a8 24 ....... debug 

    # ejs.web.template/TemplateParser.es:69                 "    }\n\n" + 

    0037: [0] 33 f0 0e 88 01 e6 24 ....... debug 

    # ejs.web.template/TemplateParser.es:68                 "        super(request)\n" +

    0044: [0] 33 f0 0e 86 01 c0 25 ....... debug 

    # ejs.web.template/TemplateParser.es:67                 "    function " + name + "View(request: Request) {\n" +

    0051: [0] 33 f0 0e 84 01 e2 20 ....... debug 

    # ejs.web.template/TemplateParser.es:66             return MvcHeader + "public dynamic class " + name + "View extends View {\n\n" +

    0058: [0] 57 ......................... loadThis 
    0059: [1] 7b ce 1c fa 11 ............. getObjName <MvcHeader> <[TemplateParser,private]> 
    0064: [1] 56 d0 26 ................... loadString <public dynamic class > 
    0067: [2] 00 ......................... add 
    0068: [1] 5b ......................... getLocalSlot0 
    0069: [2] 00 ......................... add 
    0070: [1] 56 fc 26 ................... loadString <View extends View {

> 
    0073: [2] 00 ......................... add 
    0074: [1] 33 f0 0e 86 01 c0 25 ....... debug 

    # ejs.web.template/TemplateParser.es:67                 "    function " + name + "View(request: Request) {\n" +

    0081: [1] 56 a8 27 ................... loadString <    function > 
    0084: [2] 00 ......................... add 
    0085: [1] 5b ......................... getLocalSlot0 
    0086: [2] 00 ......................... add 
    0087: [1] 56 c4 27 ................... loadString <View(request: Request) {
> 
    0090: [2] 00 ......................... add 
    0091: [1] 33 f0 0e 88 01 e6 24 ....... debug 

    # ejs.web.template/TemplateParser.es:68                 "        super(request)\n" +

    0098: [1] 56 f8 27 ................... loadString <        super(request)
> 
    0101: [2] 00 ......................... add 
    0102: [1] 33 f0 0e 8a 01 a8 24 ....... debug 

    # ejs.web.template/TemplateParser.es:69                 "    }\n\n" + 

    0109: [1] 56 a8 28 ................... loadString <    }

> 
    0112: [2] 00 ......................... add 
    0113: [1] 33 f0 0e 8c 01 8a 23 ....... debug 

    # ejs.web.template/TemplateParser.es:70                 "    public override function render(request: Request) {\n" + 

    0120: [1] 56 b8 28 ................... loadString <    public override function render(request: Request) {
> 
    0123: [2] 00 ......................... add 
    0124: [1] 33 f0 0e 8e 01 9a 22 ....... debug 

    # ejs.web.template/TemplateParser.es:71                 parse(script, options) + "\n    }\n}\n"

    0131: [1] 5c ......................... getLocalSlot1 
    0132: [2] 5d ......................... getLocalSlot2 
    0133: [3] 19 3a 04 ................... callThisSlot <slot: 29> <argc: 2> 
    0136: [1] 93 ......................... pushResult 
    0137: [2] 00 ......................... add 
    0138: [1] 56 aa 29 ................... loadString <
    }
}
> 
    0141: [2] 00 ......................... add 
    0142: [1] bf ......................... returnValue 
    
VARIABLE:   [name-00]  private var name : String
VARIABLE:   [script-01]  private var script : String
VARIABLE:   [options-02]  private var options : Object

FUNCTION:   [TemplateParser-29]  public const function parse(script: String, options: Object) : String

     ARG:   [arg-00]   private script : String
     ARG:   [arg-01]   private options : Object
   LOCAL:   [local-02] var token : ByteArray
   LOCAL:   [local-03] var out : ByteArray
   LOCAL:   [local-04] var dir : Path
   LOCAL:   [local-05] var tid : Number
   LOCAL:   [local-06] var layoutPage : Path
   LOCAL:   [local-07] var args : Array
   LOCAL:   [local-08] var cmd : String
   LOCAL:   [local-09] var path
   LOCAL:   [local-10] var incPath
   LOCAL:   [local-11] var inc : TemplateParser
   LOCAL:   [local-12] var layoutOptions
   LOCAL:   [local-13] var layoutText : String

    0000: [0] 41 02 02 07 ................ initDefaultArgs8 <2> <4> <9> 
    0004: [0] 8a e4 06 00 ................ newObject <type: 0x1b2,  ejs::Object> <argc: 0> <att: >
    0008: [1] 95 ......................... putLocalSlot1 
    0009: [0] 33 f0 0e a8 01 84 2b ....... debug 

    # ejs.web.template/TemplateParser.es:84             var token: ByteArray = new ByteArray

    0016: [0] 7e 12 ...................... getGlobalSlot <slot: 9> 
    0018: [1] 89 ......................... new 
    0019: [1] 20 00 ...................... callConstructor <argc: 0> 
    0021: [1] 96 ......................... putLocalSlot2 
    0022: [0] 33 f0 0e aa 01 e6 2b ....... debug 

    # ejs.web.template/TemplateParser.es:85             var out: ByteArray = new ByteArray

    0029: [0] 7e 12 ...................... getGlobalSlot <slot: 9> 
    0031: [1] 89 ......................... new 
    0032: [1] 20 00 ...................... callConstructor <argc: 0> 
    0034: [1] 97 ......................... putLocalSlot3 
    0035: [0] 33 f0 0e ac 01 cc 2c ....... debug 

    # ejs.web.template/TemplateParser.es:86             var dir: Path = options.dir || Path(".")

    0042: [0] 5c ......................... getLocalSlot1 
    0043: [1] 7b 9e 06 b0 0c ............. getObjName <dir> <> 
    0048: [1] 39 ......................... dup 
    0049: [2] 14 09 ...................... branchTrue8 <addr: 60> 
    0051: [1] 90 ......................... pop 
    0052: [0] 56 b6 2d ................... loadString <.> 
    0055: [1] 17 da 01 02 ................ callGlobalSlot <slot: 109> <argc: 1> 
    0059: [0] 93 ......................... pushResult 
    0060: [1] 98 ......................... putLocalSlot4 
    0061: [0] 33 f0 0e ae 01 ba 2d ....... debug 

    # ejs.web.template/TemplateParser.es:87             var tid: Number

    0068: [0] 33 f0 0e b0 01 fa 2d ....... debug 

    # ejs.web.template/TemplateParser.es:88             var layoutPage: Path

    0075: [0] 33 f0 0e b4 01 d2 2e ....... debug 

    # ejs.web.template/TemplateParser.es:90             if (options.layout) {

    0082: [0] 5c ......................... getLocalSlot1 
    0083: [1] 7b 96 2f b0 0c ............. getObjName <layout> <> 
    0088: [1] 13 15 ...................... branchFalse8 <addr: 111> 
    0090: [0] 33 f0 0e b6 01 a4 2f ....... debug 

    # ejs.web.template/TemplateParser.es:91                 layoutPage = Path(options.layout)

    0097: [0] 5c ......................... getLocalSlot1 
    0098: [1] 7b 96 2f b0 0c ............. getObjName <layout> <> 
    0103: [1] 17 da 01 02 ................ callGlobalSlot <slot: 109> <argc: 1> 
    0107: [0] 93 ......................... pushResult 
    0108: [1] 9a ......................... putLocalSlot6 
    0109: [0] 3e 00 ...................... goto8 <addr: 111> 
    0111: [0] 33 f0 0e b8 01 88 30 ....... debug 

    # ejs.web.template/TemplateParser.es:92             }

    0118: [0] 33 f0 0e bc 01 a4 30 ....... debug 

    # ejs.web.template/TemplateParser.es:94             this.script = script

    0125: [0] 5b ......................... getLocalSlot0 
    0126: [1] 57 ......................... loadThis 
    0127: [2] b3 d8 14 fa 11 ............. putObjName <script> <[TemplateParser,private]> 
    0132: [0] 33 f0 0e be 01 e6 30 ....... debug 

    # ejs.web.template/TemplateParser.es:95             while ((tid = getToken(token)) != Token.Eof) {

    0139: [0] 5d ......................... getLocalSlot2 
    0140: [1] 19 3c 02 ................... callThisSlot <slot: 30> <argc: 1> 
    0143: [0] 93 ......................... pushResult 
    0144: [1] 39 ......................... dup 
    0145: [2] 99 ......................... putLocalSlot5 
    0146: [1] 50 ......................... loadGlobal 
    0147: [2] 7b dc 31 c2 01 ............. getObjName <Token> <ejs.web.template> 
    0152: [2] 82 38 00 ................... getTypeSlot <slot: 28> <0> 
    0155: [2] 2c ......................... compareNe 
    0156: [1] 07 e6 0b f7 f7 ............. branchFalse <addr: 916> 
    0161: [0] 33 f0 0e c4 01 e8 31 ....... debug 

    # ejs.web.template/TemplateParser.es:98                 switch (tid) {

    0168: [0] 60 ......................... getLocalSlot5 
    0169: [1] 33 f0 0e c6 01 a6 32 ....... debug 

    # ejs.web.template/TemplateParser.es:99                 case Token.Literal:

    0176: [1] 39 ......................... dup 
    0177: [2] 50 ......................... loadGlobal 
    0178: [3] 7b dc 31 c2 01 ............. getObjName <Token> <ejs.web.template> 
    0183: [3] 82 3e 00 ................... getTypeSlot <slot: 31> <0> 
    0186: [3] 26 ......................... compareStrictlyEq 
    0187: [2] 13 22 ...................... branchFalse8 <addr: 223> 
    0189: [1] 33 f0 0e c8 01 ee 32 ....... debug 

    # ejs.web.template/TemplateParser.es:100                     out.write("\n        write(\"" + token + "\");")

    0196: [1] 5e ......................... getLocalSlot3 
    0197: [2] 56 f8 33 ................... loadString <
        write("> 
    0200: [3] 5d ......................... getLocalSlot2 
    0201: [4] 00 ......................... add 
    0202: [3] 56 9a 34 ................... loadString <");> 
    0205: [4] 00 ......................... add 
    0206: [3] 18 6e 02 ................... callObjSlot <slot: 55> <argc: 1> 
    0209: [1] 33 f0 0e ca 01 a2 34 ....... debug 

    # ejs.web.template/TemplateParser.es:101                     break

    0216: [1] 3d e2 0a f7 f7 ............. goto <addr: 910> 
    0221: [1] 3e 14 ...................... goto8 <addr: 243> 
    0223: [1] 33 f0 0e ce 01 d6 34 ....... debug 

    # ejs.web.template/TemplateParser.es:103                 case Token.Var:

    0230: [1] 39 ......................... dup 
    0231: [2] 50 ......................... loadGlobal 
    0232: [3] 7b dc 31 c2 01 ............. getObjName <Token> <ejs.web.template> 
    0237: [3] 82 3c 00 ................... getTypeSlot <slot: 30> <0> 
    0240: [3] 26 ......................... compareStrictlyEq 
    0241: [2] 13 20 ...................... branchFalse8 <addr: 275> 
    0243: [1] 33 f0 0e d8 01 96 35 ....... debug 

    # ejs.web.template/TemplateParser.es:108                     out.write("\n        write(\"\" + ", token, ");\n")

    0250: [1] 5e ......................... getLocalSlot3 
    0251: [2] 56 a6 36 ................... loadString <
        write("" + > 
    0254: [3] 5d ......................... getLocalSlot2 
    0255: [4] 56 d0 36 ................... loadString <);
> 
    0258: [5] 18 6e 06 ................... callObjSlot <slot: 55> <argc: 3> 
    0261: [1] 33 f0 0e da 01 a2 34 ....... debug 

    # ejs.web.template/TemplateParser.es:109                     break

    0268: [1] 3d fa 09 f7 f7 ............. goto <addr: 910> 
    0273: [1] 3e 14 ...................... goto8 <addr: 295> 
    0275: [1] 33 f0 0e de 01 d8 36 ....... debug 

    # ejs.web.template/TemplateParser.es:111                 case Token.Equals:

    0282: [1] 39 ......................... dup 
    0283: [2] 50 ......................... loadGlobal 
    0284: [3] 7b dc 31 c2 01 ............. getObjName <Token> <ejs.web.template> 
    0289: [3] 82 40 00 ................... getTypeSlot <slot: 32> <0> 
    0292: [3] 26 ......................... compareStrictlyEq 
    0293: [2] 13 20 ...................... branchFalse8 <addr: 327> 
    0295: [1] 33 f0 0e e0 01 9e 37 ....... debug 

    # ejs.web.template/TemplateParser.es:112                     out.write("\n        write(\"\" + (", token, "));\n")

    0302: [1] 5e ......................... getLocalSlot3 
    0303: [2] 56 b2 38 ................... loadString <
        write("" + (> 
    0306: [3] 5d ......................... getLocalSlot2 
    0307: [4] 56 de 38 ................... loadString <));
> 
    0310: [5] 18 6e 06 ................... callObjSlot <slot: 55> <argc: 3> 
    0313: [1] 33 f0 0e e2 01 a2 34 ....... debug 

    # ejs.web.template/TemplateParser.es:113                     break

    0320: [1] 3d 92 09 f7 f7 ............. goto <addr: 910> 
    0325: [1] 3e 14 ...................... goto8 <addr: 347> 
    0327: [1] 33 f0 0e e6 01 e8 38 ....... debug 

    # ejs.web.template/TemplateParser.es:115                 case Token.EjsTag:

    0334: [1] 39 ......................... dup 
    0335: [2] 50 ......................... loadGlobal 
    0336: [3] 7b dc 31 c2 01 ............. getObjName <Token> <ejs.web.template> 
    0341: [3] 82 3a 00 ................... getTypeSlot <slot: 29> <0> 
    0344: [3] 26 ......................... compareStrictlyEq 
    0345: [2] 13 1e ...................... branchFalse8 <addr: 377> 
    0347: [1] 33 f0 0e f0 01 ae 39 ....... debug 

    # ejs.web.template/TemplateParser.es:120                     out.write(token.toString())

    0354: [1] 5e ......................... getLocalSlot3 
    0355: [2] 5d ......................... getLocalSlot2 
    0356: [3] 18 30 00 ................... callObjSlot <slot: 24> <argc: 0> 
    0359: [2] 93 ......................... pushResult 
    0360: [3] 18 6e 02 ................... callObjSlot <slot: 55> <argc: 1> 
    0363: [1] 33 f0 0e f2 01 a2 34 ....... debug 

    # ejs.web.template/TemplateParser.es:121                     break

    0370: [1] 3d ae 08 f7 f7 ............. goto <addr: 910> 
    0375: [1] 3e 17 ...................... goto8 <addr: 400> 
    0377: [1] 33 f0 0e f6 01 8e 3a ....... debug 

    # ejs.web.template/TemplateParser.es:123                 case Token.Control:

    0384: [1] 39 ......................... dup 
    0385: [2] 50 ......................... loadGlobal 
    0386: [3] 7b dc 31 c2 01 ............. getObjName <Token> <ejs.web.template> 
    0391: [3] 82 42 00 ................... getTypeSlot <slot: 33> <0> 
    0394: [3] 26 ......................... compareStrictlyEq 
    0395: [2] 07 a8 07 f7 f7 ............. branchFalse <addr: 868> 
    0400: [1] 33 f0 0e f8 01 f6 3a ....... debug 

    # ejs.web.template/TemplateParser.es:124                     let args: Array = token.toString().split(/\s/g)

    0407: [1] 5d ......................... getLocalSlot2 
    0408: [2] 18 30 00 ................... callObjSlot <slot: 24> <argc: 0> 
    0411: [1] 93 ......................... pushResult 
    0412: [2] 55 fe 3b ................... loadRegexp </\s/g> 
    0415: [3] 1e 8a 3c 00 02 ............. callObjName <split> <> <argc: 1> 
    0420: [1] 93 ......................... pushResult 
    0421: [2] 9b ......................... putLocalSlot7 
    0422: [1] 33 f0 0e fa 01 96 3c ....... debug 

    # ejs.web.template/TemplateParser.es:125                     let cmd: String = args[0]

    0429: [1] 62 ......................... getLocalSlot7 
    0430: [2] 56 b0 0c ................... loadString <> 
    0433: [3] 44 ......................... load0 
    0434: [4] 7c ......................... getObjNameExpr 
    0435: [2] 9c ......................... putLocalSlot8 
    0436: [1] 33 f0 0e fe 01 fa 3c ....... debug 

    # ejs.web.template/TemplateParser.es:127                     switch (cmd) {

    0443: [1] 63 ......................... getLocalSlot8 
    0444: [2] 33 f0 0e 80 02 c0 3d ....... debug 

    # ejs.web.template/TemplateParser.es:128                     case "include":

    0451: [2] 39 ......................... dup 
    0452: [3] 56 88 3e ................... loadString <include> 
    0455: [4] 26 ......................... compareStrictlyEq 
    0456: [3] 13 69 ...................... branchFalse8 <addr: 563> 
    0458: [2] 33 f0 0e 82 02 98 3e ....... debug 

    # ejs.web.template/TemplateParser.es:129                         let path = args[1].trim("'").trim('"')

    0465: [2] 62 ......................... getLocalSlot7 
    0466: [3] 56 b0 0c ................... loadString <> 
    0469: [4] 45 ......................... load1 
    0470: [5] 7c ......................... getObjNameExpr 
    0471: [3] 56 96 3f ................... loadString <'> 
    0474: [4] 1e 9a 3f 00 02 ............. callObjName <trim> <> <argc: 1> 
    0479: [2] 93 ......................... pushResult 
    0480: [3] 56 a4 3f ................... loadString <"> 
    0483: [4] 1e 9a 3f 00 02 ............. callObjName <trim> <> <argc: 1> 
    0488: [2] 93 ......................... pushResult 
    0489: [3] 9d ......................... putLocalSlot9 
    0490: [2] 33 f0 0e 84 02 a8 3f ....... debug 

    # ejs.web.template/TemplateParser.es:130                         let incPath = dir.join(path)

    0497: [2] 5f ......................... getLocalSlot4 
    0498: [3] 64 ......................... getLocalSlot9 
    0499: [4] 18 5c 02 ................... callObjSlot <slot: 46> <argc: 1> 
    0502: [2] 93 ......................... pushResult 
    0503: [3] b8 14 ...................... putLocalSlot <slot: 10> 
    0505: [2] 33 f0 0e 8c 02 a2 40 ....... debug 

    # ejs.web.template/TemplateParser.es:134                         let inc: TemplateParser = new TemplateParser

    0512: [2] 50 ......................... loadGlobal 
    0513: [3] 7b bc 09 b4 03 ............. getObjName <TemplateParser> <public> 
    0518: [3] 89 ......................... new 
    0519: [3] 20 00 ...................... callConstructor <argc: 0> 
    0521: [3] b8 16 ...................... putLocalSlot <slot: 11> 
    0523: [2] 33 f0 0e 8e 02 b4 41 ....... debug 

    # ejs.web.template/TemplateParser.es:135                         out.write(inc.parse(incPath.readString(), options))

    0530: [2] 5e ......................... getLocalSlot3 
    0531: [3] 7f 16 ...................... getLocalSlot <slot: 11> 
    0533: [4] 7f 14 ...................... getLocalSlot <slot: 10> 
    0535: [5] 1e da 09 00 00 ............. callObjName <readString> <> <argc: 0> 
    0540: [4] 93 ......................... pushResult 
    0541: [5] 5c ......................... getLocalSlot1 
    0542: [6] 18 3a 04 ................... callObjSlot <slot: 29> <argc: 2> 
    0545: [3] 93 ......................... pushResult 
    0546: [4] 18 6e 02 ................... callObjSlot <slot: 55> <argc: 1> 
    0549: [2] 33 f0 0e 90 02 cc 42 ....... debug 

    # ejs.web.template/TemplateParser.es:136                         break

    0556: [2] 3d cc 04 f7 f7 ............. goto <addr: 855> 
    0561: [2] 3e 11 ...................... goto8 <addr: 580> 
    0563: [2] 33 f0 0e 94 02 88 43 ....... debug 

    # ejs.web.template/TemplateParser.es:138                     case "layout":

    0570: [2] 39 ......................... dup 
    0571: [3] 56 96 2f ................... loadString <layout> 
    0574: [4] 26 ......................... compareStrictlyEq 
    0575: [3] 07 a8 03 f7 f7 ............. branchFalse <addr: 792> 
    0580: [2] 33 f0 0e 96 02 ce 43 ....... debug 

    # ejs.web.template/TemplateParser.es:139                         let path = args[1]

    0587: [2] 62 ......................... getLocalSlot7 
    0588: [3] 56 b0 0c ................... loadString <> 
    0591: [4] 45 ......................... load1 
    0592: [5] 7c ......................... getObjNameExpr 
    0593: [3] 9d ......................... putLocalSlot9 
    0594: [2] 33 f0 0e 98 02 a4 44 ....... debug 

    # ejs.web.template/TemplateParser.es:140                         if (path == "" || path == '""') {

    0601: [2] 64 ......................... getLocalSlot9 
    0602: [3] 56 b0 0c ................... loadString <> 
    0605: [4] 25 ......................... compareEq 
    0606: [3] 39 ......................... dup 
    0607: [4] 14 06 ...................... branchTrue8 <addr: 615> 
    0609: [3] 90 ......................... pop 
    0610: [2] 64 ......................... getLocalSlot9 
    0611: [3] 56 98 45 ................... loadString <""> 
    0614: [4] 25 ......................... compareEq 
    0615: [3] 13 12 ...................... branchFalse8 <addr: 635> 
    0617: [2] 33 f0 0e 9a 02 9e 45 ....... debug 

    # ejs.web.template/TemplateParser.es:141                             layoutPage = undefined

    0624: [2] 50 ......................... loadGlobal 
    0625: [3] 7b 84 46 02 ................ getObjName <undefined> <ejs> 
    0629: [3] 9a ......................... putLocalSlot6 
    0630: [2] 3d 9e 02 f7 f7 ............. goto <addr: 778> 
    0635: [2] 33 f0 0e 9c 02 98 46 ....... debug 

    # ejs.web.template/TemplateParser.es:142                         } else {

    0642: [2] 33 f0 0e 9e 02 da 46 ....... debug 

    # ejs.web.template/TemplateParser.es:143                             path = args[1].trim("'").trim('"').trim('.ejs') + ".ejs"

    0649: [2] 62 ......................... getLocalSlot7 
    0650: [3] 56 b0 0c ................... loadString <> 
    0653: [4] 45 ......................... load1 
    0654: [5] 7c ......................... getObjNameExpr 
    0655: [3] 56 96 3f ................... loadString <'> 
    0658: [4] 1e 9a 3f 00 02 ............. callObjName <trim> <> <argc: 1> 
    0663: [2] 93 ......................... pushResult 
    0664: [3] 56 a4 3f ................... loadString <"> 
    0667: [4] 1e 9a 3f 00 02 ............. callObjName <trim> <> <argc: 1> 
    0672: [2] 93 ......................... pushResult 
    0673: [3] 56 84 48 ................... loadString <.ejs> 
    0676: [4] 1e 9a 3f 00 02 ............. callObjName <trim> <> <argc: 1> 
    0681: [2] 93 ......................... pushResult 
    0682: [3] 56 84 48 ................... loadString <.ejs> 
    0685: [4] 00 ......................... add 
    0686: [3] 9d ......................... putLocalSlot9 
    0687: [2] 33 f0 0e a0 02 8e 48 ....... debug 

    # ejs.web.template/TemplateParser.es:144                             if (!options.layouts) {

    0694: [2] 5c ......................... getLocalSlot1 
    0695: [3] 7b f6 48 b0 0c ............. getObjName <layouts> <> 
    0700: [3] 86 ......................... logicalNot 
    0701: [3] 13 0d ...................... branchFalse8 <addr: 716> 
    0703: [2] 33 f0 0e a2 02 86 49 ....... debug 

    # ejs.web.template/TemplateParser.es:145                                 throw "Location of layout page not defined in options"

    0710: [2] 56 b4 4a ................... loadString <Location of layout page not defined in options> 
    0713: [3] c6 ......................... throw 
    0714: [3] 3e 00 ...................... goto8 <addr: 716> 
    0716: [3] 33 f0 0e a4 02 92 4b ....... debug 

    # ejs.web.template/TemplateParser.es:146                             }

    0723: [3] 33 f0 0e a6 02 ce 4b ....... debug 

    # ejs.web.template/TemplateParser.es:147                             layoutPage = Path(options.layouts).join(path)

    0730: [3] 5c ......................... getLocalSlot1 
    0731: [4] 7b f6 48 b0 0c ............. getObjName <layouts> <> 
    0736: [4] 17 da 01 02 ................ callGlobalSlot <slot: 109> <argc: 1> 
    0740: [3] 93 ......................... pushResult 
    0741: [4] 64 ......................... getLocalSlot9 
    0742: [5] 18 5c 02 ................... callObjSlot <slot: 46> <argc: 1> 
    0745: [3] 93 ......................... pushResult 
    0746: [4] 9a ......................... putLocalSlot6 
    0747: [3] 33 f0 0e a8 02 e2 4c ....... debug 

    # ejs.web.template/TemplateParser.es:148                             if (!layoutPage.exists) {

    0754: [3] 61 ......................... getLocalSlot6 
    0755: [4] 7b ce 4d b4 03 ............. getObjName <exists> <public> 
    0760: [4] 86 ......................... logicalNot 
    0761: [4] 13 0f ...................... branchFalse8 <addr: 778> 
    0763: [3] 33 f0 0e aa 02 dc 4d ....... debug 

    # ejs.web.template/TemplateParser.es:149                                 throw "Can't find layout page " + layoutPage

    0770: [3] 56 f6 4e ................... loadString <Can't find layout page > 
    0773: [4] 61 ......................... getLocalSlot6 
    0774: [5] 00 ......................... add 
    0775: [4] c6 ......................... throw 
    0776: [4] 3e 00 ...................... goto8 <addr: 778> 
    0778: [4] 33 f0 0e b0 02 cc 42 ....... debug 

    # ejs.web.template/TemplateParser.es:152                         break

    0785: [4] 3d 82 01 f7 f7 ............. goto <addr: 855> 
    0790: [4] 3e 0e ...................... goto8 <addr: 806> 
    0792: [4] 33 f0 0e b4 02 a6 4f ....... debug 

    # ejs.web.template/TemplateParser.es:154                     case "content":

    0799: [4] 39 ......................... dup 
    0800: [5] 56 ee 4f ................... loadString <content> 
    0803: [6] 26 ......................... compareStrictlyEq 
    0804: [5] 13 1d ...................... branchFalse8 <addr: 835> 
    0806: [4] 33 f0 0e b6 02 fe 4f ....... debug 

    # ejs.web.template/TemplateParser.es:155                         out.write(ContentMarker)

    0813: [4] 5e ......................... getLocalSlot3 
    0814: [5] 57 ......................... loadThis 
    0815: [6] 7b de 11 fa 11 ............. getObjName <ContentMarker> <[TemplateParser,private]> 
    0820: [6] 18 6e 02 ................... callObjSlot <slot: 55> <argc: 1> 
    0823: [4] 33 f0 0e b8 02 cc 42 ....... debug 

    # ejs.web.template/TemplateParser.es:156                         break

    0830: [4] 3d 28 f7 f7 f7 ............. goto <addr: 855> 
    0835: [4] 33 f0 0e bc 02 e0 50 ....... debug 

    # ejs.web.template/TemplateParser.es:158                     default:

    0842: [4] 33 f0 0e be 02 9a 51 ....... debug 

    # ejs.web.template/TemplateParser.es:159                         throw "Bad control directive: " + cmd

    0849: [4] 56 96 52 ................... loadString <Bad control directive: > 
    0852: [5] 63 ......................... getLocalSlot8 
    0853: [6] 00 ......................... add 
    0854: [5] c6 ......................... throw 
    0855: [5] 90 ......................... pop 
    0856: [4] 33 f0 0e c2 02 a2 34 ....... debug 

    # ejs.web.template/TemplateParser.es:161                     break

    0863: [4] 3d 54 f7 f7 f7 ............. goto <addr: 910> 
    0868: [4] 33 f0 0e c6 02 c6 52 ....... debug 

    # ejs.web.template/TemplateParser.es:163                 default:

    0875: [4] 3e 14 ...................... goto8 <addr: 897> 
    0877: [4] 33 f0 0e c8 02 f8 52 ....... debug 

    # ejs.web.template/TemplateParser.es:164                 case Token.Err:

    0884: [4] 39 ......................... dup 
    0885: [5] 50 ......................... loadGlobal 
    0886: [6] 7b dc 31 c2 01 ............. getObjName <Token> <ejs.web.template> 
    0891: [6] 82 36 00 ................... getTypeSlot <slot: 27> <0> 
    0894: [6] 26 ......................... compareStrictlyEq 
    0895: [5] 13 0d ...................... branchFalse8 <addr: 910> 
    0897: [4] 33 f0 0e cc 02 b8 53 ....... debug 

    # ejs.web.template/TemplateParser.es:166                     throw "Bad input token: " + token

    0904: [4] 56 a4 54 ................... loadString <Bad input token: > 
    0907: [5] 5d ......................... getLocalSlot2 
    0908: [6] 00 ......................... add 
    0909: [5] c6 ......................... throw 
    0910: [5] 90 ......................... pop 
    0911: [4] 3d 93 0c f7 f7 ............. goto <addr: 139> 
    0916: [4] 33 f0 0e d6 02 c8 54 ....... debug 

    # ejs.web.template/TemplateParser.es:171             if (layoutPage && layoutPage != options.currentLayout) {

    0923: [4] 61 ......................... getLocalSlot6 
    0924: [5] 39 ......................... dup 
    0925: [6] 13 09 ...................... branchFalse8 <addr: 936> 
    0927: [5] 90 ......................... pop 
    0928: [4] 61 ......................... getLocalSlot6 
    0929: [5] 5c ......................... getLocalSlot1 
    0930: [6] 7b d2 55 b0 0c ............. getObjName <currentLayout> <> 
    0935: [6] 2c ......................... compareNe 
    0936: [5] 13 57 ...................... branchFalse8 <addr: 1025> 
    0938: [4] 33 f0 0e d8 02 a2 56 ....... debug 

    # ejs.web.template/TemplateParser.es:172                 let layoutOptions = blend(options.clone(), { currentLayout: layoutPage })

    0945: [4] 5c ......................... getLocalSlot1 
    0946: [5] 18 06 00 ................... callObjSlot <slot: 3> <argc: 0> 
    0949: [4] 93 ......................... pushResult 
    0950: [5] 56 00 ...................... loadString <> 
    0952: [6] 56 d2 55 ................... loadString <currentLayout> 
    0955: [7] 61 ......................... getLocalSlot6 
    0956: [8] 8a e4 06 02 00 ............. newObject <type: 0x1b2,  ejs::Object> <argc: 1> <att: 1 >
    0961: [6] 17 9c 01 04 ................ callGlobalSlot <slot: 78> <argc: 2> 
    0965: [4] 93 ......................... pushResult 
    0966: [5] b8 18 ...................... putLocalSlot <slot: 12> 
    0968: [4] 33 f0 0e da 02 d6 57 ....... debug 

    # ejs.web.template/TemplateParser.es:173                 let layoutText: String = new TemplateParser().parse(layoutPage.readString(), layoutOptions)

    0975: [4] 50 ......................... loadGlobal 
    0976: [5] 7b bc 09 b4 03 ............. getObjName <TemplateParser> <public> 
    0981: [5] 89 ......................... new 
    0982: [5] 20 00 ...................... callConstructor <argc: 0> 
    0984: [5] 61 ......................... getLocalSlot6 
    0985: [6] 18 86 01 00 ................ callObjSlot <slot: 67> <argc: 0> 
    0989: [5] 93 ......................... pushResult 
    0990: [6] 7f 18 ...................... getLocalSlot <slot: 12> 
    0992: [7] 18 3a 04 ................... callObjSlot <slot: 29> <argc: 2> 
    0995: [4] 93 ......................... pushResult 
    0996: [5] b8 1a ...................... putLocalSlot <slot: 13> 
    0998: [4] 33 f0 0e dc 02 c4 59 ....... debug 

    # ejs.web.template/TemplateParser.es:174                 return layoutText.replace(ContentPattern, out.toString())

    1005: [4] 7f 1a ...................... getLocalSlot <slot: 13> 
    1007: [5] 57 ......................... loadThis 
    1008: [6] 7b e6 13 fa 11 ............. getObjName <ContentPattern> <[TemplateParser,private]> 
    1013: [6] 5e ......................... getLocalSlot3 
    1014: [7] 18 30 00 ................... callObjSlot <slot: 24> <argc: 0> 
    1017: [6] 93 ......................... pushResult 
    1018: [7] 18 68 04 ................... callObjSlot <slot: 52> <argc: 2> 
    1021: [4] 93 ......................... pushResult 
    1022: [5] bf ......................... returnValue 
    1023: [0] 3e 00 ...................... goto8 <addr: 1025> 
    1025: [0] 33 f0 0e e0 02 d8 5a ....... debug 

    # ejs.web.template/TemplateParser.es:176             return out.toString()

    1032: [0] 5e ......................... getLocalSlot3 
    1033: [1] 18 30 00 ................... callObjSlot <slot: 24> <argc: 0> 
    1036: [0] 93 ......................... pushResult 
    1037: [1] bf ......................... returnValue 
    
VARIABLE:   [script-00]  private var script : String
VARIABLE:   [options-01]  private var options : Object
VARIABLE:   [token-02]  private var token : ByteArray
VARIABLE:   [out-03]  private var out : ByteArray
VARIABLE:   [dir-04]  private var dir : Path
VARIABLE:   [tid-05]  private var tid : Number
VARIABLE:   [layoutPage-06]  private var layoutPage : Path
VARIABLE:   [args-07]  -hoisted-7 var args : Array
VARIABLE:   [cmd-08]  -hoisted-7 var cmd : String
VARIABLE:   [path-09]  -hoisted-7 var path
VARIABLE:   [incPath-10]  -hoisted-7 var incPath
VARIABLE:   [inc-11]  -hoisted-7 var inc : TemplateParser
VARIABLE:   [layoutOptions-12]  -hoisted-12 var layoutOptions
VARIABLE:   [layoutText-13]  -hoisted-12 var layoutText : String

FUNCTION:   [TemplateParser-30]  internal-4a3b8e4e55be68b33efb70af76d45738-25 const function getToken(token: ByteArray) : Number

     ARG:   [arg-00]   private token : ByteArray
   LOCAL:   [local-01] var tid
   LOCAL:   [local-02] var c

    0000: [0] 33 f0 0e ee 02 be 5c ....... debug 

    # ejs.web.template/TemplateParser.es:183             var tid = Token.Literal

    0007: [0] 50 ......................... loadGlobal 
    0008: [1] 7b dc 31 c2 01 ............. getObjName <Token> <ejs.web.template> 
    0013: [1] 82 3e 00 ................... getTypeSlot <slot: 31> <0> 
    0016: [1] 95 ......................... putLocalSlot1 
    0017: [0] 33 f0 0e f0 02 86 5d ....... debug 

    # ejs.web.template/TemplateParser.es:184             token.flush()

    0024: [0] 5b ......................... getLocalSlot0 
    0025: [1] 18 4e 00 ................... callObjSlot <slot: 39> <argc: 0> 
    0028: [0] 33 f0 0e f2 02 ba 5d ....... debug 

    # ejs.web.template/TemplateParser.es:185             var c

    0035: [0] 33 f0 0e f4 02 e2 5d ....... debug 

    # ejs.web.template/TemplateParser.es:186             while (pos < script.length) {

    0042: [0] 57 ......................... loadThis 
    0043: [1] 7b ae 15 fa 11 ............. getObjName <pos> <[TemplateParser,private]> 
    0048: [1] 57 ......................... loadThis 
    0049: [2] 7b d8 14 fa 11 ............. getObjName <script> <[TemplateParser,private]> 
    0054: [2] 7b f4 0b b4 03 ............. getObjName <length> <public> 
    0059: [2] 2b ......................... compareLt 
    0060: [1] 07 fa 17 f7 f7 ............. branchFalse <addr: 1598> 
    0065: [0] 33 f0 0e f6 02 b6 5e ....... debug 

    # ejs.web.template/TemplateParser.es:187                 c = script[pos++]

    0072: [0] 57 ......................... loadThis 
    0073: [1] 7b d8 14 fa 11 ............. getObjName <script> <[TemplateParser,private]> 
    0078: [1] 56 b0 0c ................... loadString <> 
    0081: [2] 57 ......................... loadThis 
    0082: [3] 7b ae 15 fa 11 ............. getObjName <pos> <[TemplateParser,private]> 
    0087: [3] 39 ......................... dup 
    0088: [4] 3f 01 ...................... inc <1> 
    0090: [4] 57 ......................... loadThis 
    0091: [5] b3 ae 15 fa 11 ............. putObjName <pos> <[TemplateParser,private]> 
    0096: [3] 7c ......................... getObjNameExpr 
    0097: [1] 96 ......................... putLocalSlot2 
    0098: [0] 33 f0 0e f8 02 fa 5e ....... debug 

    # ejs.web.template/TemplateParser.es:188                 switch (c) {

    0105: [0] 5d ......................... getLocalSlot2 
    0106: [1] 33 f0 0e fa 02 b4 5f ....... debug 

    # ejs.web.template/TemplateParser.es:189                 case '<':

    0113: [1] 39 ......................... dup 
    0114: [2] 56 e8 5f ................... loadString <<> 
    0117: [3] 26 ......................... compareStrictlyEq 
    0118: [2] 07 d2 0d f7 f7 ............. branchFalse <addr: 996> 
    0123: [1] 33 f0 0e fc 02 ec 5f ....... debug 

    # ejs.web.template/TemplateParser.es:190                     if (script[pos] == '%' && (pos < 2 || script[pos - 2] != '\\')) {

    0130: [1] 57 ......................... loadThis 
    0131: [2] 7b d8 14 fa 11 ............. getObjName <script> <[TemplateParser,private]> 
    0136: [2] 56 b0 0c ................... loadString <> 
    0139: [3] 57 ......................... loadThis 
    0140: [4] 7b ae 15 fa 11 ............. getObjName <pos> <[TemplateParser,private]> 
    0145: [4] 7c ......................... getObjNameExpr 
    0146: [2] 56 98 61 ................... loadString <%> 
    0149: [3] 25 ......................... compareEq 
    0150: [2] 39 ......................... dup 
    0151: [3] 13 23 ...................... branchFalse8 <addr: 188> 
    0153: [2] 90 ......................... pop 
    0154: [1] 57 ......................... loadThis 
    0155: [2] 7b ae 15 fa 11 ............. getObjName <pos> <[TemplateParser,private]> 
    0160: [2] 46 ......................... load2 
    0161: [3] 2b ......................... compareLt 
    0162: [2] 39 ......................... dup 
    0163: [3] 14 17 ...................... branchTrue8 <addr: 188> 
    0165: [2] 90 ......................... pop 
    0166: [1] 57 ......................... loadThis 
    0167: [2] 7b d8 14 fa 11 ............. getObjName <script> <[TemplateParser,private]> 
    0172: [2] 56 b0 0c ................... loadString <> 
    0175: [3] 57 ......................... loadThis 
    0176: [4] 7b ae 15 fa 11 ............. getObjName <pos> <[TemplateParser,private]> 
    0181: [4] 46 ......................... load2 
    0182: [5] c3 ......................... sub 
    0183: [4] 7c ......................... getObjNameExpr 
    0184: [2] 56 9c 61 ................... loadString <\> 
    0187: [3] 2c ......................... compareNe 
    0188: [2] 07 84 0c f7 f7 ............. branchFalse <addr: 963> 
    0193: [1] 33 f0 0e fe 02 a0 61 ....... debug 

    # ejs.web.template/TemplateParser.es:191                         if (token.available > 0) {

    0200: [1] 5b ......................... getLocalSlot0 
    0201: [2] 7b 86 62 b4 03 ............. getObjName <available> <public> 
    0206: [2] 44 ......................... load0 
    0207: [3] 29 ......................... compareGt 
    0208: [2] 13 2a ...................... branchFalse8 <addr: 252> 
    0210: [1] 33 f0 0e 80 03 9a 62 ....... debug 

    # ejs.web.template/TemplateParser.es:192                             pos--

    0217: [1] 57 ......................... loadThis 
    0218: [2] 7b ae 15 fa 11 ............. getObjName <pos> <[TemplateParser,private]> 
    0223: [2] 39 ......................... dup 
    0224: [3] 3f ff ...................... inc <255> 
    0226: [3] 57 ......................... loadThis 
    0227: [4] b3 ae 15 fa 11 ............. putObjName <pos> <[TemplateParser,private]> 
    0232: [2] 90 ......................... pop 
    0233: [1] 33 f0 0e 82 03 de 62 ....... debug 

    # ejs.web.template/TemplateParser.es:193                             return Token.Literal

    0240: [1] 50 ......................... loadGlobal 
    0241: [2] 7b dc 31 c2 01 ............. getObjName <Token> <ejs.web.template> 
    0246: [2] 82 3e 00 ................... getTypeSlot <slot: 31> <0> 
    0249: [2] bf ......................... returnValue 
    0250: [0] 3e 00 ...................... goto8 <addr: 252> 
    0252: [0] 33 f0 0e 84 03 c0 63 ....... debug 

    # ejs.web.template/TemplateParser.es:194                         }

    0259: [0] 33 f0 0e 86 03 f4 63 ....... debug 

    # ejs.web.template/TemplateParser.es:195                         pos++

    0266: [0] 57 ......................... loadThis 
    0267: [1] 7b ae 15 fa 11 ............. getObjName <pos> <[TemplateParser,private]> 
    0272: [1] 39 ......................... dup 
    0273: [2] 3f 01 ...................... inc <1> 
    0275: [2] 57 ......................... loadThis 
    0276: [3] b3 ae 15 fa 11 ............. putObjName <pos> <[TemplateParser,private]> 
    0281: [1] 90 ......................... pop 
    0282: [0] 33 f0 0e 88 03 b0 64 ....... debug 

    # ejs.web.template/TemplateParser.es:196                         eatSpace()

    0289: [0] 19 3e 00 ................... callThisSlot <slot: 31> <argc: 0> 
    0292: [0] 33 f0 0e 8a 03 f6 64 ....... debug 

    # ejs.web.template/TemplateParser.es:197                         if (script[pos] == '=') {

    0299: [0] 57 ......................... loadThis 
    0300: [1] 7b d8 14 fa 11 ............. getObjName <script> <[TemplateParser,private]> 
    0305: [1] 56 b0 0c ................... loadString <> 
    0308: [2] 57 ......................... loadThis 
    0309: [3] 7b ae 15 fa 11 ............. getObjName <pos> <[TemplateParser,private]> 
    0314: [3] 7c ......................... getObjNameExpr 
    0315: [1] 56 da 65 ................... loadString <=> 
    0318: [2] 25 ......................... compareEq 
    0319: [1] 07 c0 03 f7 f7 ............. branchFalse <addr: 548> 
    0324: [0] 33 f0 0e 92 03 de 65 ....... debug 

    # ejs.web.template/TemplateParser.es:201                             pos++

    0331: [0] 57 ......................... loadThis 
    0332: [1] 7b ae 15 fa 11 ............. getObjName <pos> <[TemplateParser,private]> 
    0337: [1] 39 ......................... dup 
    0338: [2] 3f 01 ...................... inc <1> 
    0340: [2] 57 ......................... loadThis 
    0341: [3] b3 ae 15 fa 11 ............. putObjName <pos> <[TemplateParser,private]> 
    0346: [1] 90 ......................... pop 
    0347: [0] 33 f0 0e 94 03 a2 66 ....... debug 

    # ejs.web.template/TemplateParser.es:202                             eatSpace()

    0354: [0] 19 3e 00 ................... callThisSlot <slot: 31> <argc: 0> 
    0357: [0] 33 f0 0e 96 03 f0 66 ....... debug 

    # ejs.web.template/TemplateParser.es:203                             while ((c = script[pos]) != undefined && (c != '%' || script[pos+1] != '>' || 

    0364: [0] 57 ......................... loadThis 
    0365: [1] 7b d8 14 fa 11 ............. getObjName <script> <[TemplateParser,private]> 
    0370: [1] 56 b0 0c ................... loadString <> 
    0373: [2] 57 ......................... loadThis 
    0374: [3] 7b ae 15 fa 11 ............. getObjName <pos> <[TemplateParser,private]> 
    0379: [3] 7c ......................... getObjNameExpr 
    0380: [1] 39 ......................... dup 
    0381: [2] 96 ......................... putLocalSlot2 
    0382: [1] 50 ......................... loadGlobal 
    0383: [2] 7b 84 46 02 ................ getObjName <undefined> <ejs> 
    0387: [2] 2c ......................... compareNe 
    0388: [1] 39 ......................... dup 
    0389: [2] 13 41 ...................... branchFalse8 <addr: 456> 
    0391: [1] 90 ......................... pop 
    0392: [0] 5d ......................... getLocalSlot2 
    0393: [1] 56 98 61 ................... loadString <%> 
    0396: [2] 2c ......................... compareNe 
    0397: [1] 39 ......................... dup 
    0398: [2] 14 38 ...................... branchTrue8 <addr: 456> 
    0400: [1] 90 ......................... pop 
    0401: [0] 57 ......................... loadThis 
    0402: [1] 7b d8 14 fa 11 ............. getObjName <script> <[TemplateParser,private]> 
    0407: [1] 56 b0 0c ................... loadString <> 
    0410: [2] 57 ......................... loadThis 
    0411: [3] 7b ae 15 fa 11 ............. getObjName <pos> <[TemplateParser,private]> 
    0416: [3] 45 ......................... load1 
    0417: [4] 00 ......................... add 
    0418: [3] 7c ......................... getObjNameExpr 
    0419: [1] 56 c6 68 ................... loadString <>> 
    0422: [2] 2c ......................... compareNe 
    0423: [1] 39 ......................... dup 
    0424: [2] 14 1e ...................... branchTrue8 <addr: 456> 
    0426: [1] 90 ......................... pop 
    0427: [0] 33 f0 0e 98 03 ca 68 ....... debug 

    # ejs.web.template/TemplateParser.es:204                                     script[pos-1] == '\\')) {

    0434: [0] 57 ......................... loadThis 
    0435: [1] 7b d8 14 fa 11 ............. getObjName <script> <[TemplateParser,private]> 
    0440: [1] 56 b0 0c ................... loadString <> 
    0443: [2] 57 ......................... loadThis 
    0444: [3] 7b ae 15 fa 11 ............. getObjName <pos> <[TemplateParser,private]> 
    0449: [3] 45 ......................... load1 
    0450: [4] c3 ......................... sub 
    0451: [3] 7c ......................... getObjNameExpr 
    0452: [1] 56 9c 61 ................... loadString <\> 
    0455: [2] 25 ......................... compareEq 
    0456: [1] 13 28 ...................... branchFalse8 <addr: 498> 
    0458: [0] 33 f0 0e 9a 03 c6 69 ....... debug 

    # ejs.web.template/TemplateParser.es:205                                 token.write(c)

    0465: [0] 5b ......................... getLocalSlot0 
    0466: [1] 5d ......................... getLocalSlot2 
    0467: [2] 18 6e 02 ................... callObjSlot <slot: 55> <argc: 1> 
    0470: [0] 33 f0 0e 9c 03 a4 6a ....... debug 

    # ejs.web.template/TemplateParser.es:206                                 pos++

    0477: [0] 57 ......................... loadThis 
    0478: [1] 7b ae 15 fa 11 ............. getObjName <pos> <[TemplateParser,private]> 
    0483: [1] 39 ......................... dup 
    0484: [2] 3f 01 ...................... inc <1> 
    0486: [2] 57 ......................... loadThis 
    0487: [3] b3 ae 15 fa 11 ............. putObjName <pos> <[TemplateParser,private]> 
    0492: [1] 90 ......................... pop 
    0493: [0] 3d 8d 02 f7 f7 ............. goto <addr: 364> 
    0498: [0] 33 f0 0e 9e 03 92 4b ....... debug 

    # ejs.web.template/TemplateParser.es:207                             }

    0505: [0] 33 f0 0e a0 03 f0 6a ....... debug 

    # ejs.web.template/TemplateParser.es:208                             pos += 2

    0512: [0] 57 ......................... loadThis 
    0513: [1] 7b ae 15 fa 11 ............. getObjName <pos> <[TemplateParser,private]> 
    0518: [1] 46 ......................... load2 
    0519: [2] 00 ......................... add 
    0520: [1] 57 ......................... loadThis 
    0521: [2] b3 ae 15 fa 11 ............. putObjName <pos> <[TemplateParser,private]> 
    0526: [0] 33 f0 0e a2 03 ba 6b ....... debug 

    # ejs.web.template/TemplateParser.es:209                             return Token.Equals

    0533: [0] 50 ......................... loadGlobal 
    0534: [1] 7b dc 31 c2 01 ............. getObjName <Token> <ejs.web.template> 
    0539: [1] 82 40 00 ................... getTypeSlot <slot: 32> <0> 
    0542: [1] bf ......................... returnValue 
    0543: [0] 3d ba 06 f7 f7 ............. goto <addr: 961> 
    0548: [0] 33 f0 0e a6 03 9a 6c ....... debug 

    # ejs.web.template/TemplateParser.es:211                         } else if (script[pos] == '@') {

    0555: [0] 57 ......................... loadThis 
    0556: [1] 7b d8 14 fa 11 ............. getObjName <script> <[TemplateParser,private]> 
    0561: [1] 56 b0 0c ................... loadString <> 
    0564: [2] 57 ......................... loadThis 
    0565: [3] 7b ae 15 fa 11 ............. getObjName <pos> <[TemplateParser,private]> 
    0570: [3] 7c ......................... getObjNameExpr 
    0571: [1] 56 8c 6d ................... loadString <@> 
    0574: [2] 25 ......................... compareEq 
    0575: [1] 07 f8 02 f7 f7 ............. branchFalse <addr: 768> 
    0580: [0] 33 f0 0e ae 03 de 65 ....... debug 

    # ejs.web.template/TemplateParser.es:215                             pos++

    0587: [0] 57 ......................... loadThis 
    0588: [1] 7b ae 15 fa 11 ............. getObjName <pos> <[TemplateParser,private]> 
    0593: [1] 39 ......................... dup 
    0594: [2] 3f 01 ...................... inc <1> 
    0596: [2] 57 ......................... loadThis 
    0597: [3] b3 ae 15 fa 11 ............. putObjName <pos> <[TemplateParser,private]> 
    0602: [1] 90 ......................... pop 
    0603: [0] 33 f0 0e b0 03 a2 66 ....... debug 

    # ejs.web.template/TemplateParser.es:216                             eatSpace()

    0610: [0] 19 3e 00 ................... callThisSlot <slot: 31> <argc: 0> 
    0613: [0] 33 f0 0e b2 03 90 6d ....... debug 

    # ejs.web.template/TemplateParser.es:217                             while ((c = script[pos]) != undefined && (c != '%' || script[pos+1] != '>')) {

    0620: [0] 57 ......................... loadThis 
    0621: [1] 7b d8 14 fa 11 ............. getObjName <script> <[TemplateParser,private]> 
    0626: [1] 56 b0 0c ................... loadString <> 
    0629: [2] 57 ......................... loadThis 
    0630: [3] 7b ae 15 fa 11 ............. getObjName <pos> <[TemplateParser,private]> 
    0635: [3] 7c ......................... getObjNameExpr 
    0636: [1] 39 ......................... dup 
    0637: [2] 96 ......................... putLocalSlot2 
    0638: [1] 50 ......................... loadGlobal 
    0639: [2] 7b 84 46 02 ................ getObjName <undefined> <ejs> 
    0643: [2] 2c ......................... compareNe 
    0644: [1] 39 ......................... dup 
    0645: [2] 13 20 ...................... branchFalse8 <addr: 679> 
    0647: [1] 90 ......................... pop 
    0648: [0] 5d ......................... getLocalSlot2 
    0649: [1] 56 98 61 ................... loadString <%> 
    0652: [2] 2c ......................... compareNe 
    0653: [1] 39 ......................... dup 
    0654: [2] 14 17 ...................... branchTrue8 <addr: 679> 
    0656: [1] 90 ......................... pop 
    0657: [0] 57 ......................... loadThis 
    0658: [1] 7b d8 14 fa 11 ............. getObjName <script> <[TemplateParser,private]> 
    0663: [1] 56 b0 0c ................... loadString <> 
    0666: [2] 57 ......................... loadThis 
    0667: [3] 7b ae 15 fa 11 ............. getObjName <pos> <[TemplateParser,private]> 
    0672: [3] 45 ......................... load1 
    0673: [4] 00 ......................... add 
    0674: [3] 7c ......................... getObjNameExpr 
    0675: [1] 56 c6 68 ................... loadString <>> 
    0678: [2] 2c ......................... compareNe 
    0679: [1] 13 25 ...................... branchFalse8 <addr: 718> 
    0681: [0] 33 f0 0e b4 03 c6 69 ....... debug 

    # ejs.web.template/TemplateParser.es:218                                 token.write(c)

    0688: [0] 5b ......................... getLocalSlot0 
    0689: [1] 5d ......................... getLocalSlot2 
    0690: [2] 18 6e 02 ................... callObjSlot <slot: 55> <argc: 1> 
    0693: [0] 33 f0 0e b6 03 a4 6a ....... debug 

    # ejs.web.template/TemplateParser.es:219                                 pos++

    0700: [0] 57 ......................... loadThis 
    0701: [1] 7b ae 15 fa 11 ............. getObjName <pos> <[TemplateParser,private]> 
    0706: [1] 39 ......................... dup 
    0707: [2] 3f 01 ...................... inc <1> 
    0709: [2] 57 ......................... loadThis 
    0710: [3] b3 ae 15 fa 11 ............. putObjName <pos> <[TemplateParser,private]> 
    0715: [1] 90 ......................... pop 
    0716: [0] 3e 9e ...................... goto8 <addr: 620> 
    0718: [0] 33 f0 0e b8 03 92 4b ....... debug 

    # ejs.web.template/TemplateParser.es:220                             }

    0725: [0] 33 f0 0e ba 03 f0 6a ....... debug 

    # ejs.web.template/TemplateParser.es:221                             pos += 2

    0732: [0] 57 ......................... loadThis 
    0733: [1] 7b ae 15 fa 11 ............. getObjName <pos> <[TemplateParser,private]> 
    0738: [1] 46 ......................... load2 
    0739: [2] 00 ......................... add 
    0740: [1] 57 ......................... loadThis 
    0741: [2] b3 ae 15 fa 11 ............. putObjName <pos> <[TemplateParser,private]> 
    0746: [0] 33 f0 0e bc 03 e6 6e ....... debug 

    # ejs.web.template/TemplateParser.es:222                             return Token.Control

    0753: [0] 50 ......................... loadGlobal 
    0754: [1] 7b dc 31 c2 01 ............. getObjName <Token> <ejs.web.template> 
    0759: [1] 82 42 00 ................... getTypeSlot <slot: 33> <0> 
    0762: [1] bf ......................... returnValue 
    0763: [0] 3d 82 03 f7 f7 ............. goto <addr: 961> 
    0768: [0] 33 f0 0e c0 03 98 46 ....... debug 

    # ejs.web.template/TemplateParser.es:224                         } else {

    0775: [0] 33 f0 0e c2 03 f0 66 ....... debug 

    # ejs.web.template/TemplateParser.es:225                             while ((c = script[pos]) != undefined && (c != '%' || script[pos+1] != '>' || 

    0782: [0] 57 ......................... loadThis 
    0783: [1] 7b d8 14 fa 11 ............. getObjName <script> <[TemplateParser,private]> 
    0788: [1] 56 b0 0c ................... loadString <> 
    0791: [2] 57 ......................... loadThis 
    0792: [3] 7b ae 15 fa 11 ............. getObjName <pos> <[TemplateParser,private]> 
    0797: [3] 7c ......................... getObjNameExpr 
    0798: [1] 39 ......................... dup 
    0799: [2] 96 ......................... putLocalSlot2 
    0800: [1] 50 ......................... loadGlobal 
    0801: [2] 7b 84 46 02 ................ getObjName <undefined> <ejs> 
    0805: [2] 2c ......................... compareNe 
    0806: [1] 39 ......................... dup 
    0807: [2] 13 41 ...................... branchFalse8 <addr: 874> 
    0809: [1] 90 ......................... pop 
    0810: [0] 5d ......................... getLocalSlot2 
    0811: [1] 56 98 61 ................... loadString <%> 
    0814: [2] 2c ......................... compareNe 
    0815: [1] 39 ......................... dup 
    0816: [2] 14 38 ...................... branchTrue8 <addr: 874> 
    0818: [1] 90 ......................... pop 
    0819: [0] 57 ......................... loadThis 
    0820: [1] 7b d8 14 fa 11 ............. getObjName <script> <[TemplateParser,private]> 
    0825: [1] 56 b0 0c ................... loadString <> 
    0828: [2] 57 ......................... loadThis 
    0829: [3] 7b ae 15 fa 11 ............. getObjName <pos> <[TemplateParser,private]> 
    0834: [3] 45 ......................... load1 
    0835: [4] 00 ......................... add 
    0836: [3] 7c ......................... getObjNameExpr 
    0837: [1] 56 c6 68 ................... loadString <>> 
    0840: [2] 2c ......................... compareNe 
    0841: [1] 39 ......................... dup 
    0842: [2] 14 1e ...................... branchTrue8 <addr: 874> 
    0844: [1] 90 ......................... pop 
    0845: [0] 33 f0 0e c4 03 ca 68 ....... debug 

    # ejs.web.template/TemplateParser.es:226                                     script[pos-1] == '\\')) {

    0852: [0] 57 ......................... loadThis 
    0853: [1] 7b d8 14 fa 11 ............. getObjName <script> <[TemplateParser,private]> 
    0858: [1] 56 b0 0c ................... loadString <> 
    0861: [2] 57 ......................... loadThis 
    0862: [3] 7b ae 15 fa 11 ............. getObjName <pos> <[TemplateParser,private]> 
    0867: [3] 45 ......................... load1 
    0868: [4] c3 ......................... sub 
    0869: [3] 7c ......................... getObjNameExpr 
    0870: [1] 56 9c 61 ................... loadString <\> 
    0873: [2] 25 ......................... compareEq 
    0874: [1] 13 28 ...................... branchFalse8 <addr: 916> 
    0876: [0] 33 f0 0e c6 03 c6 69 ....... debug 

    # ejs.web.template/TemplateParser.es:227                                 token.write(c)

    0883: [0] 5b ......................... getLocalSlot0 
    0884: [1] 5d ......................... getLocalSlot2 
    0885: [2] 18 6e 02 ................... callObjSlot <slot: 55> <argc: 1> 
    0888: [0] 33 f0 0e c8 03 a4 6a ....... debug 

    # ejs.web.template/TemplateParser.es:228                                 pos++

    0895: [0] 57 ......................... loadThis 
    0896: [1] 7b ae 15 fa 11 ............. getObjName <pos> <[TemplateParser,private]> 
    0901: [1] 39 ......................... dup 
    0902: [2] 3f 01 ...................... inc <1> 
    0904: [2] 57 ......................... loadThis 
    0905: [3] b3 ae 15 fa 11 ............. putObjName <pos> <[TemplateParser,private]> 
    0910: [1] 90 ......................... pop 
    0911: [0] 3d 8d 02 f7 f7 ............. goto <addr: 782> 
    0916: [0] 33 f0 0e ca 03 92 4b ....... debug 

    # ejs.web.template/TemplateParser.es:229                             }

    0923: [0] 33 f0 0e cc 03 f0 6a ....... debug 

    # ejs.web.template/TemplateParser.es:230                             pos += 2

    0930: [0] 57 ......................... loadThis 
    0931: [1] 7b ae 15 fa 11 ............. getObjName <pos> <[TemplateParser,private]> 
    0936: [1] 46 ......................... load2 
    0937: [2] 00 ......................... add 
    0938: [1] 57 ......................... loadThis 
    0939: [2] b3 ae 15 fa 11 ............. putObjName <pos> <[TemplateParser,private]> 
    0944: [0] 33 f0 0e ce 03 c8 6f ....... debug 

    # ejs.web.template/TemplateParser.es:231                             return Token.EjsTag

    0951: [0] 50 ......................... loadGlobal 
    0952: [1] 7b dc 31 c2 01 ............. getObjName <Token> <ejs.web.template> 
    0957: [1] 82 3a 00 ................... getTypeSlot <slot: 29> <0> 
    0960: [1] bf ......................... returnValue 
    0961: [0] 3e 00 ...................... goto8 <addr: 963> 
    0963: [0] 33 f0 0e d2 03 a8 70 ....... debug 

    # ejs.web.template/TemplateParser.es:233                     }

    0970: [0] 33 f0 0e d4 03 d4 70 ....... debug 

    # ejs.web.template/TemplateParser.es:234                     token.write(c)

    0977: [0] 5b ......................... getLocalSlot0 
    0978: [1] 5d ......................... getLocalSlot2 
    0979: [2] 18 6e 02 ................... callObjSlot <slot: 55> <argc: 1> 
    0982: [0] 33 f0 0e d6 03 a2 34 ....... debug 

    # ejs.web.template/TemplateParser.es:235                     break

    0989: [0] 3d ac 09 f7 f7 ............. goto <addr: 1592> 
    0994: [0] 3e 11 ...................... goto8 <addr: 1013> 
    0996: [0] 33 f0 0e da 03 9a 71 ....... debug 

    # ejs.web.template/TemplateParser.es:237                 case '@':

    1003: [0] 39 ......................... dup 
    1004: [1] 56 8c 6d ................... loadString <@> 
    1007: [2] 26 ......................... compareStrictlyEq 
    1008: [1] 07 b0 06 f7 f7 ............. branchFalse <addr: 1421> 
    1013: [0] 33 f0 0e dc 03 ce 71 ....... debug 

    # ejs.web.template/TemplateParser.es:238                     if (script[pos] == '@' && (pos < 1 || script[pos-1] != '\\')) {

    1020: [0] 57 ......................... loadThis 
    1021: [1] 7b d8 14 fa 11 ............. getObjName <script> <[TemplateParser,private]> 
    1026: [1] 56 b0 0c ................... loadString <> 
    1029: [2] 57 ......................... loadThis 
    1030: [3] 7b ae 15 fa 11 ............. getObjName <pos> <[TemplateParser,private]> 
    1035: [3] 7c ......................... getObjNameExpr 
    1036: [1] 56 8c 6d ................... loadString <@> 
    1039: [2] 25 ......................... compareEq 
    1040: [1] 39 ......................... dup 
    1041: [2] 13 23 ...................... branchFalse8 <addr: 1078> 
    1043: [1] 90 ......................... pop 
    1044: [0] 57 ......................... loadThis 
    1045: [1] 7b ae 15 fa 11 ............. getObjName <pos> <[TemplateParser,private]> 
    1050: [1] 45 ......................... load1 
    1051: [2] 2b ......................... compareLt 
    1052: [1] 39 ......................... dup 
    1053: [2] 14 17 ...................... branchTrue8 <addr: 1078> 
    1055: [1] 90 ......................... pop 
    1056: [0] 57 ......................... loadThis 
    1057: [1] 7b d8 14 fa 11 ............. getObjName <script> <[TemplateParser,private]> 
    1062: [1] 56 b0 0c ................... loadString <> 
    1065: [2] 57 ......................... loadThis 
    1066: [3] 7b ae 15 fa 11 ............. getObjName <pos> <[TemplateParser,private]> 
    1071: [3] 45 ......................... load1 
    1072: [4] c3 ......................... sub 
    1073: [3] 7c ......................... getObjNameExpr 
    1074: [1] 56 9c 61 ................... loadString <\> 
    1077: [2] 2c ......................... compareNe 
    1078: [1] 07 e2 04 f7 f7 ............. branchFalse <addr: 1388> 
    1083: [0] 33 f0 0e de 03 a0 61 ....... debug 

    # ejs.web.template/TemplateParser.es:239                         if (token.available > 0) {

    1090: [0] 5b ......................... getLocalSlot0 
    1091: [1] 7b 86 62 b4 03 ............. getObjName <available> <public> 
    1096: [1] 44 ......................... load0 
    1097: [2] 29 ......................... compareGt 
    1098: [1] 13 2a ...................... branchFalse8 <addr: 1142> 
    1100: [0] 33 f0 0e e0 03 9a 62 ....... debug 

    # ejs.web.template/TemplateParser.es:240                             pos--

    1107: [0] 57 ......................... loadThis 
    1108: [1] 7b ae 15 fa 11 ............. getObjName <pos> <[TemplateParser,private]> 
    1113: [1] 39 ......................... dup 
    1114: [2] 3f ff ...................... inc <255> 
    1116: [2] 57 ......................... loadThis 
    1117: [3] b3 ae 15 fa 11 ............. putObjName <pos> <[TemplateParser,private]> 
    1122: [1] 90 ......................... pop 
    1123: [0] 33 f0 0e e2 03 de 62 ....... debug 

    # ejs.web.template/TemplateParser.es:241                             return Token.Literal

    1130: [0] 50 ......................... loadGlobal 
    1131: [1] 7b dc 31 c2 01 ............. getObjName <Token> <ejs.web.template> 
    1136: [1] 82 3e 00 ................... getTypeSlot <slot: 31> <0> 
    1139: [1] bf ......................... returnValue 
    1140: [0] 3e 00 ...................... goto8 <addr: 1142> 
    1142: [0] 33 f0 0e e4 03 c0 63 ....... debug 

    # ejs.web.template/TemplateParser.es:242                         }

    1149: [0] 33 f0 0e e6 03 f4 63 ....... debug 

    # ejs.web.template/TemplateParser.es:243                         pos++

    1156: [0] 57 ......................... loadThis 
    1157: [1] 7b ae 15 fa 11 ............. getObjName <pos> <[TemplateParser,private]> 
    1162: [1] 39 ......................... dup 
    1163: [2] 3f 01 ...................... inc <1> 
    1165: [2] 57 ......................... loadThis 
    1166: [3] b3 ae 15 fa 11 ............. putObjName <pos> <[TemplateParser,private]> 
    1171: [1] 90 ......................... pop 
    1172: [0] 33 f0 0e e8 03 f6 72 ....... debug 

    # ejs.web.template/TemplateParser.es:244                         c = script[pos++]

    1179: [0] 57 ......................... loadThis 
    1180: [1] 7b d8 14 fa 11 ............. getObjName <script> <[TemplateParser,private]> 
    1185: [1] 56 b0 0c ................... loadString <> 
    1188: [2] 57 ......................... loadThis 
    1189: [3] 7b ae 15 fa 11 ............. getObjName <pos> <[TemplateParser,private]> 
    1194: [3] 39 ......................... dup 
    1195: [4] 3f 01 ...................... inc <1> 
    1197: [4] 57 ......................... loadThis 
    1198: [5] b3 ae 15 fa 11 ............. putObjName <pos> <[TemplateParser,private]> 
    1203: [3] 7c ......................... getObjNameExpr 
    1204: [1] 96 ......................... putLocalSlot2 
    1205: [0] 33 f0 0e ea 03 ca 73 ....... debug 

    # ejs.web.template/TemplateParser.es:245                         while (c.isAlpha || c.isDigit || c == '[' || c == ']' || c == '.' || c == '$' || c == '_' || 

    1212: [0] 5d ......................... getLocalSlot2 
    1213: [1] 7b b6 75 00 ................ getObjName <isAlpha> <> 
    1217: [1] 39 ......................... dup 
    1218: [2] 14 43 ...................... branchTrue8 <addr: 1287> 
    1220: [1] 90 ......................... pop 
    1221: [0] 5d ......................... getLocalSlot2 
    1222: [1] 7b c6 75 00 ................ getObjName <isDigit> <> 
    1226: [1] 39 ......................... dup 
    1227: [2] 14 3a ...................... branchTrue8 <addr: 1287> 
    1229: [1] 90 ......................... pop 
    1230: [0] 5d ......................... getLocalSlot2 
    1231: [1] 56 d6 75 ................... loadString <[> 
    1234: [2] 25 ......................... compareEq 
    1235: [1] 39 ......................... dup 
    1236: [2] 14 31 ...................... branchTrue8 <addr: 1287> 
    1238: [1] 90 ......................... pop 
    1239: [0] 5d ......................... getLocalSlot2 
    1240: [1] 56 da 75 ................... loadString <]> 
    1243: [2] 25 ......................... compareEq 
    1244: [1] 39 ......................... dup 
    1245: [2] 14 28 ...................... branchTrue8 <addr: 1287> 
    1247: [1] 90 ......................... pop 
    1248: [0] 5d ......................... getLocalSlot2 
    1249: [1] 56 b6 2d ................... loadString <.> 
    1252: [2] 25 ......................... compareEq 
    1253: [1] 39 ......................... dup 
    1254: [2] 14 1f ...................... branchTrue8 <addr: 1287> 
    1256: [1] 90 ......................... pop 
    1257: [0] 5d ......................... getLocalSlot2 
    1258: [1] 56 de 75 ................... loadString <$> 
    1261: [2] 25 ......................... compareEq 
    1262: [1] 39 ......................... dup 
    1263: [2] 14 16 ...................... branchTrue8 <addr: 1287> 
    1265: [1] 90 ......................... pop 
    1266: [0] 5d ......................... getLocalSlot2 
    1267: [1] 56 e2 75 ................... loadString <_> 
    1270: [2] 25 ......................... compareEq 
    1271: [1] 39 ......................... dup 
    1272: [2] 14 0d ...................... branchTrue8 <addr: 1287> 
    1274: [1] 90 ......................... pop 
    1275: [0] 33 f0 0e ec 03 e6 75 ....... debug 

    # ejs.web.template/TemplateParser.es:246                                 c == "'") {

    1282: [0] 5d ......................... getLocalSlot2 
    1283: [1] 56 96 3f ................... loadString <'> 
    1286: [2] 25 ......................... compareEq 
    1287: [1] 13 32 ...................... branchFalse8 <addr: 1339> 
    1289: [0] 33 f0 0e ee 03 be 76 ....... debug 

    # ejs.web.template/TemplateParser.es:247                             token.write(c)

    1296: [0] 5b ......................... getLocalSlot0 
    1297: [1] 5d ......................... getLocalSlot2 
    1298: [2] 18 6e 02 ................... callObjSlot <slot: 55> <argc: 1> 
    1301: [0] 33 f0 0e f0 03 94 77 ....... debug 

    # ejs.web.template/TemplateParser.es:248                             c = script[pos++]

    1308: [0] 57 ......................... loadThis 
    1309: [1] 7b d8 14 fa 11 ............. getObjName <script> <[TemplateParser,private]> 
    1314: [1] 56 b0 0c ................... loadString <> 
    1317: [2] 57 ......................... loadThis 
    1318: [3] 7b ae 15 fa 11 ............. getObjName <pos> <[TemplateParser,private]> 
    1323: [3] 39 ......................... dup 
    1324: [4] 3f 01 ...................... inc <1> 
    1326: [4] 57 ......................... loadThis 
    1327: [5] b3 ae 15 fa 11 ............. putObjName <pos> <[TemplateParser,private]> 
    1332: [3] 7c ......................... getObjNameExpr 
    1333: [1] 96 ......................... putLocalSlot2 
    1334: [0] 3d ff 01 f7 f7 ............. goto <addr: 1212> 
    1339: [0] 33 f0 0e f2 03 c0 63 ....... debug 

    # ejs.web.template/TemplateParser.es:249                         }

    1346: [0] 33 f0 0e f4 03 f0 77 ....... debug 

    # ejs.web.template/TemplateParser.es:250                         pos--

    1353: [0] 57 ......................... loadThis 
    1354: [1] 7b ae 15 fa 11 ............. getObjName <pos> <[TemplateParser,private]> 
    1359: [1] 39 ......................... dup 
    1360: [2] 3f ff ...................... inc <255> 
    1362: [2] 57 ......................... loadThis 
    1363: [3] b3 ae 15 fa 11 ............. putObjName <pos> <[TemplateParser,private]> 
    1368: [1] 90 ......................... pop 
    1369: [0] 33 f0 0e f6 03 ac 78 ....... debug 

    # ejs.web.template/TemplateParser.es:251                         return Token.Var

    1376: [0] 50 ......................... loadGlobal 
    1377: [1] 7b dc 31 c2 01 ............. getObjName <Token> <ejs.web.template> 
    1382: [1] 82 3c 00 ................... getTypeSlot <slot: 30> <0> 
    1385: [1] bf ......................... returnValue 
    1386: [0] 3e 00 ...................... goto8 <addr: 1388> 
    1388: [0] 33 f0 0e f8 03 a8 70 ....... debug 

    # ejs.web.template/TemplateParser.es:252                     }

    1395: [0] 33 f0 0e fa 03 d4 70 ....... debug 

    # ejs.web.template/TemplateParser.es:253                     token.write(c)

    1402: [0] 5b ......................... getLocalSlot0 
    1403: [1] 5d ......................... getLocalSlot2 
    1404: [2] 18 6e 02 ................... callObjSlot <slot: 55> <argc: 1> 
    1407: [0] 33 f0 0e fc 03 a2 34 ....... debug 

    # ejs.web.template/TemplateParser.es:254                     break

    1414: [0] 3d da 02 f7 f7 ............. goto <addr: 1592> 
    1419: [0] 3e 0e ...................... goto8 <addr: 1435> 
    1421: [0] 33 f0 0e 80 04 fe 78 ....... debug 

    # ejs.web.template/TemplateParser.es:256                 case "\r":

    1428: [0] 39 ......................... dup 
    1429: [1] 56 b4 79 ................... loadString <> 
    1432: [2] 26 ......................... compareStrictlyEq 
    1433: [1] 13 02 ...................... branchFalse8 <addr: 1437> 
    1435: [0] 3e 0e ...................... goto8 <addr: 1451> 
    1437: [0] 33 f0 0e 82 04 b8 79 ....... debug 

    # ejs.web.template/TemplateParser.es:257                 case "\n":

    1444: [0] 39 ......................... dup 
    1445: [1] 56 ee 79 ................... loadString <
> 
    1448: [2] 26 ......................... compareStrictlyEq 
    1449: [1] 13 40 ...................... branchFalse8 <addr: 1515> 
    1451: [0] 33 f0 0e 84 04 f2 79 ....... debug 

    # ejs.web.template/TemplateParser.es:258                     lineNumber++

    1458: [0] 57 ......................... loadThis 
    1459: [1] 7b 8c 16 fa 11 ............. getObjName <lineNumber> <[TemplateParser,private]> 
    1464: [1] 39 ......................... dup 
    1465: [2] 3f 01 ...................... inc <1> 
    1467: [2] 57 ......................... loadThis 
    1468: [3] b3 8c 16 fa 11 ............. putObjName <lineNumber> <[TemplateParser,private]> 
    1473: [1] 90 ......................... pop 
    1474: [0] 33 f0 0e 86 04 d4 70 ....... debug 

    # ejs.web.template/TemplateParser.es:259                     token.write(c)

    1481: [0] 5b ......................... getLocalSlot0 
    1482: [1] 5d ......................... getLocalSlot2 
    1483: [2] 18 6e 02 ................... callObjSlot <slot: 55> <argc: 1> 
    1486: [0] 33 f0 0e 88 04 b4 7a ....... debug 

    # ejs.web.template/TemplateParser.es:260                     tid = Token.Literal

    1493: [0] 50 ......................... loadGlobal 
    1494: [1] 7b dc 31 c2 01 ............. getObjName <Token> <ejs.web.template> 
    1499: [1] 82 3e 00 ................... getTypeSlot <slot: 31> <0> 
    1502: [1] 95 ......................... putLocalSlot1 
    1503: [0] 33 f0 0e 8a 04 a2 34 ....... debug 

    # ejs.web.template/TemplateParser.es:261                     break

    1510: [0] 3d 9a 01 f7 f7 ............. goto <addr: 1592> 
    1515: [0] 33 f0 0e 8e 04 c6 52 ....... debug 

    # ejs.web.template/TemplateParser.es:263                 default:

    1522: [0] 33 f0 0e 92 04 84 7b ....... debug 

    # ejs.web.template/TemplateParser.es:265                     if (c == '\"' || c == '\\') {

    1529: [0] 5d ......................... getLocalSlot2 
    1530: [1] 56 a4 3f ................... loadString <"> 
    1533: [2] 25 ......................... compareEq 
    1534: [1] 39 ......................... dup 
    1535: [2] 14 06 ...................... branchTrue8 <addr: 1543> 
    1537: [1] 90 ......................... pop 
    1538: [0] 5d ......................... getLocalSlot2 
    1539: [1] 56 9c 61 ................... loadString <\> 
    1542: [2] 25 ......................... compareEq 
    1543: [1] 13 10 ...................... branchFalse8 <addr: 1561> 
    1545: [0] 33 f0 0e 94 04 e8 7b ....... debug 

    # ejs.web.template/TemplateParser.es:266                         token.write('\\')

    1552: [0] 5b ......................... getLocalSlot0 
    1553: [1] 56 9c 61 ................... loadString <\> 
    1556: [2] 18 6e 02 ................... callObjSlot <slot: 55> <argc: 1> 
    1559: [0] 3e 00 ...................... goto8 <addr: 1561> 
    1561: [0] 33 f0 0e 96 04 a8 70 ....... debug 

    # ejs.web.template/TemplateParser.es:267                     }

    1568: [0] 33 f0 0e 98 04 d4 70 ....... debug 

    # ejs.web.template/TemplateParser.es:268                     token.write(c)

    1575: [0] 5b ......................... getLocalSlot0 
    1576: [1] 5d ......................... getLocalSlot2 
    1577: [2] 18 6e 02 ................... callObjSlot <slot: 55> <argc: 1> 
    1580: [0] 33 f0 0e 9a 04 a2 34 ....... debug 

    # ejs.web.template/TemplateParser.es:269                     break

    1587: [0] 3d 00 f7 f7 f7 ............. goto <addr: 1592> 
    1592: [0] 90 ......................... pop 
    1593: [-1] 3d a9 18 f7 f7 ............. goto <addr: 42> 
    1598: [-1] 33 f0 0e a0 04 bc 7c ....... debug 

    # ejs.web.template/TemplateParser.es:272             if (token.available == 0 && pos >= script.length) {

    1605: [-1] 5b ......................... getLocalSlot0 
    1606: [0] 7b 86 62 b4 03 ............. getObjName <available> <public> 
    1611: [0] 44 ......................... load0 
    1612: [1] 25 ......................... compareEq 
    1613: [0] 39 ......................... dup 
    1614: [1] 13 13 ...................... branchFalse8 <addr: 1635> 
    1616: [0] 90 ......................... pop 
    1617: [-1] 57 ......................... loadThis 
    1618: [0] 7b ae 15 fa 11 ............. getObjName <pos> <[TemplateParser,private]> 
    1623: [0] 57 ......................... loadThis 
    1624: [1] 7b d8 14 fa 11 ............. getObjName <script> <[TemplateParser,private]> 
    1629: [1] 7b f4 0b b4 03 ............. getObjName <length> <public> 
    1634: [1] 28 ......................... compareGe 
    1635: [0] 13 13 ...................... branchFalse8 <addr: 1656> 
    1637: [-1] 33 f0 0e a2 04 bc 7d ....... debug 

    # ejs.web.template/TemplateParser.es:273                 return Token.Eof

    1644: [-1] 50 ......................... loadGlobal 
    1645: [0] 7b dc 31 c2 01 ............. getObjName <Token> <ejs.web.template> 
    1650: [0] 82 38 00 ................... getTypeSlot <slot: 28> <0> 
    1653: [0] bf ......................... returnValue 
    1654: [0] 3e 00 ...................... goto8 <addr: 1656> 
    1656: [0] 33 f0 0e a6 04 fe 7d ....... debug 

    # ejs.web.template/TemplateParser.es:275             return tid

    1663: [0] 5c ......................... getLocalSlot1 
    1664: [1] bf ......................... returnValue 
    
VARIABLE:   [token-00]  private var token : ByteArray
VARIABLE:   [tid-01]  private var tid
VARIABLE:   [c-02]  private var c

FUNCTION:   [TemplateParser-31]  [TemplateParser,private] const function eatSpace() : Void


    0000: [0] 33 f0 0e ae 04 96 7f ....... debug 

    # ejs.web.template/TemplateParser.es:279             while (script[pos].isSpace) {

    0007: [0] 57 ......................... loadThis 
    0008: [1] 7b d8 14 fa 11 ............. getObjName <script> <[TemplateParser,private]> 
    0013: [1] 56 b0 0c ................... loadString <> 
    0016: [2] 57 ......................... loadThis 
    0017: [3] 7b ae 15 fa 11 ............. getObjName <pos> <[TemplateParser,private]> 
    0022: [3] 7c ......................... getObjNameExpr 
    0023: [1] 7b ea 7f b0 0c ............. getObjName <isSpace> <> 
    0028: [1] 13 19 ...................... branchFalse8 <addr: 55> 
    0030: [0] 33 f0 0e b0 04 fa 7f ....... debug 

    # ejs.web.template/TemplateParser.es:280                 pos++

    0037: [0] 57 ......................... loadThis 
    0038: [1] 7b ae 15 fa 11 ............. getObjName <pos> <[TemplateParser,private]> 
    0043: [1] 39 ......................... dup 
    0044: [2] 3f 01 ...................... inc <1> 
    0046: [2] 57 ......................... loadThis 
    0047: [3] b3 ae 15 fa 11 ............. putObjName <pos> <[TemplateParser,private]> 
    0052: [1] 90 ......................... pop 
    0053: [0] 3e d0 ...................... goto8 <addr: 7> 
    0055: [0] be ......................... return 
    0056: [0] 33 f0 0e b4 04 a6 80 01 .... debug 

    # ejs.web.template/TemplateParser.es:282         }
    
VARIABLE:   [ContentMarker-00]  [TemplateParser,private] const var ContentMarker : String
VARIABLE:   [ContentPattern-01]  [TemplateParser,private] const var ContentPattern : RegExp
VARIABLE:   [script-02]  [TemplateParser,private] var script : String
VARIABLE:   [pos-03]  [TemplateParser,private] var pos : Number
VARIABLE:   [lineNumber-04]  [TemplateParser,private] var lineNumber : Number
VARIABLE:   [Header-05]  [TemplateParser,private] const var Header
VARIABLE:   [Footer-06]  [TemplateParser,private] const var Footer
VARIABLE:   [MvcHeader-07]  [TemplateParser,private] const var MvcHeader

CLASS:      class Token extends Object
            #  Class Details: 35 class traits, 0 instance traits, requested slot 190

FUNCTION:   [Token-26]  -initializer- static function Token-initializer() : Void


    0000: [0] 33 f0 0e c4 04 96 81 01 .... debug 

    # ejs.web.template/TemplateParser.es:290         public static const Err         = -1        /* Any input error */

    0008: [0] 45 ......................... load1 
    0009: [1] 88 ......................... neg 
    0010: [1] bc 36 02 ................... putThisTypeSlot <slot: 27> <1> 
    0013: [0] 33 f0 0e c6 04 b2 82 01 .... debug 

    # ejs.web.template/TemplateParser.es:291         public static const Eof         = 0         /* End of file */

    0021: [0] 44 ......................... load0 
    0022: [1] bc 38 02 ................... putThisTypeSlot <slot: 28> <1> 
    0025: [0] 33 f0 0e c8 04 c6 83 01 .... debug 

    # ejs.web.template/TemplateParser.es:292         public static const EjsTag      = 1         /* <% text %> */

    0033: [0] 45 ......................... load1 
    0034: [1] bc 3a 02 ................... putThisTypeSlot <slot: 29> <1> 
    0037: [0] 33 f0 0e ca 04 de 84 01 .... debug 

    # ejs.web.template/TemplateParser.es:293         public static const Var         = 2         /* @@var */

    0045: [0] 46 ......................... load2 
    0046: [1] bc 3c 02 ................... putThisTypeSlot <slot: 30> <1> 
    0049: [0] 33 f0 0e cc 04 e6 85 01 .... debug 

    # ejs.web.template/TemplateParser.es:294         public static const Literal     = 3         /* literal HTML */

    0057: [0] 47 ......................... load3 
    0058: [1] bc 3e 02 ................... putThisTypeSlot <slot: 31> <1> 
    0061: [0] 33 f0 0e ce 04 84 87 01 .... debug 

    # ejs.web.template/TemplateParser.es:295         public static const Equals      = 4         /* <%= expression */

    0069: [0] 48 ......................... load4 
    0070: [1] bc 40 02 ................... putThisTypeSlot <slot: 32> <1> 
    0073: [0] 33 f0 0e d0 04 a4 88 01 .... debug 

    # ejs.web.template/TemplateParser.es:296         public static const Control     = 6         /* <%@ control */

    0081: [0] 4a ......................... load6 
    0082: [1] bc 42 02 ................... putThisTypeSlot <slot: 33> <1> 
    0085: [0] 33 f0 0e d4 04 c0 89 01 .... debug 

    # ejs.web.template/TemplateParser.es:298         public static var tokens = [ "Err", "Eof", "EjsTag", "Var", "Literal", "Equals", "Control" ]

    0093: [0] 7e 0a ...................... getGlobalSlot <slot: 5> 
    0095: [1] 89 ......................... new 
    0096: [1] 39 ......................... dup 
    0097: [2] 56 aa 82 01 ................ loadString <Err> 
    0101: [3] c5 ......................... swap 
    0102: [3] 56 b0 0c ................... loadString <> 
    0105: [4] 44 ......................... load0 
    0106: [5] b2 ......................... putObjNameExpr 
    0107: [1] 39 ......................... dup 
    0108: [2] 56 be 83 01 ................ loadString <Eof> 
    0112: [3] c5 ......................... swap 
    0113: [3] 56 b0 0c ................... loadString <> 
    0116: [4] 45 ......................... load1 
    0117: [5] b2 ......................... putObjNameExpr 
    0118: [1] 39 ......................... dup 
    0119: [2] 56 d0 84 01 ................ loadString <EjsTag> 
    0123: [3] c5 ......................... swap 
    0124: [3] 56 b0 0c ................... loadString <> 
    0127: [4] 46 ......................... load2 
    0128: [5] b2 ......................... putObjNameExpr 
    0129: [1] 39 ......................... dup 
    0130: [2] 56 de 85 01 ................ loadString <Var> 
    0134: [3] c5 ......................... swap 
    0135: [3] 56 b0 0c ................... loadString <> 
    0138: [4] 47 ......................... load3 
    0139: [5] b2 ......................... putObjNameExpr 
    0140: [1] 39 ......................... dup 
    0141: [2] 56 f4 86 01 ................ loadString <Literal> 
    0145: [3] c5 ......................... swap 
    0146: [3] 56 b0 0c ................... loadString <> 
    0149: [4] 48 ......................... load4 
    0150: [5] b2 ......................... putObjNameExpr 
    0151: [1] 39 ......................... dup 
    0152: [2] 56 96 88 01 ................ loadString <Equals> 
    0156: [3] c5 ......................... swap 
    0157: [3] 56 b0 0c ................... loadString <> 
    0160: [4] 49 ......................... load5 
    0161: [5] b2 ......................... putObjNameExpr 
    0162: [1] 39 ......................... dup 
    0163: [2] 56 b0 89 01 ................ loadString <Control> 
    0167: [3] c5 ......................... swap 
    0168: [3] 56 b0 0c ................... loadString <> 
    0171: [4] 4a ......................... load6 
    0172: [5] b2 ......................... putObjNameExpr 
    0173: [1] bc 44 02 ................... putThisTypeSlot <slot: 34> <1> 
    0176: [0] be ......................... return 
    
VARIABLE:   [Token-27]  public const static var Err
VARIABLE:   [Token-28]  public const static var Eof
VARIABLE:   [Token-29]  public const static var EjsTag
VARIABLE:   [Token-30]  public const static var Var
VARIABLE:   [Token-31]  public const static var Literal
VARIABLE:   [Token-32]  public const static var Equals
VARIABLE:   [Token-33]  public const static var Control
VARIABLE:   [Token-34]  public static var tokens

----------------------------------------------------------------------------------------------

#
#  Global slot assignments (Num prop 191)
#
0188    public var Template: Type
0189    public var TemplateParser: Type
0190    ejs.web.template var Token: Type

#
#  Initializer slot assignments (Num prop 0)
#

#
#  Class slot assignments for the "Template" class (Num slots 27, num inherited 26)
#
0000    public function constructor
0001    ejs function length
0002    public function prototype
0003    public function clone
0004    reserved slot for base class property
0005    reserved slot for base class property
0006    reserved slot for base class property
0007    reserved slot for base class property
0008    iterator function get
0009    reserved slot for base class property
0010    reserved slot for base class property
0011    reserved slot for base class property
0012    iterator function getValues
0013    public function hasOwnProperty
0014    reserved slot for base class property
0015    reserved slot for base class property
0016    public function isPrototypeOf
0017    reserved slot for base class property
0018    reserved slot for base class property
0019    reserved slot for base class property
0020    public function propertyIsEnumerable
0021    reserved slot for base class property
0022    public function toJSON
0023    public function toLocaleString
0024    public function toString
0025    public function valueOf
0026    public function load

#
#  Instance slot assignments for the "Template" class (Num prop 0, num inherited 0)
#

#
#  Class slot assignments for the "TemplateParser" class (Num slots 32, num inherited 26)
#
0000    public function constructor
0001    ejs function length
0002    public function prototype
0003    public function clone
0004    reserved slot for base class property
0005    reserved slot for base class property
0006    reserved slot for base class property
0007    reserved slot for base class property
0008    iterator function get
0009    reserved slot for base class property
0010    reserved slot for base class property
0011    reserved slot for base class property
0012    iterator function getValues
0013    public function hasOwnProperty
0014    reserved slot for base class property
0015    reserved slot for base class property
0016    public function isPrototypeOf
0017    reserved slot for base class property
0018    reserved slot for base class property
0019    reserved slot for base class property
0020    public function propertyIsEnumerable
0021    reserved slot for base class property
0022    public function toJSON
0023    public function toLocaleString
0024    public function toString
0025    public function valueOf
0026    -constructor- function TemplateParser
0027    public function build
0028    public function buildView
0029    public function parse
0030    internal-4a3b8e4e55be68b33efb70af76d45738-25 function getToken
0031    [TemplateParser,private] function eatSpace

#
#  Instance slot assignments for the "TemplateParser" class (Num prop 8, num inherited 0)
#
0000    [TemplateParser,private] var ContentMarker: String
0001    [TemplateParser,private] var ContentPattern: RegExp
0002    [TemplateParser,private] var script: String
0003    [TemplateParser,private] var pos: Number
0004    [TemplateParser,private] var lineNumber: Number
0005    [TemplateParser,private] var Header
0006    [TemplateParser,private] var Footer
0007    [TemplateParser,private] var MvcHeader

#
#  Class slot assignments for the "Token" class (Num slots 35, num inherited 26)
#
0000    public function constructor
0001    ejs function length
0002    public function prototype
0003    public function clone
0004    reserved slot for base class property
0005    reserved slot for base class property
0006    reserved slot for base class property
0007    reserved slot for base class property
0008    iterator function get
0009    reserved slot for base class property
0010    reserved slot for base class property
0011    reserved slot for base class property
0012    iterator function getValues
0013    public function hasOwnProperty
0014    reserved slot for base class property
0015    reserved slot for base class property
0016    public function isPrototypeOf
0017    reserved slot for base class property
0018    reserved slot for base class property
0019    reserved slot for base class property
0020    public function propertyIsEnumerable
0021    reserved slot for base class property
0022    public function toJSON
0023    public function toLocaleString
0024    public function toString
0025    public function valueOf
0026    -initializer- function Token-initializer
0027    public var Err
0028    public var Eof
0029    public var EjsTag
0030    public var Var
0031    public var Literal
0032    public var Equals
0033    public var Control
0034    public var tokens

#
#  Instance slot assignments for the "Token" class (Num prop 0, num inherited 0)
#

----------------------------------------------------------------------------------------------
#
#  Constant Pool (size 8971 bytes)
#
0000   ""
0001   "ejs"
0002   "ejs.cjs"
0003   "ejs.web"
0004   "ejs.web.template/Template.es"
0005   "}"
0006   "internal-c79397ecb43e3e73d583b8b269c71b7f-24"
0007   "ejs.web.template"
0008   "module ejs.web.template  {"
0009   "    require ejs.cjs"
0010   "    require ejs.web"
0011   "    public class Template {"
0012   "Template"
0013   "public"
0014   "        use default namespace public"
0015   "        static function load(request: Request): Object {"
0016   "path"
0017   "private"
0018   "            let path = request.dir.join(request.pathInfo.slice(1))"
0019   "dir"
0020   "pathInfo"
0021   "            Loader.setConfig(request.config)"
0022   "Loader"
0023   "config"
0024   "            return Loader.load(path, path, function (path) {"
0025   "data"
0026   "                let data = TemplateParser().build(path.readString())"
0027   "TemplateParser"
0028   "readString"
0029   "                return Loader.wrap(data)"
0030   "--fun_20980--697345695--"
0031   "            })"
0032   "load"
0033   "request"
0034   "Request"
0035   "Function"
0036   "Object"
0037   "constructor"
0038   "length"
0039   "Number"
0040   "prototype"
0041   "clone"
0042   ""
0043   "get"
0044   "iterator"
0045   "Iterator"
0046   "getValues"
0047   "hasOwnProperty"
0048   "Boolean"
0049   "isPrototypeOf"
0050   "propertyIsEnumerable"
0051   "toJSON"
0052   "String"
0053   "toLocaleString"
0054   "toString"
0055   "valueOf"
0056   "block_0005_514"
0057   "-block-"
0058   "ejs.web.template/TemplateParser.es"
0059   "internal-4a3b8e4e55be68b33efb70af76d45738-25"
0060   "    public class TemplateParser {"
0061   "        private const ContentMarker: String  = "__ejs:CONTENT:ejs__""
0062   "ContentMarker"
0063   "[TemplateParser,private]"
0064   "__ejs:CONTENT:ejs__"
0065   "        private const ContentPattern: RegExp = new RegExp(ContentMarker)"
0066   "ContentPattern"
0067   "RegExp"
0068   "        private var script: String"
0069   "script"
0070   "        private var pos: Number = 0"
0071   "pos"
0072   "        private var lineNumber: Number = 0"
0073   "lineNumber"
0074   "        private const Header = "require ejs.web\n\nexports.app = function (request: Request) {\n" + "
0075   "Header"
0076   "require ejs.web

exports.app = function (request: Request) {
"
0077   "            "    View(request).render(function(request: Request) {\n""
0078   "    View(request).render(function(request: Request) {
"
0079   "        private const Footer = "\n})\n}\n""
0080   "Footer"
0081   "
})
}
"
0082   "        private const MvcHeader = "require ejs.web\n""
0083   "MvcHeader"
0084   "require ejs.web
"
0085   "        public function build(script: String, options: Object = {}): String"
0086   "            Header + parse(script, options) + Footer"
0087   "build"
0088   "options"
0089   "        public function buildView(name: String, script: String, options: Object = {}): String {"
0090   "            return MvcHeader + "public dynamic class " + name + "View extends View {\n\n" +"
0091   "                parse(script, options) + "\n    }\n}\n""
0092   "                "    public override function render(request: Request) {\n" + "
0093   "                "    }\n\n" + "
0094   "                "        super(request)\n" +"
0095   "                "    function " + name + "View(request: Request) {\n" +"
0096   "public dynamic class "
0097   "View extends View {

"
0098   "    function "
0099   "View(request: Request) {
"
0100   "        super(request)
"
0101   "    }

"
0102   "    public override function render(request: Request) {
"
0103   "
    }
}
"
0104   "buildView"
0105   "name"
0106   "        public function parse(script: String, options: Object = {}): String {"
0107   "token"
0108   "            var token: ByteArray = new ByteArray"
0109   "            var out: ByteArray = new ByteArray"
0110   "out"
0111   "            var dir: Path = options.dir || Path(".")"
0112   "."
0113   "            var tid: Number"
0114   "tid"
0115   "            var layoutPage: Path"
0116   "layoutPage"
0117   "            if (options.layout) {"
0118   "layout"
0119   "                layoutPage = Path(options.layout)"
0120   "            }"
0121   "            this.script = script"
0122   "            while ((tid = getToken(token)) != Token.Eof) {"
0123   "Token"
0124   "                switch (tid) {"
0125   "                case Token.Literal:"
0126   "                    out.write("\n        write(\"" + token + "\");")"
0127   "
        write(""
0128   "");"
0129   "                    break"
0130   "                case Token.Var:"
0131   "                    out.write("\n        write(\"\" + ", token, ");\n")"
0132   "
        write("" + "
0133   ");
"
0134   "                case Token.Equals:"
0135   "                    out.write("\n        write(\"\" + (", token, "));\n")"
0136   "
        write("" + ("
0137   "));
"
0138   "                case Token.EjsTag:"
0139   "                    out.write(token.toString())"
0140   "                case Token.Control:"
0141   "args"
0142   "-hoisted-7"
0143   "                    let args: Array = token.toString().split(/\s/g)"
0144   "/\s/g"
0145   "split"
0146   "                    let cmd: String = args[0]"
0147   "cmd"
0148   "                    switch (cmd) {"
0149   "                    case "include":"
0150   "include"
0151   "                        let path = args[1].trim("'").trim('"')"
0152   "'"
0153   "trim"
0154   """
0155   "                        let incPath = dir.join(path)"
0156   "incPath"
0157   "                        let inc: TemplateParser = new TemplateParser"
0158   "inc"
0159   "                        out.write(inc.parse(incPath.readString(), options))"
0160   "                        break"
0161   "                    case "layout":"
0162   "                        let path = args[1]"
0163   "                        if (path == "" || path == '""') {"
0164   """"
0165   "                            layoutPage = undefined"
0166   "undefined"
0167   "                        } else {"
0168   "                            path = args[1].trim("'").trim('"').trim('.ejs') + ".ejs""
0169   ".ejs"
0170   "                            if (!options.layouts) {"
0171   "layouts"
0172   "                                throw "Location of layout page not defined in options""
0173   "Location of layout page not defined in options"
0174   "                            }"
0175   "                            layoutPage = Path(options.layouts).join(path)"
0176   "                            if (!layoutPage.exists) {"
0177   "exists"
0178   "                                throw "Can't find layout page " + layoutPage"
0179   "Can't find layout page "
0180   "                    case "content":"
0181   "content"
0182   "                        out.write(ContentMarker)"
0183   "                    default:"
0184   "                        throw "Bad control directive: " + cmd"
0185   "Bad control directive: "
0186   "                default:"
0187   "                case Token.Err:"
0188   "                    throw "Bad input token: " + token"
0189   "Bad input token: "
0190   "            if (layoutPage && layoutPage != options.currentLayout) {"
0191   "currentLayout"
0192   "layoutOptions"
0193   "-hoisted-12"
0194   "                let layoutOptions = blend(options.clone(), { currentLayout: layoutPage })"
0195   "                let layoutText: String = new TemplateParser().parse(layoutPage.readString(), layoutOptions)"
0196   "layoutText"
0197   "                return layoutText.replace(ContentPattern, out.toString())"
0198   "            return out.toString()"
0199   "parse"
0200   "ByteArray"
0201   "Path"
0202   "Array"
0203   "        function getToken(token: ByteArray): Number {"
0204   "            var tid = Token.Literal"
0205   "            token.flush()"
0206   "            var c"
0207   "c"
0208   "            while (pos < script.length) {"
0209   "                c = script[pos++]"
0210   "                switch (c) {"
0211   "                case '<':"
0212   "<"
0213   "                    if (script[pos] == '%' && (pos < 2 || script[pos - 2] != '\\')) {"
0214   "%"
0215   "\"
0216   "                        if (token.available > 0) {"
0217   "available"
0218   "                            pos--"
0219   "                            return Token.Literal"
0220   "                        }"
0221   "                        pos++"
0222   "                        eatSpace()"
0223   "                        if (script[pos] == '=') {"
0224   "="
0225   "                            pos++"
0226   "                            eatSpace()"
0227   "                            while ((c = script[pos]) != undefined && (c != '%' || script[pos+1] != '>' || "
0228   ">"
0229   "                                    script[pos-1] == '\\')) {"
0230   "                                token.write(c)"
0231   "                                pos++"
0232   "                            pos += 2"
0233   "                            return Token.Equals"
0234   "                        } else if (script[pos] == '@') {"
0235   "@"
0236   "                            while ((c = script[pos]) != undefined && (c != '%' || script[pos+1] != '>')) {"
0237   "                            return Token.Control"
0238   "                            return Token.EjsTag"
0239   "                    }"
0240   "                    token.write(c)"
0241   "                case '@':"
0242   "                    if (script[pos] == '@' && (pos < 1 || script[pos-1] != '\\')) {"
0243   "                        c = script[pos++]"
0244   "                        while (c.isAlpha || c.isDigit || c == '[' || c == ']' || c == '.' || c == '$' || c == '_' || "
0245   "isAlpha"
0246   "isDigit"
0247   "["
0248   "]"
0249   "$"
0250   "_"
0251   "                                c == "'") {"
0252   "                            token.write(c)"
0253   "                            c = script[pos++]"
0254   "                        pos--"
0255   "                        return Token.Var"
0256   "                case "\r":"
0257   ""
0258   "                case "\n":"
0259   "
"
0260   "                    lineNumber++"
0261   "                    tid = Token.Literal"
0262   "                    if (c == '\"' || c == '\\') {"
0263   "                        token.write('\\')"
0264   "            if (token.available == 0 && pos >= script.length) {"
0265   "                return Token.Eof"
0266   "            return tid"
0267   "getToken"
0268   "        private function eatSpace(): Void {"
0269   "            while (script[pos].isSpace) {"
0270   "isSpace"
0271   "                pos++"
0272   "        }"
0273   "eatSpace"
0274   "Void"
0275   "-constructor-"
0276   "    class Token {"
0277   "        public static const Err         = -1        /* Any input error */"
0278   "Err"
0279   "        public static const Eof         = 0         /* End of file */"
0280   "Eof"
0281   "        public static const EjsTag      = 1         /* <% text %> */"
0282   "EjsTag"
0283   "        public static const Var         = 2         /* @@var */"
0284   "Var"
0285   "        public static const Literal     = 3         /* literal HTML */"
0286   "Literal"
0287   "        public static const Equals      = 4         /* <%= expression */"
0288   "Equals"
0289   "        public static const Control     = 6         /* <%@ control */"
0290   "Control"
0291   "        public static var tokens = [ "Err", "Eof", "EjsTag", "Var", "Literal", "Equals", "Control" ]"
0292   "tokens"
0293   "Token-initializer"
0294   "-initializer-"
0295   "block_0005_516"
0296   "__initializer__"
