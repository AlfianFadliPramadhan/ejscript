/*
    libejs.bit -- Bit File for the Ejs library
 */

Bit.load({

    defaults: {
        '+xincludes': [ '.', 'slots' ],
    },

    targets: {
        slots: {
            enable: false,
            path: '${INC}/ejs.slots.h',
            files: [ 'slots/*.h' ],
            build: "
throw 'boom'
                for each (header in bit.target.files) {
                    let dest = bit.dir.inc.join(header.basename)
                    if (!dest.exists) {
                        trace('Export', header)
                        cp(header, dest)
                    }
                }
            "
            'generate-sh': "\
                cp ${SRC}/src/slots/*.h ${INC}
            "
        },

        libejs: {
            type: 'lib',
            headers: [ 'slots/*.h', '*.h' ], 
            sources: [ 
                'compiler/*.c',
                'core/src/*.c',
                'vm/*.c'
            ],
            depends: [ 'libmpr', 'libpcre', 'libhttp', 'slots' ],
        },

        'clean-slots': {
            type: 'clean',
            action: "rm('${INC}/*.slots.h')",
        }
	},
})
