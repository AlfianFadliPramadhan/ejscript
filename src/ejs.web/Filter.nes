

let address = App.args[1] || App.config.test.http_port || ":6700"
let server: HttpServer = new HttpServer(".")

//  TODO -- or Request.setPipeline

//  Pass in type or function factory
server.setPipeline(function(request) {
    return { handler: "ejs", in: ["chunk", "range", "upload"], out: ["auth", "range", "chunk", LowerCase], connector: "net" }
})

var router = Router(MyRoutes)
server.on("readable", function (event, request) {
    server.serve(request)
})

App.log.info("Listen on " + address)
server.listen(address)
App.eventLoop()

/////////////////////////////////////////////

class LowerCase extends Filter {
    var buf: ByteArray

    function LowerCase()
        buf = ByteArray(System.Bufsize)

    override function put(data: ByteArray): Count
        buf.write(data.readString(buf.room).toLowerCase())

    override function service(): Void {
        if (buf.available) {
            next.write(buf)
        }
    }
}

//  TODO -- must run before creating pipeline!!!

