#
#   ejs-windows-static.nmake -- Makefile to build Embedthis Ejscript for windows
#

PRODUCT            = ejs
VERSION            = 2.3.2
BUILD_NUMBER       = 0
PROFILE            = static
PA                 = $(PROCESSOR_ARCHITECTURE)

!IF "$(PA)" == "AMD64"
ARCH               = x64
ENTRY              = _DllMainCRTStartup
!ELSE
ARCH               = x86
ENTRY              = _DllMainCRTStartup@12
!ENDIF

OS                 = windows
CONFIG             = $(OS)-$(ARCH)-$(PROFILE)
LBIN               = $(CONFIG)\bin

BIT_PACK_EST       = 1
BIT_PACK_MATRIXSSL = 0
BIT_PACK_OPENSSL   = 0
BIT_PACK_PCRE      = 1
BIT_PACK_SQLITE    = 1
BIT_PACK_SSL       = 1
BIT_PACK_ZLIB      = 1

!IF "$(BIT_PACK_EST)" == "1"
BIT_PACK_SSL = 1
!ENDIF

!IF "$(BIT_PACK_LIB)" == "1"
BIT_PACK_COMPILER = 1
!ENDIF

!IF "$(BIT_PACK_MATRIXSSL)" == "1"
BIT_PACK_SSL = 1
!ENDIF

!IF "$(BIT_PACK_NANOSSL)" == "1"
BIT_PACK_SSL = 1
!ENDIF

!IF "$(BIT_PACK_OPENSSL)" == "1"
BIT_PACK_SSL = 1
!ENDIF

!IF "$(BIT_PACK_RC)" == "1"
BIT_PACK_WINSDK = 1
!ENDIF


BIT_PACK_COMPILER_PATH    = cl
BIT_PACK_DOXYGEN_PATH     = doxygen
BIT_PACK_DSI_PATH         = dsi
BIT_PACK_EJSCRIPT_PATH    = ejscript
BIT_PACK_EST_PATH         = est
BIT_PACK_LIB_PATH         = lib.exe
BIT_PACK_LINK_PATH        = link
BIT_PACK_MAN_PATH         = man
BIT_PACK_MAN2HTML_PATH    = man2html
BIT_PACK_MATRIXSSL_PATH   = /usr/src/matrixssl
BIT_PACK_NANOSSL_PATH     = /usr/src/nanossl
BIT_PACK_OPENSSL_PATH     = /usr/src/openssl
BIT_PACK_PCRE_PATH        = pcre
BIT_PACK_PMAKER_PATH      = pmaker
BIT_PACK_RC_PATH          = rc
BIT_PACK_SQLITE_PATH      = sqlite
BIT_PACK_SSL_PATH         = ssl
BIT_PACK_WINSDK_PATH      = winsdk
BIT_PACK_ZIP_PATH         = zip
BIT_PACK_ZLIB_PATH        = zlib

CC                 = cl
LD                 = link
RC                 = rc
CFLAGS             = -nologo -GR- -W3 -O2 -MD
DFLAGS             = -D_REENTRANT -D_MT -DBIT_PACK_EST=$(BIT_PACK_EST) -DBIT_PACK_MATRIXSSL=$(BIT_PACK_MATRIXSSL) -DBIT_PACK_OPENSSL=$(BIT_PACK_OPENSSL) -DBIT_PACK_PCRE=$(BIT_PACK_PCRE) -DBIT_PACK_SQLITE=$(BIT_PACK_SQLITE) -DBIT_PACK_SSL=$(BIT_PACK_SSL) -DBIT_PACK_ZLIB=$(BIT_PACK_ZLIB) 
IFLAGS             = -I$(CONFIG)\inc
LDFLAGS            = -nologo -nodefaultlib -incremental:no -machine:$(ARCH)
LIBPATHS           = "-libpath:$(CONFIG)\bin"
LIBS               = ws2_32.lib advapi32.lib user32.lib kernel32.lib oldnames.lib msvcrt.lib shell32.lib

BIT_ROOT_PREFIX    = C:
BIT_BASE_PREFIX    = $(BIT_ROOT_PREFIX)\Program Files
BIT_APP_PREFIX     = $(BIT_BASE_PREFIX)\Embedthis Ejscript
BIT_VAPP_PREFIX    = $(BIT_APP_PREFIX)
BIT_DATA_PREFIX    = $(BIT_VAPP_PREFIX)
BIT_STATE_PREFIX   = $(BIT_VAPP_PREFIX)
BIT_BIN_PREFIX     = $(BIT_VAPP_PREFIX)\bin
BIT_INC_PREFIX     = $(BIT_VAPP_PREFIX)\inc
BIT_LIB_PREFIX     = $(BIT_VAPP_PREFIX)\lib
BIT_MAN_PREFIX     = $(BIT_VAPP_PREFIX)\man
BIT_ETC_PREFIX     = $(BIT_VAPP_PREFIX)
BIT_WEB_PREFIX     = $(BIT_VAPP_PREFIX)\web
BIT_LOG_PREFIX     = $(BIT_VAPP_PREFIX)\log
BIT_SPOOL_PREFIX   = $(BIT_VAPP_PREFIX)\tmp
BIT_CACHE_PREFIX   = $(BIT_VAPP_PREFIX)\cache
BIT_SRC_PREFIX     = $(BIT_VAPP_PREFIX)\src


TARGETS            = $(TARGETS) $(CONFIG)\bin\removeFiles.exe
TARGETS            = $(TARGETS) $(CONFIG)\bin\libmpr.lib
TARGETS            = $(TARGETS) $(CONFIG)\bin\libmprssl.lib
TARGETS            = $(TARGETS) $(CONFIG)\bin\ejsman.exe
TARGETS            = $(TARGETS) $(CONFIG)\bin\makerom.exe
TARGETS            = $(TARGETS) $(CONFIG)\bin\ca.crt
!IF "$(BIT_PACK_PCRE)" == "1"
TARGETS            = $(TARGETS) $(CONFIG)\bin\libpcre.lib
!ENDIF
TARGETS            = $(TARGETS) $(CONFIG)\bin\libhttp.lib
TARGETS            = $(TARGETS) $(CONFIG)\bin\http.exe
!IF "$(BIT_PACK_SQLITE)" == "1"
TARGETS            = $(TARGETS) $(CONFIG)\bin\libsqlite3.lib
!ENDIF
!IF "$(BIT_PACK_SQLITE)" == "1"
TARGETS            = $(TARGETS) $(CONFIG)\bin\sqlite.exe
!ENDIF
!IF "$(BIT_PACK_ZLIB)" == "1"
TARGETS            = $(TARGETS) $(CONFIG)\bin\libzlib.lib
!ENDIF
TARGETS            = $(TARGETS) $(CONFIG)\bin\libejs.lib
TARGETS            = $(TARGETS) $(CONFIG)\bin\ejs.exe
TARGETS            = $(TARGETS) $(CONFIG)\bin\ejsc.exe
TARGETS            = $(TARGETS) $(CONFIG)\bin\ejsmod.exe
TARGETS            = $(TARGETS) $(CONFIG)\bin\ejsrun.exe
TARGETS            = $(TARGETS) $(CONFIG)\bin\ejs.mod
TARGETS            = $(TARGETS) $(CONFIG)\bin\ejs.unix.mod
TARGETS            = $(TARGETS) $(CONFIG)\bin\jem.es
TARGETS            = $(TARGETS) $(CONFIG)\bin\jem.exe
TARGETS            = $(TARGETS) $(CONFIG)\bin\ejs.db.mod
TARGETS            = $(TARGETS) $(CONFIG)\bin\ejs.db.mapper.mod
TARGETS            = $(TARGETS) $(CONFIG)\bin\ejs.db.sqlite.mod
TARGETS            = $(TARGETS) $(CONFIG)\bin\libejs.db.sqlite.lib
TARGETS            = $(TARGETS) $(CONFIG)\bin\ejs.mail.mod
TARGETS            = $(TARGETS) $(CONFIG)\bin\ejs.web.mod
TARGETS            = $(TARGETS) $(CONFIG)\bin\libejs.web.lib
TARGETS            = $(TARGETS) $(CONFIG)\bin\www
TARGETS            = $(TARGETS) $(CONFIG)\bin\ejs.template.mod
TARGETS            = $(TARGETS) $(CONFIG)\bin\ejs.zlib.mod
TARGETS            = $(TARGETS) $(CONFIG)\bin\libejs.zlib.lib
TARGETS            = $(TARGETS) $(CONFIG)\bin\ejs.tar.mod
TARGETS            = $(TARGETS) $(CONFIG)\bin\mvc.es
TARGETS            = $(TARGETS) $(CONFIG)\bin\mvc.exe
TARGETS            = $(TARGETS) $(CONFIG)\bin\ejs.mvc.mod
TARGETS            = $(TARGETS) $(CONFIG)\bin\utest.es
TARGETS            = $(TARGETS) $(CONFIG)\bin\utest.worker
TARGETS            = $(TARGETS) $(CONFIG)\bin\utest.exe

!IFNDEF SHOW
.SILENT:
!ENDIF

all build compile: prep $(TARGETS)

.PHONY: prep

prep:
!IF "$(VSINSTALLDIR)" == ""
	echo "Visual Studio vars not set. Run vcvars.bat."
	exit 255
!ENDIF
!IF "$(BIT_APP_PREFIX)" == ""
	echo "BIT_APP_PREFIX not set."
	exit 255
!ENDIF
	@if not exist $(CONFIG)\bin md $(CONFIG)\bin
	@if not exist $(CONFIG)\inc md $(CONFIG)\inc
	@if not exist $(CONFIG)\obj md $(CONFIG)\obj
	@if not exist $(CONFIG)\inc\bit.h copy projects\ejs-windows-static-bit.h $(CONFIG)\inc\bit.h

clean:
	if exist "$(CONFIG)\bin\removeFiles.exe" del /Q "$(CONFIG)\bin\removeFiles.exe"
	if exist "$(CONFIG)\bin\removeFiles.lib" del /Q "$(CONFIG)\bin\removeFiles.lib"
	if exist "$(CONFIG)\bin\removeFiles.pdb" del /Q "$(CONFIG)\bin\removeFiles.pdb"
	if exist "$(CONFIG)\bin\removeFiles.exp" del /Q "$(CONFIG)\bin\removeFiles.exp"
	if exist "$(CONFIG)\bin\libmpr.lib" del /Q "$(CONFIG)\bin\libmpr.lib"
	if exist "$(CONFIG)\bin\libmprssl.lib" del /Q "$(CONFIG)\bin\libmprssl.lib"
	if exist "$(CONFIG)\bin\ejsman.exe" del /Q "$(CONFIG)\bin\ejsman.exe"
	if exist "$(CONFIG)\bin\ejsman.lib" del /Q "$(CONFIG)\bin\ejsman.lib"
	if exist "$(CONFIG)\bin\ejsman.pdb" del /Q "$(CONFIG)\bin\ejsman.pdb"
	if exist "$(CONFIG)\bin\ejsman.exp" del /Q "$(CONFIG)\bin\ejsman.exp"
	if exist "$(CONFIG)\bin\makerom.exe" del /Q "$(CONFIG)\bin\makerom.exe"
	if exist "$(CONFIG)\bin\makerom.lib" del /Q "$(CONFIG)\bin\makerom.lib"
	if exist "$(CONFIG)\bin\makerom.pdb" del /Q "$(CONFIG)\bin\makerom.pdb"
	if exist "$(CONFIG)\bin\makerom.exp" del /Q "$(CONFIG)\bin\makerom.exp"
	if exist "$(CONFIG)\bin\libest.lib" del /Q "$(CONFIG)\bin\libest.lib"
	if exist "$(CONFIG)\bin\ca.crt" del /Q "$(CONFIG)\bin\ca.crt"
	if exist "$(CONFIG)\bin\libpcre.lib" del /Q "$(CONFIG)\bin\libpcre.lib"
	if exist "$(CONFIG)\bin\libhttp.lib" del /Q "$(CONFIG)\bin\libhttp.lib"
	if exist "$(CONFIG)\bin\http.exe" del /Q "$(CONFIG)\bin\http.exe"
	if exist "$(CONFIG)\bin\http.lib" del /Q "$(CONFIG)\bin\http.lib"
	if exist "$(CONFIG)\bin\http.pdb" del /Q "$(CONFIG)\bin\http.pdb"
	if exist "$(CONFIG)\bin\http.exp" del /Q "$(CONFIG)\bin\http.exp"
	if exist "$(CONFIG)\bin\libsqlite3.lib" del /Q "$(CONFIG)\bin\libsqlite3.lib"
	if exist "$(CONFIG)\bin\sqlite.exe" del /Q "$(CONFIG)\bin\sqlite.exe"
	if exist "$(CONFIG)\bin\sqlite.lib" del /Q "$(CONFIG)\bin\sqlite.lib"
	if exist "$(CONFIG)\bin\sqlite.pdb" del /Q "$(CONFIG)\bin\sqlite.pdb"
	if exist "$(CONFIG)\bin\sqlite.exp" del /Q "$(CONFIG)\bin\sqlite.exp"
	if exist "$(CONFIG)\bin\libzlib.lib" del /Q "$(CONFIG)\bin\libzlib.lib"
	if exist "$(CONFIG)\bin\libejs.lib" del /Q "$(CONFIG)\bin\libejs.lib"
	if exist "$(CONFIG)\bin\ejs.exe" del /Q "$(CONFIG)\bin\ejs.exe"
	if exist "$(CONFIG)\bin\ejs.lib" del /Q "$(CONFIG)\bin\ejs.lib"
	if exist "$(CONFIG)\bin\ejs.pdb" del /Q "$(CONFIG)\bin\ejs.pdb"
	if exist "$(CONFIG)\bin\ejs.exp" del /Q "$(CONFIG)\bin\ejs.exp"
	if exist "$(CONFIG)\bin\ejsc.exe" del /Q "$(CONFIG)\bin\ejsc.exe"
	if exist "$(CONFIG)\bin\ejsc.lib" del /Q "$(CONFIG)\bin\ejsc.lib"
	if exist "$(CONFIG)\bin\ejsc.pdb" del /Q "$(CONFIG)\bin\ejsc.pdb"
	if exist "$(CONFIG)\bin\ejsc.exp" del /Q "$(CONFIG)\bin\ejsc.exp"
	if exist "$(CONFIG)\bin\ejsmod.exe" del /Q "$(CONFIG)\bin\ejsmod.exe"
	if exist "$(CONFIG)\bin\ejsmod.lib" del /Q "$(CONFIG)\bin\ejsmod.lib"
	if exist "$(CONFIG)\bin\ejsmod.pdb" del /Q "$(CONFIG)\bin\ejsmod.pdb"
	if exist "$(CONFIG)\bin\ejsmod.exp" del /Q "$(CONFIG)\bin\ejsmod.exp"
	if exist "$(CONFIG)\bin\ejsrun.exe" del /Q "$(CONFIG)\bin\ejsrun.exe"
	if exist "$(CONFIG)\bin\ejsrun.lib" del /Q "$(CONFIG)\bin\ejsrun.lib"
	if exist "$(CONFIG)\bin\ejsrun.pdb" del /Q "$(CONFIG)\bin\ejsrun.pdb"
	if exist "$(CONFIG)\bin\ejsrun.exp" del /Q "$(CONFIG)\bin\ejsrun.exp"
	if exist "$(CONFIG)\bin\jem.exe" del /Q "$(CONFIG)\bin\jem.exe"
	if exist "$(CONFIG)\bin\jem.lib" del /Q "$(CONFIG)\bin\jem.lib"
	if exist "$(CONFIG)\bin\jem.pdb" del /Q "$(CONFIG)\bin\jem.pdb"
	if exist "$(CONFIG)\bin\jem.exp" del /Q "$(CONFIG)\bin\jem.exp"
	if exist "$(CONFIG)\bin\libejs.db.sqlite.lib" del /Q "$(CONFIG)\bin\libejs.db.sqlite.lib"
	if exist "$(CONFIG)\bin\libejs.web.lib" del /Q "$(CONFIG)\bin\libejs.web.lib"
	if exist "$(CONFIG)\bin\libejs.zlib.lib" del /Q "$(CONFIG)\bin\libejs.zlib.lib"
	if exist "$(CONFIG)\bin\utest.exe" del /Q "$(CONFIG)\bin\utest.exe"
	if exist "$(CONFIG)\bin\utest.lib" del /Q "$(CONFIG)\bin\utest.lib"
	if exist "$(CONFIG)\bin\utest.pdb" del /Q "$(CONFIG)\bin\utest.pdb"
	if exist "$(CONFIG)\bin\utest.exp" del /Q "$(CONFIG)\bin\utest.exp"
	if exist "$(CONFIG)\obj\removeFiles.obj" del /Q "$(CONFIG)\obj\removeFiles.obj"
	if exist "$(CONFIG)\obj\mprLib.obj" del /Q "$(CONFIG)\obj\mprLib.obj"
	if exist "$(CONFIG)\obj\mprSsl.obj" del /Q "$(CONFIG)\obj\mprSsl.obj"
	if exist "$(CONFIG)\obj\manager.obj" del /Q "$(CONFIG)\obj\manager.obj"
	if exist "$(CONFIG)\obj\makerom.obj" del /Q "$(CONFIG)\obj\makerom.obj"
	if exist "$(CONFIG)\obj\estLib.obj" del /Q "$(CONFIG)\obj\estLib.obj"
	if exist "$(CONFIG)\obj\pcre.obj" del /Q "$(CONFIG)\obj\pcre.obj"
	if exist "$(CONFIG)\obj\httpLib.obj" del /Q "$(CONFIG)\obj\httpLib.obj"
	if exist "$(CONFIG)\obj\http.obj" del /Q "$(CONFIG)\obj\http.obj"
	if exist "$(CONFIG)\obj\sqlite3.obj" del /Q "$(CONFIG)\obj\sqlite3.obj"
	if exist "$(CONFIG)\obj\sqlite.obj" del /Q "$(CONFIG)\obj\sqlite.obj"
	if exist "$(CONFIG)\obj\zlib.obj" del /Q "$(CONFIG)\obj\zlib.obj"
	if exist "$(CONFIG)\obj\ecAst.obj" del /Q "$(CONFIG)\obj\ecAst.obj"
	if exist "$(CONFIG)\obj\ecCodeGen.obj" del /Q "$(CONFIG)\obj\ecCodeGen.obj"
	if exist "$(CONFIG)\obj\ecCompiler.obj" del /Q "$(CONFIG)\obj\ecCompiler.obj"
	if exist "$(CONFIG)\obj\ecLex.obj" del /Q "$(CONFIG)\obj\ecLex.obj"
	if exist "$(CONFIG)\obj\ecModuleWrite.obj" del /Q "$(CONFIG)\obj\ecModuleWrite.obj"
	if exist "$(CONFIG)\obj\ecParser.obj" del /Q "$(CONFIG)\obj\ecParser.obj"
	if exist "$(CONFIG)\obj\ecState.obj" del /Q "$(CONFIG)\obj\ecState.obj"
	if exist "$(CONFIG)\obj\dtoa.obj" del /Q "$(CONFIG)\obj\dtoa.obj"
	if exist "$(CONFIG)\obj\ejsApp.obj" del /Q "$(CONFIG)\obj\ejsApp.obj"
	if exist "$(CONFIG)\obj\ejsArray.obj" del /Q "$(CONFIG)\obj\ejsArray.obj"
	if exist "$(CONFIG)\obj\ejsBlock.obj" del /Q "$(CONFIG)\obj\ejsBlock.obj"
	if exist "$(CONFIG)\obj\ejsBoolean.obj" del /Q "$(CONFIG)\obj\ejsBoolean.obj"
	if exist "$(CONFIG)\obj\ejsByteArray.obj" del /Q "$(CONFIG)\obj\ejsByteArray.obj"
	if exist "$(CONFIG)\obj\ejsCache.obj" del /Q "$(CONFIG)\obj\ejsCache.obj"
	if exist "$(CONFIG)\obj\ejsCmd.obj" del /Q "$(CONFIG)\obj\ejsCmd.obj"
	if exist "$(CONFIG)\obj\ejsConfig.obj" del /Q "$(CONFIG)\obj\ejsConfig.obj"
	if exist "$(CONFIG)\obj\ejsDate.obj" del /Q "$(CONFIG)\obj\ejsDate.obj"
	if exist "$(CONFIG)\obj\ejsDebug.obj" del /Q "$(CONFIG)\obj\ejsDebug.obj"
	if exist "$(CONFIG)\obj\ejsError.obj" del /Q "$(CONFIG)\obj\ejsError.obj"
	if exist "$(CONFIG)\obj\ejsFile.obj" del /Q "$(CONFIG)\obj\ejsFile.obj"
	if exist "$(CONFIG)\obj\ejsFileSystem.obj" del /Q "$(CONFIG)\obj\ejsFileSystem.obj"
	if exist "$(CONFIG)\obj\ejsFrame.obj" del /Q "$(CONFIG)\obj\ejsFrame.obj"
	if exist "$(CONFIG)\obj\ejsFunction.obj" del /Q "$(CONFIG)\obj\ejsFunction.obj"
	if exist "$(CONFIG)\obj\ejsGC.obj" del /Q "$(CONFIG)\obj\ejsGC.obj"
	if exist "$(CONFIG)\obj\ejsGlobal.obj" del /Q "$(CONFIG)\obj\ejsGlobal.obj"
	if exist "$(CONFIG)\obj\ejsHttp.obj" del /Q "$(CONFIG)\obj\ejsHttp.obj"
	if exist "$(CONFIG)\obj\ejsIterator.obj" del /Q "$(CONFIG)\obj\ejsIterator.obj"
	if exist "$(CONFIG)\obj\ejsJSON.obj" del /Q "$(CONFIG)\obj\ejsJSON.obj"
	if exist "$(CONFIG)\obj\ejsLocalCache.obj" del /Q "$(CONFIG)\obj\ejsLocalCache.obj"
	if exist "$(CONFIG)\obj\ejsMath.obj" del /Q "$(CONFIG)\obj\ejsMath.obj"
	if exist "$(CONFIG)\obj\ejsMemory.obj" del /Q "$(CONFIG)\obj\ejsMemory.obj"
	if exist "$(CONFIG)\obj\ejsMprLog.obj" del /Q "$(CONFIG)\obj\ejsMprLog.obj"
	if exist "$(CONFIG)\obj\ejsNamespace.obj" del /Q "$(CONFIG)\obj\ejsNamespace.obj"
	if exist "$(CONFIG)\obj\ejsNull.obj" del /Q "$(CONFIG)\obj\ejsNull.obj"
	if exist "$(CONFIG)\obj\ejsNumber.obj" del /Q "$(CONFIG)\obj\ejsNumber.obj"
	if exist "$(CONFIG)\obj\ejsObject.obj" del /Q "$(CONFIG)\obj\ejsObject.obj"
	if exist "$(CONFIG)\obj\ejsPath.obj" del /Q "$(CONFIG)\obj\ejsPath.obj"
	if exist "$(CONFIG)\obj\ejsPot.obj" del /Q "$(CONFIG)\obj\ejsPot.obj"
	if exist "$(CONFIG)\obj\ejsRegExp.obj" del /Q "$(CONFIG)\obj\ejsRegExp.obj"
	if exist "$(CONFIG)\obj\ejsSocket.obj" del /Q "$(CONFIG)\obj\ejsSocket.obj"
	if exist "$(CONFIG)\obj\ejsString.obj" del /Q "$(CONFIG)\obj\ejsString.obj"
	if exist "$(CONFIG)\obj\ejsSystem.obj" del /Q "$(CONFIG)\obj\ejsSystem.obj"
	if exist "$(CONFIG)\obj\ejsTimer.obj" del /Q "$(CONFIG)\obj\ejsTimer.obj"
	if exist "$(CONFIG)\obj\ejsType.obj" del /Q "$(CONFIG)\obj\ejsType.obj"
	if exist "$(CONFIG)\obj\ejsUri.obj" del /Q "$(CONFIG)\obj\ejsUri.obj"
	if exist "$(CONFIG)\obj\ejsVoid.obj" del /Q "$(CONFIG)\obj\ejsVoid.obj"
	if exist "$(CONFIG)\obj\ejsWebSocket.obj" del /Q "$(CONFIG)\obj\ejsWebSocket.obj"
	if exist "$(CONFIG)\obj\ejsWorker.obj" del /Q "$(CONFIG)\obj\ejsWorker.obj"
	if exist "$(CONFIG)\obj\ejsXML.obj" del /Q "$(CONFIG)\obj\ejsXML.obj"
	if exist "$(CONFIG)\obj\ejsXMLList.obj" del /Q "$(CONFIG)\obj\ejsXMLList.obj"
	if exist "$(CONFIG)\obj\ejsXMLLoader.obj" del /Q "$(CONFIG)\obj\ejsXMLLoader.obj"
	if exist "$(CONFIG)\obj\ejsByteCode.obj" del /Q "$(CONFIG)\obj\ejsByteCode.obj"
	if exist "$(CONFIG)\obj\ejsException.obj" del /Q "$(CONFIG)\obj\ejsException.obj"
	if exist "$(CONFIG)\obj\ejsHelper.obj" del /Q "$(CONFIG)\obj\ejsHelper.obj"
	if exist "$(CONFIG)\obj\ejsInterp.obj" del /Q "$(CONFIG)\obj\ejsInterp.obj"
	if exist "$(CONFIG)\obj\ejsLoader.obj" del /Q "$(CONFIG)\obj\ejsLoader.obj"
	if exist "$(CONFIG)\obj\ejsModule.obj" del /Q "$(CONFIG)\obj\ejsModule.obj"
	if exist "$(CONFIG)\obj\ejsScope.obj" del /Q "$(CONFIG)\obj\ejsScope.obj"
	if exist "$(CONFIG)\obj\ejsService.obj" del /Q "$(CONFIG)\obj\ejsService.obj"
	if exist "$(CONFIG)\obj\ejs.obj" del /Q "$(CONFIG)\obj\ejs.obj"
	if exist "$(CONFIG)\obj\ejsc.obj" del /Q "$(CONFIG)\obj\ejsc.obj"
	if exist "$(CONFIG)\obj\ejsmod.obj" del /Q "$(CONFIG)\obj\ejsmod.obj"
	if exist "$(CONFIG)\obj\doc.obj" del /Q "$(CONFIG)\obj\doc.obj"
	if exist "$(CONFIG)\obj\docFiles.obj" del /Q "$(CONFIG)\obj\docFiles.obj"
	if exist "$(CONFIG)\obj\listing.obj" del /Q "$(CONFIG)\obj\listing.obj"
	if exist "$(CONFIG)\obj\slotGen.obj" del /Q "$(CONFIG)\obj\slotGen.obj"
	if exist "$(CONFIG)\obj\ejsrun.obj" del /Q "$(CONFIG)\obj\ejsrun.obj"
	if exist "$(CONFIG)\obj\ejsSqlite.obj" del /Q "$(CONFIG)\obj\ejsSqlite.obj"
	if exist "$(CONFIG)\obj\ejsHttpServer.obj" del /Q "$(CONFIG)\obj\ejsHttpServer.obj"
	if exist "$(CONFIG)\obj\ejsRequest.obj" del /Q "$(CONFIG)\obj\ejsRequest.obj"
	if exist "$(CONFIG)\obj\ejsSession.obj" del /Q "$(CONFIG)\obj\ejsSession.obj"
	if exist "$(CONFIG)\obj\ejsWeb.obj" del /Q "$(CONFIG)\obj\ejsWeb.obj"
	if exist "$(CONFIG)\obj\ejsZlib.obj" del /Q "$(CONFIG)\obj\ejsZlib.obj"



#
#   version
#
version: $(DEPS_1)
	@echo 2.3.2-0

#
#   bit.h
#
$(CONFIG)\inc\bit.h: $(DEPS_2)
	@echo '      [Copy] $(CONFIG)/inc/bit.h'

#
#   removeFiles.obj
#
DEPS_3 = $(DEPS_3) $(CONFIG)\inc\bit.h

$(CONFIG)\obj\removeFiles.obj: \
    package\windows\removeFiles.c $(DEPS_3)
	@echo '   [Compile] $(CONFIG)/obj/removeFiles.obj'
	"$(CC)" -c -Fo$(CONFIG)\obj\removeFiles.obj -Fd$(CONFIG)\obj\removeFiles.pdb $(CFLAGS) $(DFLAGS) "$(IFLAGS)" package\windows\removeFiles.c

#
#   removeFiles
#
DEPS_4 = $(DEPS_4) $(CONFIG)\inc\bit.h
DEPS_4 = $(DEPS_4) $(CONFIG)\obj\removeFiles.obj

$(CONFIG)\bin\removeFiles.exe: $(DEPS_4)
	@echo '      [Link] $(CONFIG)/bin/removeFiles.exe'
	"$(LD)" -out:$(CONFIG)\bin\removeFiles.exe -entry:WinMainCRTStartup -subsystem:windows $(LDFLAGS) $(LIBPATHS) "$(CONFIG)\obj\removeFiles.obj" $(LIBS) 

#
#   mpr.h
#
$(CONFIG)\inc\mpr.h: $(DEPS_5)
	@echo '      [Copy] $(CONFIG)/inc/mpr.h'
	if not exist "$(CONFIG)\inc" md "$(CONFIG)\inc"
	copy /Y src\deps\mpr\mpr.h $(CONFIG)\inc\mpr.h

#
#   bitos.h
#
$(CONFIG)\inc\bitos.h: $(DEPS_6)
	@echo '      [Copy] $(CONFIG)/inc/bitos.h'
	if not exist "$(CONFIG)\inc" md "$(CONFIG)\inc"
	copy /Y src\bitos.h $(CONFIG)\inc\bitos.h

#
#   mprLib.obj
#
DEPS_7 = $(DEPS_7) $(CONFIG)\inc\bit.h
DEPS_7 = $(DEPS_7) $(CONFIG)\inc\mpr.h
DEPS_7 = $(DEPS_7) $(CONFIG)\inc\bitos.h

$(CONFIG)\obj\mprLib.obj: \
    src\deps\mpr\mprLib.c $(DEPS_7)
	@echo '   [Compile] $(CONFIG)/obj/mprLib.obj'
	"$(CC)" -c -Fo$(CONFIG)\obj\mprLib.obj -Fd$(CONFIG)\obj\mprLib.pdb $(CFLAGS) $(DFLAGS) "$(IFLAGS)" src\deps\mpr\mprLib.c

#
#   libmpr
#
DEPS_8 = $(DEPS_8) $(CONFIG)\inc\mpr.h
DEPS_8 = $(DEPS_8) $(CONFIG)\inc\bit.h
DEPS_8 = $(DEPS_8) $(CONFIG)\inc\bitos.h
DEPS_8 = $(DEPS_8) $(CONFIG)\obj\mprLib.obj

$(CONFIG)\bin\libmpr.lib: $(DEPS_8)
	@echo '      [Link] $(CONFIG)/bin/libmpr.lib'
	"lib.exe" -nologo -out:$(CONFIG)\bin\libmpr.lib "$(CONFIG)\obj\mprLib.obj"

#
#   est.h
#
$(CONFIG)\inc\est.h: $(DEPS_9)
	@echo '      [Copy] $(CONFIG)/inc/est.h'
	if not exist "$(CONFIG)\inc" md "$(CONFIG)\inc"
	copy /Y src\deps\est\est.h $(CONFIG)\inc\est.h

#
#   estLib.obj
#
DEPS_10 = $(DEPS_10) $(CONFIG)\inc\bit.h
DEPS_10 = $(DEPS_10) $(CONFIG)\inc\est.h
DEPS_10 = $(DEPS_10) $(CONFIG)\inc\bitos.h

$(CONFIG)\obj\estLib.obj: \
    src\deps\est\estLib.c $(DEPS_10)
	@echo '   [Compile] $(CONFIG)/obj/estLib.obj'
	"$(CC)" -c -Fo$(CONFIG)\obj\estLib.obj -Fd$(CONFIG)\obj\estLib.pdb $(CFLAGS) $(DFLAGS) "$(IFLAGS)" src\deps\est\estLib.c

!IF "$(BIT_PACK_EST)" == "1"
#
#   libest
#
DEPS_11 = $(DEPS_11) $(CONFIG)\inc\est.h
DEPS_11 = $(DEPS_11) $(CONFIG)\inc\bit.h
DEPS_11 = $(DEPS_11) $(CONFIG)\inc\bitos.h
DEPS_11 = $(DEPS_11) $(CONFIG)\obj\estLib.obj

$(CONFIG)\bin\libest.lib: $(DEPS_11)
	@echo '      [Link] $(CONFIG)/bin/libest.lib'
	"lib.exe" -nologo -out:$(CONFIG)\bin\libest.lib "$(CONFIG)\obj\estLib.obj"
!ENDIF

#
#   mprSsl.obj
#
DEPS_12 = $(DEPS_12) $(CONFIG)\inc\bit.h
DEPS_12 = $(DEPS_12) $(CONFIG)\inc\mpr.h
DEPS_12 = $(DEPS_12) $(CONFIG)\inc\est.h

$(CONFIG)\obj\mprSsl.obj: \
    src\deps\mpr\mprSsl.c $(DEPS_12)
	@echo '   [Compile] $(CONFIG)/obj/mprSsl.obj'
	"$(CC)" -c -Fo$(CONFIG)\obj\mprSsl.obj -Fd$(CONFIG)\obj\mprSsl.pdb $(CFLAGS) $(DFLAGS) "$(IFLAGS)" "-I$(BIT_PACK_MATRIXSSL_PATH)" "-I$(BIT_PACK_MATRIXSSL_PATH)\matrixssl" "-I$(BIT_PACK_NANOSSL_PATH)\src" "-I$(BIT_PACK_OPENSSL_PATH)\include" src\deps\mpr\mprSsl.c

#
#   libmprssl
#
DEPS_13 = $(DEPS_13) $(CONFIG)\inc\mpr.h
DEPS_13 = $(DEPS_13) $(CONFIG)\inc\bit.h
DEPS_13 = $(DEPS_13) $(CONFIG)\inc\bitos.h
DEPS_13 = $(DEPS_13) $(CONFIG)\obj\mprLib.obj
DEPS_13 = $(DEPS_13) $(CONFIG)\bin\libmpr.lib
DEPS_13 = $(DEPS_13) $(CONFIG)\inc\est.h
DEPS_13 = $(DEPS_13) $(CONFIG)\obj\estLib.obj
!IF "$(BIT_PACK_EST)" == "1"
DEPS_13 = $(DEPS_13) $(CONFIG)\bin\libest.lib
!ENDIF
DEPS_13 = $(DEPS_13) $(CONFIG)\obj\mprSsl.obj

$(CONFIG)\bin\libmprssl.lib: $(DEPS_13)
	@echo '      [Link] $(CONFIG)/bin/libmprssl.lib'
	"lib.exe" -nologo -out:$(CONFIG)\bin\libmprssl.lib "$(CONFIG)\obj\mprSsl.obj"

#
#   manager.obj
#
DEPS_14 = $(DEPS_14) $(CONFIG)\inc\bit.h
DEPS_14 = $(DEPS_14) $(CONFIG)\inc\mpr.h

$(CONFIG)\obj\manager.obj: \
    src\deps\mpr\manager.c $(DEPS_14)
	@echo '   [Compile] $(CONFIG)/obj/manager.obj'
	"$(CC)" -c -Fo$(CONFIG)\obj\manager.obj -Fd$(CONFIG)\obj\manager.pdb $(CFLAGS) $(DFLAGS) "$(IFLAGS)" src\deps\mpr\manager.c

#
#   manager
#
DEPS_15 = $(DEPS_15) $(CONFIG)\inc\mpr.h
DEPS_15 = $(DEPS_15) $(CONFIG)\inc\bit.h
DEPS_15 = $(DEPS_15) $(CONFIG)\inc\bitos.h
DEPS_15 = $(DEPS_15) $(CONFIG)\obj\mprLib.obj
DEPS_15 = $(DEPS_15) $(CONFIG)\bin\libmpr.lib
DEPS_15 = $(DEPS_15) $(CONFIG)\obj\manager.obj

LIBS_15 = $(LIBS_15) libmpr.lib

$(CONFIG)\bin\ejsman.exe: $(DEPS_15)
	@echo '      [Link] $(CONFIG)/bin/ejsman.exe'
	"$(LD)" -out:$(CONFIG)\bin\ejsman.exe -entry:WinMainCRTStartup -subsystem:windows $(LDFLAGS) $(LIBPATHS) "$(CONFIG)\obj\manager.obj" $(LIBPATHS_15) $(LIBS_15) $(LIBS_15) $(LIBS) 

#
#   makerom.obj
#
DEPS_16 = $(DEPS_16) $(CONFIG)\inc\bit.h
DEPS_16 = $(DEPS_16) $(CONFIG)\inc\mpr.h

$(CONFIG)\obj\makerom.obj: \
    src\deps\mpr\makerom.c $(DEPS_16)
	@echo '   [Compile] $(CONFIG)/obj/makerom.obj'
	"$(CC)" -c -Fo$(CONFIG)\obj\makerom.obj -Fd$(CONFIG)\obj\makerom.pdb $(CFLAGS) $(DFLAGS) "$(IFLAGS)" src\deps\mpr\makerom.c

#
#   makerom
#
DEPS_17 = $(DEPS_17) $(CONFIG)\inc\mpr.h
DEPS_17 = $(DEPS_17) $(CONFIG)\inc\bit.h
DEPS_17 = $(DEPS_17) $(CONFIG)\inc\bitos.h
DEPS_17 = $(DEPS_17) $(CONFIG)\obj\mprLib.obj
DEPS_17 = $(DEPS_17) $(CONFIG)\bin\libmpr.lib
DEPS_17 = $(DEPS_17) $(CONFIG)\obj\makerom.obj

LIBS_17 = $(LIBS_17) libmpr.lib

$(CONFIG)\bin\makerom.exe: $(DEPS_17)
	@echo '      [Link] $(CONFIG)/bin/makerom.exe'
	"$(LD)" -out:$(CONFIG)\bin\makerom.exe -entry:mainCRTStartup -subsystem:console $(LDFLAGS) $(LIBPATHS) "$(CONFIG)\obj\makerom.obj" $(LIBPATHS_17) $(LIBS_17) $(LIBS_17) $(LIBS) 

#
#   ca-crt
#
DEPS_18 = $(DEPS_18) src\deps\est\ca.crt

$(CONFIG)\bin\ca.crt: $(DEPS_18)
	@echo '      [Copy] $(CONFIG)/bin/ca.crt'
	if not exist "$(CONFIG)\bin" md "$(CONFIG)\bin"
	copy /Y src\deps\est\ca.crt $(CONFIG)\bin\ca.crt

#
#   pcre.h
#
$(CONFIG)\inc\pcre.h: $(DEPS_19)
	@echo '      [Copy] $(CONFIG)/inc/pcre.h'
	if not exist "$(CONFIG)\inc" md "$(CONFIG)\inc"
	copy /Y src\deps\pcre\pcre.h $(CONFIG)\inc\pcre.h

#
#   pcre.obj
#
DEPS_20 = $(DEPS_20) $(CONFIG)\inc\bit.h
DEPS_20 = $(DEPS_20) $(CONFIG)\inc\pcre.h

$(CONFIG)\obj\pcre.obj: \
    src\deps\pcre\pcre.c $(DEPS_20)
	@echo '   [Compile] $(CONFIG)/obj/pcre.obj'
	"$(CC)" -c -Fo$(CONFIG)\obj\pcre.obj -Fd$(CONFIG)\obj\pcre.pdb $(CFLAGS) $(DFLAGS) "$(IFLAGS)" src\deps\pcre\pcre.c

!IF "$(BIT_PACK_PCRE)" == "1"
#
#   libpcre
#
DEPS_21 = $(DEPS_21) $(CONFIG)\inc\pcre.h
DEPS_21 = $(DEPS_21) $(CONFIG)\inc\bit.h
DEPS_21 = $(DEPS_21) $(CONFIG)\obj\pcre.obj

$(CONFIG)\bin\libpcre.lib: $(DEPS_21)
	@echo '      [Link] $(CONFIG)/bin/libpcre.lib'
	"lib.exe" -nologo -out:$(CONFIG)\bin\libpcre.lib "$(CONFIG)\obj\pcre.obj"
!ENDIF

#
#   http.h
#
$(CONFIG)\inc\http.h: $(DEPS_22)
	@echo '      [Copy] $(CONFIG)/inc/http.h'
	if not exist "$(CONFIG)\inc" md "$(CONFIG)\inc"
	copy /Y src\deps\http\http.h $(CONFIG)\inc\http.h

#
#   httpLib.obj
#
DEPS_23 = $(DEPS_23) $(CONFIG)\inc\bit.h
DEPS_23 = $(DEPS_23) $(CONFIG)\inc\http.h
DEPS_23 = $(DEPS_23) $(CONFIG)\inc\mpr.h

$(CONFIG)\obj\httpLib.obj: \
    src\deps\http\httpLib.c $(DEPS_23)
	@echo '   [Compile] $(CONFIG)/obj/httpLib.obj'
	"$(CC)" -c -Fo$(CONFIG)\obj\httpLib.obj -Fd$(CONFIG)\obj\httpLib.pdb $(CFLAGS) $(DFLAGS) "$(IFLAGS)" src\deps\http\httpLib.c

#
#   libhttp
#
DEPS_24 = $(DEPS_24) $(CONFIG)\inc\mpr.h
DEPS_24 = $(DEPS_24) $(CONFIG)\inc\bit.h
DEPS_24 = $(DEPS_24) $(CONFIG)\inc\bitos.h
DEPS_24 = $(DEPS_24) $(CONFIG)\obj\mprLib.obj
DEPS_24 = $(DEPS_24) $(CONFIG)\bin\libmpr.lib
DEPS_24 = $(DEPS_24) $(CONFIG)\inc\pcre.h
DEPS_24 = $(DEPS_24) $(CONFIG)\obj\pcre.obj
!IF "$(BIT_PACK_PCRE)" == "1"
DEPS_24 = $(DEPS_24) $(CONFIG)\bin\libpcre.lib
!ENDIF
DEPS_24 = $(DEPS_24) $(CONFIG)\inc\http.h
DEPS_24 = $(DEPS_24) $(CONFIG)\obj\httpLib.obj

$(CONFIG)\bin\libhttp.lib: $(DEPS_24)
	@echo '      [Link] $(CONFIG)/bin/libhttp.lib'
	"lib.exe" -nologo -out:$(CONFIG)\bin\libhttp.lib "$(CONFIG)\obj\httpLib.obj"

#
#   http.obj
#
DEPS_25 = $(DEPS_25) $(CONFIG)\inc\bit.h
DEPS_25 = $(DEPS_25) $(CONFIG)\inc\http.h

$(CONFIG)\obj\http.obj: \
    src\deps\http\http.c $(DEPS_25)
	@echo '   [Compile] $(CONFIG)/obj/http.obj'
	"$(CC)" -c -Fo$(CONFIG)\obj\http.obj -Fd$(CONFIG)\obj\http.pdb $(CFLAGS) $(DFLAGS) "$(IFLAGS)" src\deps\http\http.c

#
#   http
#
DEPS_26 = $(DEPS_26) $(CONFIG)\inc\mpr.h
DEPS_26 = $(DEPS_26) $(CONFIG)\inc\bit.h
DEPS_26 = $(DEPS_26) $(CONFIG)\inc\bitos.h
DEPS_26 = $(DEPS_26) $(CONFIG)\obj\mprLib.obj
DEPS_26 = $(DEPS_26) $(CONFIG)\bin\libmpr.lib
DEPS_26 = $(DEPS_26) $(CONFIG)\inc\pcre.h
DEPS_26 = $(DEPS_26) $(CONFIG)\obj\pcre.obj
!IF "$(BIT_PACK_PCRE)" == "1"
DEPS_26 = $(DEPS_26) $(CONFIG)\bin\libpcre.lib
!ENDIF
DEPS_26 = $(DEPS_26) $(CONFIG)\inc\http.h
DEPS_26 = $(DEPS_26) $(CONFIG)\obj\httpLib.obj
DEPS_26 = $(DEPS_26) $(CONFIG)\bin\libhttp.lib
DEPS_26 = $(DEPS_26) $(CONFIG)\obj\http.obj

LIBS_26 = $(LIBS_26) libhttp.lib
LIBS_26 = $(LIBS_26) libmpr.lib
!IF "$(BIT_PACK_PCRE)" == "1"
LIBS_26 = $(LIBS_26) libpcre.lib
!ENDIF

$(CONFIG)\bin\http.exe: $(DEPS_26)
	@echo '      [Link] $(CONFIG)/bin/http.exe'
	"$(LD)" -out:$(CONFIG)\bin\http.exe -entry:mainCRTStartup -subsystem:console $(LDFLAGS) $(LIBPATHS) "$(CONFIG)\obj\http.obj" $(LIBPATHS_26) $(LIBS_26) $(LIBS_26) $(LIBS) 

#
#   sqlite3.h
#
$(CONFIG)\inc\sqlite3.h: $(DEPS_27)
	@echo '      [Copy] $(CONFIG)/inc/sqlite3.h'
	if not exist "$(CONFIG)\inc" md "$(CONFIG)\inc"
	copy /Y src\deps\sqlite\sqlite3.h $(CONFIG)\inc\sqlite3.h

#
#   sqlite3.obj
#
DEPS_28 = $(DEPS_28) $(CONFIG)\inc\bit.h
DEPS_28 = $(DEPS_28) $(CONFIG)\inc\sqlite3.h

$(CONFIG)\obj\sqlite3.obj: \
    src\deps\sqlite\sqlite3.c $(DEPS_28)
	@echo '   [Compile] $(CONFIG)/obj/sqlite3.obj'
	"$(CC)" -c -Fo$(CONFIG)\obj\sqlite3.obj -Fd$(CONFIG)\obj\sqlite3.pdb $(CFLAGS) $(DFLAGS) "$(IFLAGS)" src\deps\sqlite\sqlite3.c

!IF "$(BIT_PACK_SQLITE)" == "1"
#
#   libsqlite3
#
DEPS_29 = $(DEPS_29) $(CONFIG)\inc\sqlite3.h
DEPS_29 = $(DEPS_29) $(CONFIG)\inc\bit.h
DEPS_29 = $(DEPS_29) $(CONFIG)\obj\sqlite3.obj

$(CONFIG)\bin\libsqlite3.lib: $(DEPS_29)
	@echo '      [Link] $(CONFIG)/bin/libsqlite3.lib'
	"lib.exe" -nologo -out:$(CONFIG)\bin\libsqlite3.lib "$(CONFIG)\obj\sqlite3.obj"
!ENDIF

#
#   sqlite.obj
#
DEPS_30 = $(DEPS_30) $(CONFIG)\inc\bit.h
DEPS_30 = $(DEPS_30) $(CONFIG)\inc\sqlite3.h

$(CONFIG)\obj\sqlite.obj: \
    src\deps\sqlite\sqlite.c $(DEPS_30)
	@echo '   [Compile] $(CONFIG)/obj/sqlite.obj'
	"$(CC)" -c -Fo$(CONFIG)\obj\sqlite.obj -Fd$(CONFIG)\obj\sqlite.pdb $(CFLAGS) $(DFLAGS) "$(IFLAGS)" src\deps\sqlite\sqlite.c

!IF "$(BIT_PACK_SQLITE)" == "1"
#
#   sqliteshell
#
DEPS_31 = $(DEPS_31) $(CONFIG)\inc\sqlite3.h
DEPS_31 = $(DEPS_31) $(CONFIG)\inc\bit.h
DEPS_31 = $(DEPS_31) $(CONFIG)\obj\sqlite3.obj
DEPS_31 = $(DEPS_31) $(CONFIG)\bin\libsqlite3.lib
DEPS_31 = $(DEPS_31) $(CONFIG)\obj\sqlite.obj

LIBS_31 = $(LIBS_31) libsqlite3.lib

$(CONFIG)\bin\sqlite.exe: $(DEPS_31)
	@echo '      [Link] $(CONFIG)/bin/sqlite.exe'
	"$(LD)" -out:$(CONFIG)\bin\sqlite.exe -entry:mainCRTStartup -subsystem:console $(LDFLAGS) $(LIBPATHS) "$(CONFIG)\obj\sqlite.obj" $(LIBPATHS_31) $(LIBS_31) $(LIBS_31) $(LIBS) 
!ENDIF

#
#   zlib.h
#
$(CONFIG)\inc\zlib.h: $(DEPS_32)
	@echo '      [Copy] $(CONFIG)/inc/zlib.h'
	if not exist "$(CONFIG)\inc" md "$(CONFIG)\inc"
	copy /Y src\deps\zlib\zlib.h $(CONFIG)\inc\zlib.h

#
#   zlib.obj
#
DEPS_33 = $(DEPS_33) $(CONFIG)\inc\bit.h
DEPS_33 = $(DEPS_33) $(CONFIG)\inc\zlib.h

$(CONFIG)\obj\zlib.obj: \
    src\deps\zlib\zlib.c $(DEPS_33)
	@echo '   [Compile] $(CONFIG)/obj/zlib.obj'
	"$(CC)" -c -Fo$(CONFIG)\obj\zlib.obj -Fd$(CONFIG)\obj\zlib.pdb $(CFLAGS) $(DFLAGS) "$(IFLAGS)" src\deps\zlib\zlib.c

!IF "$(BIT_PACK_ZLIB)" == "1"
#
#   libzlib
#
DEPS_34 = $(DEPS_34) $(CONFIG)\inc\zlib.h
DEPS_34 = $(DEPS_34) $(CONFIG)\inc\bit.h
DEPS_34 = $(DEPS_34) $(CONFIG)\obj\zlib.obj

$(CONFIG)\bin\libzlib.lib: $(DEPS_34)
	@echo '      [Link] $(CONFIG)/bin/libzlib.lib'
	"lib.exe" -nologo -out:$(CONFIG)\bin\libzlib.lib "$(CONFIG)\obj\zlib.obj"
!ENDIF

#
#   ejs.cache.local.slots.h
#
$(CONFIG)\inc\ejs.cache.local.slots.h: $(DEPS_35)
	@echo '      [Copy] $(CONFIG)/inc/ejs.cache.local.slots.h'
	if not exist "$(CONFIG)\inc" md "$(CONFIG)\inc"
	copy /Y src\slots\ejs.cache.local.slots.h $(CONFIG)\inc\ejs.cache.local.slots.h

#
#   ejs.db.sqlite.slots.h
#
$(CONFIG)\inc\ejs.db.sqlite.slots.h: $(DEPS_36)
	@echo '      [Copy] $(CONFIG)/inc/ejs.db.sqlite.slots.h'
	if not exist "$(CONFIG)\inc" md "$(CONFIG)\inc"
	copy /Y src\slots\ejs.db.sqlite.slots.h $(CONFIG)\inc\ejs.db.sqlite.slots.h

#
#   ejs.slots.h
#
$(CONFIG)\inc\ejs.slots.h: $(DEPS_37)
	@echo '      [Copy] $(CONFIG)/inc/ejs.slots.h'
	if not exist "$(CONFIG)\inc" md "$(CONFIG)\inc"
	copy /Y src\slots\ejs.slots.h $(CONFIG)\inc\ejs.slots.h

#
#   ejs.web.slots.h
#
$(CONFIG)\inc\ejs.web.slots.h: $(DEPS_38)
	@echo '      [Copy] $(CONFIG)/inc/ejs.web.slots.h'
	if not exist "$(CONFIG)\inc" md "$(CONFIG)\inc"
	copy /Y src\slots\ejs.web.slots.h $(CONFIG)\inc\ejs.web.slots.h

#
#   ejs.zlib.slots.h
#
$(CONFIG)\inc\ejs.zlib.slots.h: $(DEPS_39)
	@echo '      [Copy] $(CONFIG)/inc/ejs.zlib.slots.h'
	if not exist "$(CONFIG)\inc" md "$(CONFIG)\inc"
	copy /Y src\slots\ejs.zlib.slots.h $(CONFIG)\inc\ejs.zlib.slots.h

#
#   ejsByteCode.h
#
$(CONFIG)\inc\ejsByteCode.h: $(DEPS_40)
	@echo '      [Copy] $(CONFIG)/inc/ejsByteCode.h'
	if not exist "$(CONFIG)\inc" md "$(CONFIG)\inc"
	copy /Y src\ejsByteCode.h $(CONFIG)\inc\ejsByteCode.h

#
#   ejsByteCodeTable.h
#
$(CONFIG)\inc\ejsByteCodeTable.h: $(DEPS_41)
	@echo '      [Copy] $(CONFIG)/inc/ejsByteCodeTable.h'
	if not exist "$(CONFIG)\inc" md "$(CONFIG)\inc"
	copy /Y src\ejsByteCodeTable.h $(CONFIG)\inc\ejsByteCodeTable.h

#
#   ejsCustomize.h
#
$(CONFIG)\inc\ejsCustomize.h: $(DEPS_42)
	@echo '      [Copy] $(CONFIG)/inc/ejsCustomize.h'
	if not exist "$(CONFIG)\inc" md "$(CONFIG)\inc"
	copy /Y src\ejsCustomize.h $(CONFIG)\inc\ejsCustomize.h

#
#   ejs.h
#
DEPS_43 = $(DEPS_43) $(CONFIG)\inc\mpr.h
DEPS_43 = $(DEPS_43) $(CONFIG)\inc\http.h
DEPS_43 = $(DEPS_43) $(CONFIG)\inc\ejsByteCode.h
DEPS_43 = $(DEPS_43) $(CONFIG)\inc\ejsByteCodeTable.h
DEPS_43 = $(DEPS_43) $(CONFIG)\inc\ejs.slots.h
DEPS_43 = $(DEPS_43) $(CONFIG)\inc\ejsCustomize.h

$(CONFIG)\inc\ejs.h: $(DEPS_43)
	@echo '      [Copy] $(CONFIG)/inc/ejs.h'
	if not exist "$(CONFIG)\inc" md "$(CONFIG)\inc"
	copy /Y src\ejs.h $(CONFIG)\inc\ejs.h

#
#   ejsCompiler.h
#
$(CONFIG)\inc\ejsCompiler.h: $(DEPS_44)
	@echo '      [Copy] $(CONFIG)/inc/ejsCompiler.h'
	if not exist "$(CONFIG)\inc" md "$(CONFIG)\inc"
	copy /Y src\ejsCompiler.h $(CONFIG)\inc\ejsCompiler.h

#
#   ecAst.obj
#
DEPS_45 = $(DEPS_45) $(CONFIG)\inc\bit.h
DEPS_45 = $(DEPS_45) $(CONFIG)\inc\ejsCompiler.h
DEPS_45 = $(DEPS_45) $(CONFIG)\inc\mpr.h
DEPS_45 = $(DEPS_45) $(CONFIG)\inc\http.h
DEPS_45 = $(DEPS_45) $(CONFIG)\inc\ejsByteCode.h
DEPS_45 = $(DEPS_45) $(CONFIG)\inc\ejsByteCodeTable.h
DEPS_45 = $(DEPS_45) $(CONFIG)\inc\ejs.slots.h
DEPS_45 = $(DEPS_45) $(CONFIG)\inc\ejsCustomize.h
DEPS_45 = $(DEPS_45) $(CONFIG)\inc\ejs.h

$(CONFIG)\obj\ecAst.obj: \
    src\compiler\ecAst.c $(DEPS_45)
	@echo '   [Compile] $(CONFIG)/obj/ecAst.obj'
	"$(CC)" -c -Fo$(CONFIG)\obj\ecAst.obj -Fd$(CONFIG)\obj\ecAst.pdb $(CFLAGS) $(DFLAGS) "$(IFLAGS)" src\compiler\ecAst.c

#
#   ecCodeGen.obj
#
DEPS_46 = $(DEPS_46) $(CONFIG)\inc\bit.h
DEPS_46 = $(DEPS_46) $(CONFIG)\inc\ejsCompiler.h

$(CONFIG)\obj\ecCodeGen.obj: \
    src\compiler\ecCodeGen.c $(DEPS_46)
	@echo '   [Compile] $(CONFIG)/obj/ecCodeGen.obj'
	"$(CC)" -c -Fo$(CONFIG)\obj\ecCodeGen.obj -Fd$(CONFIG)\obj\ecCodeGen.pdb $(CFLAGS) $(DFLAGS) "$(IFLAGS)" src\compiler\ecCodeGen.c

#
#   ecCompiler.obj
#
DEPS_47 = $(DEPS_47) $(CONFIG)\inc\bit.h
DEPS_47 = $(DEPS_47) $(CONFIG)\inc\ejsCompiler.h

$(CONFIG)\obj\ecCompiler.obj: \
    src\compiler\ecCompiler.c $(DEPS_47)
	@echo '   [Compile] $(CONFIG)/obj/ecCompiler.obj'
	"$(CC)" -c -Fo$(CONFIG)\obj\ecCompiler.obj -Fd$(CONFIG)\obj\ecCompiler.pdb $(CFLAGS) $(DFLAGS) "$(IFLAGS)" src\compiler\ecCompiler.c

#
#   ecLex.obj
#
DEPS_48 = $(DEPS_48) $(CONFIG)\inc\bit.h
DEPS_48 = $(DEPS_48) $(CONFIG)\inc\ejsCompiler.h

$(CONFIG)\obj\ecLex.obj: \
    src\compiler\ecLex.c $(DEPS_48)
	@echo '   [Compile] $(CONFIG)/obj/ecLex.obj'
	"$(CC)" -c -Fo$(CONFIG)\obj\ecLex.obj -Fd$(CONFIG)\obj\ecLex.pdb $(CFLAGS) $(DFLAGS) "$(IFLAGS)" src\compiler\ecLex.c

#
#   ecModuleWrite.obj
#
DEPS_49 = $(DEPS_49) $(CONFIG)\inc\bit.h
DEPS_49 = $(DEPS_49) $(CONFIG)\inc\ejsCompiler.h

$(CONFIG)\obj\ecModuleWrite.obj: \
    src\compiler\ecModuleWrite.c $(DEPS_49)
	@echo '   [Compile] $(CONFIG)/obj/ecModuleWrite.obj'
	"$(CC)" -c -Fo$(CONFIG)\obj\ecModuleWrite.obj -Fd$(CONFIG)\obj\ecModuleWrite.pdb $(CFLAGS) $(DFLAGS) "$(IFLAGS)" src\compiler\ecModuleWrite.c

#
#   ecParser.obj
#
DEPS_50 = $(DEPS_50) $(CONFIG)\inc\bit.h
DEPS_50 = $(DEPS_50) $(CONFIG)\inc\ejsCompiler.h

$(CONFIG)\obj\ecParser.obj: \
    src\compiler\ecParser.c $(DEPS_50)
	@echo '   [Compile] $(CONFIG)/obj/ecParser.obj'
	"$(CC)" -c -Fo$(CONFIG)\obj\ecParser.obj -Fd$(CONFIG)\obj\ecParser.pdb $(CFLAGS) $(DFLAGS) "$(IFLAGS)" src\compiler\ecParser.c

#
#   ecState.obj
#
DEPS_51 = $(DEPS_51) $(CONFIG)\inc\bit.h
DEPS_51 = $(DEPS_51) $(CONFIG)\inc\ejsCompiler.h

$(CONFIG)\obj\ecState.obj: \
    src\compiler\ecState.c $(DEPS_51)
	@echo '   [Compile] $(CONFIG)/obj/ecState.obj'
	"$(CC)" -c -Fo$(CONFIG)\obj\ecState.obj -Fd$(CONFIG)\obj\ecState.pdb $(CFLAGS) $(DFLAGS) "$(IFLAGS)" src\compiler\ecState.c

#
#   dtoa.obj
#
DEPS_52 = $(DEPS_52) $(CONFIG)\inc\bit.h
DEPS_52 = $(DEPS_52) $(CONFIG)\inc\mpr.h

$(CONFIG)\obj\dtoa.obj: \
    src\core\src\dtoa.c $(DEPS_52)
	@echo '   [Compile] $(CONFIG)/obj/dtoa.obj'
	"$(CC)" -c -Fo$(CONFIG)\obj\dtoa.obj -Fd$(CONFIG)\obj\dtoa.pdb $(CFLAGS) $(DFLAGS) "$(IFLAGS)" src\core\src\dtoa.c

#
#   ejsApp.obj
#
DEPS_53 = $(DEPS_53) $(CONFIG)\inc\bit.h
DEPS_53 = $(DEPS_53) $(CONFIG)\inc\mpr.h
DEPS_53 = $(DEPS_53) $(CONFIG)\inc\http.h
DEPS_53 = $(DEPS_53) $(CONFIG)\inc\ejsByteCode.h
DEPS_53 = $(DEPS_53) $(CONFIG)\inc\ejsByteCodeTable.h
DEPS_53 = $(DEPS_53) $(CONFIG)\inc\ejs.slots.h
DEPS_53 = $(DEPS_53) $(CONFIG)\inc\ejsCustomize.h
DEPS_53 = $(DEPS_53) $(CONFIG)\inc\ejs.h

$(CONFIG)\obj\ejsApp.obj: \
    src\core\src\ejsApp.c $(DEPS_53)
	@echo '   [Compile] $(CONFIG)/obj/ejsApp.obj'
	"$(CC)" -c -Fo$(CONFIG)\obj\ejsApp.obj -Fd$(CONFIG)\obj\ejsApp.pdb $(CFLAGS) $(DFLAGS) "$(IFLAGS)" src\core\src\ejsApp.c

#
#   ejsArray.obj
#
DEPS_54 = $(DEPS_54) $(CONFIG)\inc\bit.h
DEPS_54 = $(DEPS_54) $(CONFIG)\inc\mpr.h
DEPS_54 = $(DEPS_54) $(CONFIG)\inc\http.h
DEPS_54 = $(DEPS_54) $(CONFIG)\inc\ejsByteCode.h
DEPS_54 = $(DEPS_54) $(CONFIG)\inc\ejsByteCodeTable.h
DEPS_54 = $(DEPS_54) $(CONFIG)\inc\ejs.slots.h
DEPS_54 = $(DEPS_54) $(CONFIG)\inc\ejsCustomize.h
DEPS_54 = $(DEPS_54) $(CONFIG)\inc\ejs.h

$(CONFIG)\obj\ejsArray.obj: \
    src\core\src\ejsArray.c $(DEPS_54)
	@echo '   [Compile] $(CONFIG)/obj/ejsArray.obj'
	"$(CC)" -c -Fo$(CONFIG)\obj\ejsArray.obj -Fd$(CONFIG)\obj\ejsArray.pdb $(CFLAGS) $(DFLAGS) "$(IFLAGS)" src\core\src\ejsArray.c

#
#   ejsBlock.obj
#
DEPS_55 = $(DEPS_55) $(CONFIG)\inc\bit.h
DEPS_55 = $(DEPS_55) $(CONFIG)\inc\mpr.h
DEPS_55 = $(DEPS_55) $(CONFIG)\inc\http.h
DEPS_55 = $(DEPS_55) $(CONFIG)\inc\ejsByteCode.h
DEPS_55 = $(DEPS_55) $(CONFIG)\inc\ejsByteCodeTable.h
DEPS_55 = $(DEPS_55) $(CONFIG)\inc\ejs.slots.h
DEPS_55 = $(DEPS_55) $(CONFIG)\inc\ejsCustomize.h
DEPS_55 = $(DEPS_55) $(CONFIG)\inc\ejs.h

$(CONFIG)\obj\ejsBlock.obj: \
    src\core\src\ejsBlock.c $(DEPS_55)
	@echo '   [Compile] $(CONFIG)/obj/ejsBlock.obj'
	"$(CC)" -c -Fo$(CONFIG)\obj\ejsBlock.obj -Fd$(CONFIG)\obj\ejsBlock.pdb $(CFLAGS) $(DFLAGS) "$(IFLAGS)" src\core\src\ejsBlock.c

#
#   ejsBoolean.obj
#
DEPS_56 = $(DEPS_56) $(CONFIG)\inc\bit.h
DEPS_56 = $(DEPS_56) $(CONFIG)\inc\mpr.h
DEPS_56 = $(DEPS_56) $(CONFIG)\inc\http.h
DEPS_56 = $(DEPS_56) $(CONFIG)\inc\ejsByteCode.h
DEPS_56 = $(DEPS_56) $(CONFIG)\inc\ejsByteCodeTable.h
DEPS_56 = $(DEPS_56) $(CONFIG)\inc\ejs.slots.h
DEPS_56 = $(DEPS_56) $(CONFIG)\inc\ejsCustomize.h
DEPS_56 = $(DEPS_56) $(CONFIG)\inc\ejs.h

$(CONFIG)\obj\ejsBoolean.obj: \
    src\core\src\ejsBoolean.c $(DEPS_56)
	@echo '   [Compile] $(CONFIG)/obj/ejsBoolean.obj'
	"$(CC)" -c -Fo$(CONFIG)\obj\ejsBoolean.obj -Fd$(CONFIG)\obj\ejsBoolean.pdb $(CFLAGS) $(DFLAGS) "$(IFLAGS)" src\core\src\ejsBoolean.c

#
#   ejsByteArray.obj
#
DEPS_57 = $(DEPS_57) $(CONFIG)\inc\bit.h
DEPS_57 = $(DEPS_57) $(CONFIG)\inc\mpr.h
DEPS_57 = $(DEPS_57) $(CONFIG)\inc\http.h
DEPS_57 = $(DEPS_57) $(CONFIG)\inc\ejsByteCode.h
DEPS_57 = $(DEPS_57) $(CONFIG)\inc\ejsByteCodeTable.h
DEPS_57 = $(DEPS_57) $(CONFIG)\inc\ejs.slots.h
DEPS_57 = $(DEPS_57) $(CONFIG)\inc\ejsCustomize.h
DEPS_57 = $(DEPS_57) $(CONFIG)\inc\ejs.h

$(CONFIG)\obj\ejsByteArray.obj: \
    src\core\src\ejsByteArray.c $(DEPS_57)
	@echo '   [Compile] $(CONFIG)/obj/ejsByteArray.obj'
	"$(CC)" -c -Fo$(CONFIG)\obj\ejsByteArray.obj -Fd$(CONFIG)\obj\ejsByteArray.pdb $(CFLAGS) $(DFLAGS) "$(IFLAGS)" src\core\src\ejsByteArray.c

#
#   ejsCache.obj
#
DEPS_58 = $(DEPS_58) $(CONFIG)\inc\bit.h
DEPS_58 = $(DEPS_58) $(CONFIG)\inc\mpr.h
DEPS_58 = $(DEPS_58) $(CONFIG)\inc\http.h
DEPS_58 = $(DEPS_58) $(CONFIG)\inc\ejsByteCode.h
DEPS_58 = $(DEPS_58) $(CONFIG)\inc\ejsByteCodeTable.h
DEPS_58 = $(DEPS_58) $(CONFIG)\inc\ejs.slots.h
DEPS_58 = $(DEPS_58) $(CONFIG)\inc\ejsCustomize.h
