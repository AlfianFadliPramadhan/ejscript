<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.7.3">
  <compounddef id="group___ejs_function" kind="group">
    <compoundname>EjsFunction</compoundname>
    <title>EjsFunction</title>
    <innerclass refid="struct_ejs_code" prot="public">EjsCode</innerclass>
    <innerclass refid="struct_ejs_ex" prot="public">EjsEx</innerclass>
      <sectiondef kind="func">
      <memberdef kind="function" id="group___ejs_function_1ga5bf8e2a9af6557492e6ba315d5a3188b" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>EjsFunction *</type>
        <definition>EjsFunction* ejsCreateFunction</definition>
        <argsstring>(Ejs *ejs, EjsString *name, cuchar *code, int codeLen, int numArgs, int numDefault, int numExceptions, struct EjsType *returnType, int attributes, struct EjsModule *module, EjsBlock *scope, int strict)</argsstring>
        <name>ejsCreateFunction</name>
        <param>
          <type>Ejs *</type>
          <declname>ejs</declname>
        </param>
        <param>
          <type>EjsString *</type>
          <declname>name</declname>
        </param>
        <param>
          <type>cuchar *</type>
          <declname>code</declname>
        </param>
        <param>
          <type>int</type>
          <declname>codeLen</declname>
        </param>
        <param>
          <type>int</type>
          <declname>numArgs</declname>
        </param>
        <param>
          <type>int</type>
          <declname>numDefault</declname>
        </param>
        <param>
          <type>int</type>
          <declname>numExceptions</declname>
        </param>
        <param>
          <type>struct EjsType *</type>
          <declname>returnType</declname>
        </param>
        <param>
          <type>int</type>
          <declname>attributes</declname>
        </param>
        <param>
          <type>struct EjsModule *</type>
          <declname>module</declname>
        </param>
        <param>
          <type>EjsBlock *</type>
          <declname>scope</declname>
        </param>
        <param>
          <type>int</type>
          <declname>strict</declname>
        </param>
        <briefdescription>
<para>Create a function object. </para>        </briefdescription>
        <detaileddescription>
<para><simplesect kind="par"><title><bold>Description</bold>:</title><para>This creates a function object and optionally associates byte code with the function. </para></simplesect>
<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>ejs</parametername>
</parameternamelist>
<parameterdescription>
<para>Ejs reference returned from <ref refid="group___ejs_1ga75cce70e794158ee54ddb800509060e0" kindref="member">ejsCreate</ref> </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>name</parametername>
</parameternamelist>
<parameterdescription>
<para>Function name used in stack backtraces. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>code</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to the byte code. The byte code is not copied so this must be a persistent pointer. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>codeLen</parametername>
</parameternamelist>
<parameterdescription>
<para>Length of the code. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>numArgs</parametername>
</parameternamelist>
<parameterdescription>
<para>Number of formal arguments to the function. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>numDefault</parametername>
</parameternamelist>
<parameterdescription>
<para>Number of default args to the function. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>numExceptions</parametername>
</parameternamelist>
<parameterdescription>
<para>Number of exception handlers </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>returnType</parametername>
</parameternamelist>
<parameterdescription>
<para>Return type of the function. Set to NULL for no defined type. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>attributes</parametername>
</parameternamelist>
<parameterdescription>
<para>Integer mask of access attributes. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>module</parametername>
</parameternamelist>
<parameterdescription>
<para>Reference to the module owning the function. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>scope</parametername>
</parameternamelist>
<parameterdescription>
<para>Reference to the chain of blocks that that comprises the lexical scope chain for this function. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>strict</parametername>
</parameternamelist>
<parameterdescription>
<para>Run code in strict mode (vs standard). </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>An initialized function object </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/mob/git/ejs/doc/api/ejs/staging/src/deps/ejs/ejs.h" line="2266"/>
      </memberdef>
      <memberdef kind="function" id="group___ejs_function_1ga7127ecf0788bd034597366ea9e8eb215" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool ejsIsFunction</definition>
        <argsstring>(Ejs *ejs, EjsAny *obj)</argsstring>
        <name>ejsIsFunction</name>
        <param>
          <type>Ejs *</type>
          <declname>ejs</declname>
        </param>
        <param>
          <type>EjsAny *</type>
          <declname>obj</declname>
        </param>
        <briefdescription>
<para>Determine if a variable is a function. </para>        </briefdescription>
        <detaileddescription>
<para>This will return true if the variable is a function of any kind, including methods, native and script functions or initializers. <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>obj</parametername>
</parameternamelist>
<parameterdescription>
<para>Variable to test </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>True if the variable is a function </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/mob/git/ejs/doc/api/ejs/staging/src/deps/ejs/ejs.h" line="2219"/>
      </memberdef>
      <memberdef kind="function" id="group___ejs_function_1gafe317233b001bbca1b86cedf96c3b5a7" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool ejsIsInitializer</definition>
        <argsstring>(Ejs *ejs, EjsAny *obj)</argsstring>
        <name>ejsIsInitializer</name>
        <param>
          <type>Ejs *</type>
          <declname>ejs</declname>
        </param>
        <param>
          <type>EjsAny *</type>
          <declname>obj</declname>
        </param>
        <briefdescription>
<para>Determine if the function is an initializer. </para>        </briefdescription>
        <detaileddescription>
<para>Initializers are special functions created by the compiler to do static and instance initialization of classes during construction. <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>obj</parametername>
</parameternamelist>
<parameterdescription>
<para>Object to test </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>True if the variable is an initializer </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/mob/git/ejs/doc/api/ejs/staging/src/deps/ejs/ejs.h" line="2237"/>
      </memberdef>
      <memberdef kind="function" id="group___ejs_function_1gab8d9707a7fb66beea580dab3f897a65d" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool ejsIsNativeFunction</definition>
        <argsstring>(Ejs *ejs, EjsAny *obj)</argsstring>
        <name>ejsIsNativeFunction</name>
        <param>
          <type>Ejs *</type>
          <declname>ejs</declname>
        </param>
        <param>
          <type>EjsAny *</type>
          <declname>obj</declname>
        </param>
        <briefdescription>
<para>Determine if the function is a native function. </para>        </briefdescription>
        <detaileddescription>
<para>Functions can be either native - meaning the implementation is via a C function, or can be scripted. <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>obj</parametername>
</parameternamelist>
<parameterdescription>
<para>Object to test </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>True if the variable is a native function. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/mob/git/ejs/doc/api/ejs/staging/src/deps/ejs/ejs.h" line="2228"/>
      </memberdef>
      <memberdef kind="function" id="group___ejs_function_1gad27776daa4c1446ecf1ea222d8ec5080" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>EjsAny *</type>
        <definition>EjsAny* ejsRunFunction</definition>
        <argsstring>(Ejs *ejs, EjsFunction *fn, EjsAny *thisObj, int argc, void *argv)</argsstring>
        <name>ejsRunFunction</name>
        <param>
          <type>Ejs *</type>
          <declname>ejs</declname>
        </param>
        <param>
          <type>EjsFunction *</type>
          <declname>fn</declname>
        </param>
        <param>
          <type>EjsAny *</type>
          <declname>thisObj</declname>
        </param>
        <param>
          <type>int</type>
          <declname>argc</declname>
        </param>
        <param>
          <type>void *</type>
          <declname>argv</declname>
        </param>
        <briefdescription>
<para>Run a function. </para>        </briefdescription>
        <detaileddescription>
<para><simplesect kind="par"><title><bold>Description</bold>:</title><para>Run a function with the given actual parameters </para></simplesect>
<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>ejs</parametername>
</parameternamelist>
<parameterdescription>
<para>Ejs reference returned from <ref refid="group___ejs_1ga75cce70e794158ee54ddb800509060e0" kindref="member">ejsCreate</ref> </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>fn</parametername>
</parameternamelist>
<parameterdescription>
<para>Function object to run </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>thisObj</parametername>
</parameternamelist>
<parameterdescription>
<para>Object to use as the &quot;this&quot; object when running the function. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>argc</parametername>
</parameternamelist>
<parameterdescription>
<para>Count of actual parameters </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>argv</parametername>
</parameternamelist>
<parameterdescription>
<para>Vector of actual parameters </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>The return value from the function. If an exception is thrown, NULL will be returned and ejs-&gt;exception will be set to the exception object. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/mob/git/ejs/doc/api/ejs/staging/src/deps/ejs/ejs.h" line="2299"/>
      </memberdef>
      <memberdef kind="function" id="group___ejs_function_1ga9b6990680a7a2201f9c67aa0f8ec7e16" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>EjsAny *</type>
        <definition>EjsAny* ejsRunFunctionBySlot</definition>
        <argsstring>(Ejs *ejs, EjsAny *obj, int slotNum, int argc, void *argv)</argsstring>
        <name>ejsRunFunctionBySlot</name>
        <param>
          <type>Ejs *</type>
          <declname>ejs</declname>
        </param>
        <param>
          <type>EjsAny *</type>
          <declname>obj</declname>
        </param>
        <param>
          <type>int</type>
          <declname>slotNum</declname>
        </param>
        <param>
          <type>int</type>
          <declname>argc</declname>
        </param>
        <param>
          <type>void *</type>
          <declname>argv</declname>
        </param>
        <briefdescription>
<para>Run a function by slot number. </para>        </briefdescription>
        <detaileddescription>
<para><simplesect kind="par"><title><bold>Description</bold>:</title><para>Run a function identified by slot number with the given actual parameters. This will run the function stored at <emphasis>slotNum</emphasis> in the <emphasis>obj</emphasis> variable. </para></simplesect>
<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>ejs</parametername>
</parameternamelist>
<parameterdescription>
<para>Ejs reference returned from <ref refid="group___ejs_1ga75cce70e794158ee54ddb800509060e0" kindref="member">ejsCreate</ref> </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>obj</parametername>
</parameternamelist>
<parameterdescription>
<para>Object that holds the function at its &quot;slotNum&quot; slot. Also use this object as the &quot;this&quot; object when running the function. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>slotNum</parametername>
</parameternamelist>
<parameterdescription>
<para>Slot number in <emphasis>obj</emphasis> that contains the function to run. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>argc</parametername>
</parameternamelist>
<parameterdescription>
<para>Count of actual parameters </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>argv</parametername>
</parameternamelist>
<parameterdescription>
<para>Vector of actual parameters </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>The return value from the function. If an exception is thrown, NULL will be returned and ejs-&gt;exception will be set to the exception object. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/mob/git/ejs/doc/api/ejs/staging/src/deps/ejs/ejs.h" line="2315"/>
      </memberdef>
      <memberdef kind="function" id="group___ejs_function_1ga5a7d2ad5dd3cf09e90d6288ac2ba73fc" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>EjsObj *</type>
        <definition>EjsObj* ejsRunInitializer</definition>
        <argsstring>(Ejs *ejs, struct EjsModule *module)</argsstring>
        <name>ejsRunInitializer</name>
        <param>
          <type>Ejs *</type>
          <declname>ejs</declname>
        </param>
        <param>
          <type>struct EjsModule *</type>
          <declname>module</declname>
        </param>
        <briefdescription>
<para>Run the initializer for a module. </para>        </briefdescription>
        <detaileddescription>
<para><simplesect kind="par"><title><bold>Description</bold>:</title><para>A module&apos;s initializer runs global code defined in the module </para></simplesect>
<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>ejs</parametername>
</parameternamelist>
<parameterdescription>
<para>Ejs reference returned from <ref refid="group___ejs_1ga75cce70e794158ee54ddb800509060e0" kindref="member">ejsCreate</ref> </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>module</parametername>
</parameternamelist>
<parameterdescription>
<para>Module object reference </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>The last expression result of global code executed </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/mob/git/ejs/doc/api/ejs/staging/src/deps/ejs/ejs.h" line="2285"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para>Function class. </para>    </briefdescription>
    <detaileddescription>
<para><simplesect kind="par"><title><bold>Description</bold>:</title><para>The Function type is used to represent closures, function expressions and class methods. It contains a reference to the code to execute, the execution scope and possibly a bound &quot;this&quot; reference. </para></simplesect>
<simplesect kind="par"><title><bold>API</bold> Stability:</title><para>Evolving</para></simplesect>
<simplesect kind="see"><para><ref refid="group___ejs_function" kindref="compound">EjsFunction</ref> <ref refid="group___ejs_function_1ga7127ecf0788bd034597366ea9e8eb215" kindref="member">ejsIsFunction</ref> <ref refid="group___ejs_function_1gab8d9707a7fb66beea580dab3f897a65d" kindref="member">ejsIsNativeFunction</ref> <ref refid="group___ejs_function_1gafe317233b001bbca1b86cedf96c3b5a7" kindref="member">ejsIsInitializer</ref> <ref refid="group___ejs_function_1ga5bf8e2a9af6557492e6ba315d5a3188b" kindref="member">ejsCreateFunction</ref> ejsCloneFunction <ref refid="group___ejs_function_1ga9b6990680a7a2201f9c67aa0f8ec7e16" kindref="member">ejsRunFunctionBySlot</ref> <ref refid="group___ejs_function_1gad27776daa4c1446ecf1ea222d8ec5080" kindref="member">ejsRunFunction</ref> <ref refid="group___ejs_function_1ga5a7d2ad5dd3cf09e90d6288ac2ba73fc" kindref="member">ejsRunInitializer</ref> </para></simplesect>
</para>    </detaileddescription>
  </compounddef>
</doxygen>
